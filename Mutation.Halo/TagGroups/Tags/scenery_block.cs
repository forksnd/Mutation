//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, version: 1, groupTag: "scen", parentGroupTag: "obje", name: "scenery", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class scenery_block : object_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Pathfinding", explanation: "Indicate whether, by default, we should create pathfinding data for this type of " +
    "scenery");
        
        [EditorMarkUpAttribute(displayName: "pathfinding policy")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_pathfinding_policy pathfinding_policy;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "Lightmapping", explanation: "Indicate whether, by default, how we should lightmap this type of scenery");
        
        [EditorMarkUpAttribute(displayName: "lightmapping policy")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_lightmapping_policy lightmapping_policy;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 120)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        public enum e_pathfinding_policy : short
        {
            
            [EditorMarkUpAttribute(displayName: "Pathfinding CUT-OUT")]
            pathfinding_cut_out = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Pathfinding STATIC")]
            pathfinding_static = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Pathfinding DYNAMIC")]
            pathfinding_dynamic = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Pathfinding NONE")]
            pathfinding_none = 0x3,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "physically simulates", tooltipText: "stimulates?")]
            physically_simulates = 0x1,
        }
        
        public enum e_lightmapping_policy : short
        {
            
            [EditorMarkUpAttribute(displayName: "Per-Vertex")]
            per_vertex = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "Per-Pixel (not implemented")]
            per_pixel__not_implemented = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Dynamic")]
            dynamic = 0x2,
        }
    }
}
