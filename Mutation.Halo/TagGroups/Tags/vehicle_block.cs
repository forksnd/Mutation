//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 276, tagFileSize: 332, version: 1, groupTag: "vehi", parentGroupTag: "unit", name: "vehicle", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class vehicle_block : unit_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "$$$ VEHICLE $$$");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "control")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_control control;
        
        [EditorMarkUpAttribute(displayName: "maximum forward speed")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_forward_speed;
        
        [EditorMarkUpAttribute(displayName: "maximum reverse speed")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_reverse_speed;
        
        [EditorMarkUpAttribute(displayName: "speed acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speed_acceleration;
        
        [EditorMarkUpAttribute(displayName: "speed deceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speed_deceleration;
        
        [EditorMarkUpAttribute(displayName: "maximum left turn")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_left_turn;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "maximum right turn (negative")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_right_turn__negative;
        
        [EditorMarkUpAttribute(displayName: "wheel circumference")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float wheel_circumference;
        
        [EditorMarkUpAttribute(displayName: "turn rate")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float turn_rate;
        
        [EditorMarkUpAttribute(displayName: "blur speed")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blur_speed;
        
        [EditorMarkUpAttribute(displayName: "specific type", tooltipText: "if your type corresponds to something in this list choose it")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_specific_type specific_type;
        
        [EditorMarkUpAttribute(displayName: "player training vehicle type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_player_training_vehicle_type player_training_vehicle_type;
        
        [EditorMarkUpAttribute(displayName: "flip message")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id flip_message;
        
        [EditorMarkUpAttribute(displayName: "turn scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float turn_scale;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "speed turn penalty power (0.5 .. 2")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speed_turn_penalty_power__0_5____2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "speed turn penalty (0 = none, 1 = can\'t turn at top speed")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speed_turn_penalty__0___none__1___can_t_turn_at_top_speed;
        
        [EditorMarkUpAttribute(displayName: "maximum left slide")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_left_slide;
        
        [EditorMarkUpAttribute(displayName: "maximum right slide")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_right_slide;
        
        [EditorMarkUpAttribute(displayName: "slide acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float slide_acceleration;
        
        [EditorMarkUpAttribute(displayName: "slide deceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float slide_deceleration;
        
        [EditorMarkUpAttribute(displayName: "minimum flipping angular velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_flipping_angular_velocity;
        
        [EditorMarkUpAttribute(displayName: "maximum flipping angular velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_flipping_angular_velocity;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "vehicle size", tooltipText: "The size determine what kind of seats in larger vehicles it may occupy (i.e. smal" +
    "l or large cargo seats)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_vehicle_size vehicle_size;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "fixed gun yaw")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fixed_gun_yaw;
        
        [EditorMarkUpAttribute(displayName: "fixed gun pitch")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fixed_gun_pitch;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "steering overdampening", explanation: "when the steering is off by more than the cusp angle\nthe steering will overcompen" +
    "sate more and more.  when it\nis less, it overcompensates less and less.  the exp" +
    "onent\nshould be something in the neighborhood of 2.0\n");
        
        [EditorMarkUpAttribute(displayName: "overdampen cusp angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float overdampen_cusp_angle;
        
        [EditorMarkUpAttribute(displayName: "overdampen exponent")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float overdampen_exponent;
        
        [EditorMarkUpAttribute(displayName: "crouch transition time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float crouch_transition_time;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "engine");
        
        [EditorMarkUpAttribute(displayName: "engine moment", tooltipText: "higher moments make engine spin up slower")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float engine_moment;
        
        [EditorMarkUpAttribute(displayName: "engine max angular velocity", tooltipText: "higher moments make engine spin up slower")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float engine_max_angular_velocity;
        
        [EditorMarkUpAttribute(displayName: "gears")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<gear_block> gears;
        
        [EditorMarkUpAttribute(displayName: "flying torque scale", tooltipText: "big vehicles need to scale this down.  0 defaults to 1, which is generally a good" +
    " value.  This is used with alien fighter physics")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flying_torque_scale;
        
        [EditorMarkUpAttribute(displayName: "seat enterance acceleration scale", tooltipText: "how much do we scale the force the biped the applies down on the seat when he ent" +
    "ers. 0 == no acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float seat_enterance_acceleration_scale;
        
        [EditorMarkUpAttribute(displayName: "seat exit accelersation scale", tooltipText: "how much do we scale the force the biped the applies down on the seat when he exi" +
    "ts. 0 == no acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float seat_exit_accelersation_scale;
        
        [PaddingAttribute(PaddingType.Useless, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "air friction deceleration", tooltipText: "human plane physics only. 0 is nothing.  1 is like thowing the engine to full rev" +
    "erse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float air_friction_deceleration;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "thrust scale", tooltipText: "human plane physics only. 0 is default (1)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float thrust_scale;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "sounds and effects");
        
        [EditorMarkUpAttribute(displayName: "suspension sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference suspension_sound;
        
        [EditorMarkUpAttribute(displayName: "crash sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference crash_sound;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "UNUSED")]
        [TagReferenceAttribute("foot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference unused;
        
        [EditorMarkUpAttribute(displayName: "special effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference special_effect;
        
        [EditorMarkUpAttribute(displayName: "unused effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference unused_effect;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "physics");
        
        [EditorMarkUpAttribute(displayName: "havok vehicle physics")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public havok_vehicle_physics_struct_block havok_vehicle_physics;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "speed wakes physics")]
            speed_wakes_physics = 0x1,
            
            [EditorMarkUpAttribute(displayName: "turn wakes physics")]
            turn_wakes_physics = 0x2,
            
            [EditorMarkUpAttribute(displayName: "driver power wakes physics")]
            driver_power_wakes_physics = 0x4,
            
            [EditorMarkUpAttribute(displayName: "gunner power wakes physics")]
            gunner_power_wakes_physics = 0x8,
            
            [EditorMarkUpAttribute(displayName: "control opposite speed sets brake")]
            control_opposite_speed_sets_brake = 0x10,
            
            [EditorMarkUpAttribute(displayName: "slide wakes physics")]
            slide_wakes_physics = 0x20,
            
            [EditorMarkUpAttribute(displayName: "kills riders at terminal velocity")]
            kills_riders_at_terminal_velocity = 0x40,
            
            [EditorMarkUpAttribute(displayName: "causes collision damage")]
            causes_collision_damage = 0x80,
            
            [EditorMarkUpAttribute(displayName: "ai weapon cannot rotate")]
            ai_weapon_cannot_rotate = 0x100,
            
            [EditorMarkUpAttribute(displayName: "ai does not require driver")]
            ai_does_not_require_driver = 0x200,
            
            [EditorMarkUpAttribute(displayName: "ai unused")]
            ai_unused = 0x400,
            
            [EditorMarkUpAttribute(displayName: "ai driver enable")]
            ai_driver_enable = 0x800,
            
            [EditorMarkUpAttribute(displayName: "ai driver flying")]
            ai_driver_flying = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "ai driver can-sidestep")]
            ai_driver_can_sidestep = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "ai driver hovering")]
            ai_driver_hovering = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "vehicle steers directly")]
            vehicle_steers_directly = 0x8000,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x10000,
            
            [EditorMarkUpAttribute(displayName: "has e-brake")]
            has_e_brake = 0x20000,
            
            [EditorMarkUpAttribute(displayName: "noncombat vehicle")]
            noncombat_vehicle = 0x40000,
            
            [EditorMarkUpAttribute(displayName: "no friction w/driver")]
            no_friction_w_driver = 0x80000,
            
            [EditorMarkUpAttribute(displayName: "can trigger automatic opening doors")]
            can_trigger_automatic_opening_doors = 0x100000,
            
            [EditorMarkUpAttribute(displayName: "autoaim when teamless")]
            autoaim_when_teamless = 0x200000,
        }
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "human tank")]
            human_tank = 0x0,
            
            [EditorMarkUpAttribute(displayName: "human jeep")]
            human_jeep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "human boat")]
            human_boat = 0x2,
            
            [EditorMarkUpAttribute(displayName: "human plane")]
            human_plane = 0x3,
            
            [EditorMarkUpAttribute(displayName: "alien scout")]
            alien_scout = 0x4,
            
            [EditorMarkUpAttribute(displayName: "alien fighter")]
            alien_fighter = 0x5,
            
            [EditorMarkUpAttribute(displayName: "turret")]
            turret = 0x6,
        }
        
        public enum e_control : short
        {
            
            [EditorMarkUpAttribute(displayName: "vehicle control normal")]
            vehicle_control_normal = 0x0,
            
            [EditorMarkUpAttribute(displayName: "vehicle control unused")]
            vehicle_control_unused = 0x1,
            
            [EditorMarkUpAttribute(displayName: "vehicle control tank")]
            vehicle_control_tank = 0x2,
        }
        
        public enum e_specific_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "ghost")]
            ghost = 0x1,
            
            [EditorMarkUpAttribute(displayName: "wraith")]
            wraith = 0x2,
            
            [EditorMarkUpAttribute(displayName: "spectre")]
            spectre = 0x3,
            
            [EditorMarkUpAttribute(displayName: "sentinel enforcer")]
            sentinel_enforcer = 0x4,
        }
        
        public enum e_player_training_vehicle_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "warthog")]
            warthog = 0x1,
            
            [EditorMarkUpAttribute(displayName: "warthog turret")]
            warthog_turret = 0x2,
            
            [EditorMarkUpAttribute(displayName: "ghost")]
            ghost = 0x3,
            
            [EditorMarkUpAttribute(displayName: "banshee")]
            banshee = 0x4,
            
            [EditorMarkUpAttribute(displayName: "tank")]
            tank = 0x5,
            
            [EditorMarkUpAttribute(displayName: "wraith")]
            wraith = 0x6,
        }
        
        public enum e_vehicle_size : short
        {
            
            [EditorMarkUpAttribute(displayName: "small")]
            small = 0x0,
            
            [EditorMarkUpAttribute(displayName: "large")]
            large = 0x1,
        }
    }
    
    #region gear_block
    [TagBlockDefinitionAttribute(cacheFileSize: 68, tagFileSize: 68, alignment: 4, maxBlockCount: 16)]
    public class gear_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "loaded torque");
        
        [EditorMarkUpAttribute(displayName: "loaded torque curve")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public torque_curve_struct_block loaded_torque_curve;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "cruising torque");
        
        [EditorMarkUpAttribute(displayName: "cruising torque curve")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public torque_curve_struct_block cruising_torque_curve;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "gearing");
        
        [EditorMarkUpAttribute(displayName: "min time to upshift", tooltipText: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float min_time_to_upshift;
        
        [EditorMarkUpAttribute(displayName: "engine up-shift scale", tooltipText: "0-1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float engine_up_shift_scale;
        
        [EditorMarkUpAttribute(displayName: "gear ratio")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float gear_ratio;
        
        [EditorMarkUpAttribute(displayName: "min time to downshift", tooltipText: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float min_time_to_downshift;
        
        [EditorMarkUpAttribute(displayName: "engine down-shift scale", tooltipText: "0-1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float engine_down_shift_scale;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region torque_curve_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 24, tagFileSize: 24, alignment: 4, maxBlockCount: 1)]
    public class torque_curve_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "min torque")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float min_torque;
        
        [EditorMarkUpAttribute(displayName: "max torque")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_torque;
        
        [EditorMarkUpAttribute(displayName: "peak torque scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float peak_torque_scale;
        
        [EditorMarkUpAttribute(displayName: "past peak torque exponent")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float past_peak_torque_exponent;
        
        [EditorMarkUpAttribute(displayName: "torque at max angular velocity", tooltipText: "generally 0 for loading torque and something less than max torque for cruising to" +
    "rque")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float torque_at_max_angular_velocity;
        
        [EditorMarkUpAttribute(displayName: "torque at 2x max angular velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float torque_at_2x_max_angular_velocity;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region havok_vehicle_physics_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 84, tagFileSize: 84, alignment: 4, maxBlockCount: 1)]
    public class havok_vehicle_physics_struct_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "ground friction", tooltipText: " for friction based vehicles only")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_friction;
        
        [EditorMarkUpAttribute(displayName: "ground depth", tooltipText: " for friction based vehicles only")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_depth;
        
        [EditorMarkUpAttribute(displayName: "ground damp factor", tooltipText: " for friction based vehicles only")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_damp_factor;
        
        [EditorMarkUpAttribute(displayName: "ground moving friction", tooltipText: " for friction based vehicles only")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_moving_friction;
        
        [EditorMarkUpAttribute(displayName: "ground maximum slope 0", tooltipText: "degrees 0-90")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_maximum_slope_0;
        
        [EditorMarkUpAttribute(displayName: "ground maximum slope 1", tooltipText: "degrees 0-90.  and greater than slope 0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ground_maximum_slope_1;
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "anti_gravity_bank_lift", tooltipText: "lift per WU.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float anti_gravity_bank_lift;
        
        [EditorMarkUpAttribute(displayName: "steering_bank_reaction_scale", tooltipText: "how quickly we bank when we steer ")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float steering_bank_reaction_scale;
        
        [EditorMarkUpAttribute(displayName: "gravity scale", tooltipText: "value of 0 defaults to 1.  .5 is half gravity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float gravity_scale;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "radius", tooltipText: "generated from the radius of the hkConvexShape for this vehicle")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float radius;
        
        [EditorMarkUpAttribute(displayName: "anti gravity points")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<anti_gravity_point_definition_block> anti_gravity_points;
        
        [EditorMarkUpAttribute(displayName: "friction points")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<friction_point_definition_block> friction_points;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape phantom shape")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vehicle_phantom_shape_block> _shape_phantom_shape;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "invalid")]
            invalid = 0x1,
        }
    }
    #endregion
    
    #region anti_gravity_point_definition_block
    [TagBlockDefinitionAttribute(cacheFileSize: 76, tagFileSize: 76, alignment: 4, maxBlockCount: 16)]
    public class anti_gravity_point_definition_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id marker_name;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "antigrav strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_strength;
        
        [EditorMarkUpAttribute(displayName: "antigrav offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_offset;
        
        [EditorMarkUpAttribute(displayName: "antigrav height")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_height;
        
        [EditorMarkUpAttribute(displayName: "antigrav damp factor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_damp_factor;
        
        [EditorMarkUpAttribute(displayName: "antigrav normal k1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_normal_k1;
        
        [EditorMarkUpAttribute(displayName: "antigrav normal k0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float antigrav_normal_k0;
        
        [EditorMarkUpAttribute(displayName: "radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float radius;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "damage source region name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id damage_source_region_name;
        
        [EditorMarkUpAttribute(displayName: "default state error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float default_state_error;
        
        [EditorMarkUpAttribute(displayName: "minor damage error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minor_damage_error;
        
        [EditorMarkUpAttribute(displayName: "medium damage error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float medium_damage_error;
        
        [EditorMarkUpAttribute(displayName: "major damage error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float major_damage_error;
        
        [EditorMarkUpAttribute(displayName: "destroyed state error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float destroyed_state_error;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "gets damage from region")]
            gets_damage_from_region = 0x1,
        }
    }
    #endregion
    
    #region friction_point_definition_block
    [TagBlockDefinitionAttribute(cacheFileSize: 76, tagFileSize: 76, alignment: 4, maxBlockCount: 16)]
    public class friction_point_definition_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id marker_name;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "fraction of total mass", tooltipText: "(0.0-1.0) fraction of total vehicle mass")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fraction_of_total_mass;
        
        [EditorMarkUpAttribute(displayName: "radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float radius;
        
        [EditorMarkUpAttribute(displayName: "damaged radius", tooltipText: "radius when the tire is blown off.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float damaged_radius;
        
        [EditorMarkUpAttribute(displayName: "friction type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_friction_type friction_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "moving friction velocity diff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float moving_friction_velocity_diff;
        
        [EditorMarkUpAttribute(displayName: "e-brake moving friction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float e_brake_moving_friction;
        
        [EditorMarkUpAttribute(displayName: "e-brake friction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float e_brake_friction;
        
        [EditorMarkUpAttribute(displayName: "e-brake moving friction vel diff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float e_brake_moving_friction_vel_diff;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "collision global material name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id collision_global_material_name;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "friction point destruction data");
        
        [EditorMarkUpAttribute(displayName: "model state destroyed", tooltipText: "only need point can destroy flag set")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_model_state_destroyed model_state_destroyed;
        
        [EditorMarkUpAttribute(displayName: "region name", tooltipText: "only need point can destroy flag set")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id region_name;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "gets damage from region")]
            gets_damage_from_region = 0x1,
            
            [EditorMarkUpAttribute(displayName: "powered")]
            powered = 0x2,
            
            [EditorMarkUpAttribute(displayName: "front turning")]
            front_turning = 0x4,
            
            [EditorMarkUpAttribute(displayName: "rear turning")]
            rear_turning = 0x8,
            
            [EditorMarkUpAttribute(displayName: "attached to e-brake")]
            attached_to_e_brake = 0x10,
            
            [EditorMarkUpAttribute(displayName: "can be destroyed")]
            can_be_destroyed = 0x20,
        }
        
        public enum e_friction_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x0,
            
            [EditorMarkUpAttribute(displayName: "forward")]
            forward = 0x1,
        }
        
        public enum e_model_state_destroyed : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "minor damage")]
            minor_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "medium damage")]
            medium_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "major damage")]
            major_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "destroyed")]
            destroyed = 0x4,
        }
    }
    #endregion
    
    #region vehicle_phantom_shape_block
    [TagBlockDefinitionAttribute(cacheFileSize: 672, tagFileSize: 672, alignment: 16, maxBlockCount: 1)]
    public class vehicle_phantom_shape_block
    {
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short size;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short count;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "child shapes size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int child_shapes_size;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "child shapes capacity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int child_shapes_capacity;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_shape_type shape_type;
        
        // get_block_proc=0x0050e430, is_valid_source_block_proc=0x0050e4e0
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shape;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int collision_filter;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_shape_type shape_type1;
        
        // get_block_proc=0x0050e430, is_valid_source_block_proc=0x0050e4e0
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shape1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int collision_filter1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_shape_type shape_type2;
        
        // get_block_proc=0x0050e430, is_valid_source_block_proc=0x0050e4e0
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shape2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int collision_filter2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_shape_type shape_type3;
        
        // get_block_proc=0x0050e430, is_valid_source_block_proc=0x0050e4e0
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "shape")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shape3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int collision_filter3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "multisphere count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int multisphere_count;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "x0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float x0;
        
        [EditorMarkUpAttribute(displayName: "x1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float x1;
        
        [EditorMarkUpAttribute(displayName: "y0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float y0;
        
        [EditorMarkUpAttribute(displayName: "y1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float y1;
        
        [EditorMarkUpAttribute(displayName: "z0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float z0;
        
        [EditorMarkUpAttribute(displayName: "z1")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float z1;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short size1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short count1;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "num spheres")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int num_spheres;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere1;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere2;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere3;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding9;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere4;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding10;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere5;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding11;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere6;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding12;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere7;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding13;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding14;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short size2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short count2;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding15;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "num spheres")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int num_spheres1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere8;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding16;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere9;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding17;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere10;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding18;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere11;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding19;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere12;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding20;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere13;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding21;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere14;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding22;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere15;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding23;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding24;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short size3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short count3;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding25;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "num spheres")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int num_spheres2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere16;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding26;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere17;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding27;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere18;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding28;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere19;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding29;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere20;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding30;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere21;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding31;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere22;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding32;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere23;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding33;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding34;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short size4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short count4;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding35;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "num spheres")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int num_spheres3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere24;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding36;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere25;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding37;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere26;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding38;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere27;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding39;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere28;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding40;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere29;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding41;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere30;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding42;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sphere")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d sphere31;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding43;
        
        public enum e_shape_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "sphere")]
            sphere = 0x0,
            
            [EditorMarkUpAttribute(displayName: "pill")]
            pill = 0x1,
            
            [EditorMarkUpAttribute(displayName: "box")]
            box = 0x2,
            
            [EditorMarkUpAttribute(displayName: "triangle")]
            triangle = 0x3,
            
            [EditorMarkUpAttribute(displayName: "polyhedron")]
            polyhedron = 0x4,
            
            [EditorMarkUpAttribute(displayName: "multi sphere")]
            multi_sphere = 0x5,
            
            [EditorMarkUpAttribute(displayName: "unused 0")]
            unused_0 = 0x6,
            
            [EditorMarkUpAttribute(displayName: "unused 1")]
            unused_1 = 0x7,
            
            [EditorMarkUpAttribute(displayName: "unused 2")]
            unused_2 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "unused 3")]
            unused_3 = 0x9,
            
            [EditorMarkUpAttribute(displayName: "unused 4")]
            unused_4 = 0xa,
            
            [EditorMarkUpAttribute(displayName: "unused 5")]
            unused_5 = 0xb,
            
            [EditorMarkUpAttribute(displayName: "unused 6")]
            unused_6 = 0xc,
            
            [EditorMarkUpAttribute(displayName: "unused 7")]
            unused_7 = 0xd,
            
            [EditorMarkUpAttribute(displayName: "list")]
            list = 0xe,
            
            [EditorMarkUpAttribute(displayName: "mopp")]
            mopp = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "has aabb phantom")]
            has_aabb_phantom = 0x1,
        }
    }
    #endregion
}
