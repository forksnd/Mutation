//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 96, tagFileSize: 152, version: 1, groupTag: "devi", parentGroupTag: "obje", name: "device", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class device_block : object_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "$$$ DEVICE $$$");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "power transition time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float power_transition_time;
        
        [EditorMarkUpAttribute(displayName: "power acceleration time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float power_acceleration_time;
        
        [EditorMarkUpAttribute(displayName: "position transition time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float position_transition_time;
        
        [EditorMarkUpAttribute(displayName: "position acceleration time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float position_acceleration_time;
        
        [EditorMarkUpAttribute(displayName: "depowered position transition time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float depowered_position_transition_time;
        
        [EditorMarkUpAttribute(displayName: "depowered position acceleration time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float depowered_position_acceleration_time;
        
        [EditorMarkUpAttribute(displayName: "lightmap flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_lightmap_flags lightmap_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "open (up")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference open__up;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "close (down")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference close__down;
        
        [EditorMarkUpAttribute(displayName: "opened")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference opened;
        
        [EditorMarkUpAttribute(displayName: "closed")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference closed;
        
        [EditorMarkUpAttribute(displayName: "depowered")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference depowered;
        
        [EditorMarkUpAttribute(displayName: "repowered")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference repowered;
        
        [EditorMarkUpAttribute(displayName: "delay time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float delay_time;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "delay effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference delay_effect;
        
        [EditorMarkUpAttribute(displayName: "automatic activation radius", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float automatic_activation_radius;
        
        [PaddingAttribute(PaddingType.Useless, 112)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "position loops")]
            position_loops = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "(unused")]
            _unused = 0x2,
            
            [EditorMarkUpAttribute(displayName: "allow interpolation")]
            allow_interpolation = 0x4,
        }
        
        [FlagsAttribute()]
        public enum b_lightmap_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t use in lightmap")]
            don_t_use_in_lightmap = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t use in lightprobe")]
            don_t_use_in_lightprobe = 0x2,
        }
    }
}
