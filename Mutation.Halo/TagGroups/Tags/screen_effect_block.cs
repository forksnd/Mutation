//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 144, tagFileSize: 156, version: 4, groupTag: "egor", parentGroupTag: "", name: "screen_effect", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class screen_effect_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "SCREEN EFFECT", explanation: "A screen effect is essentially a collection of pass references, each one correspo" +
    "nding to a shader pass reference from the template. Note that only shader passes" +
    " in the TRANSPARENT layer are considered during screen effect rendering.");
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shader;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "pass references")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<rasterizer_screen_effect_pass_reference_block> pass_references;
    }
    
    #region rasterizer_screen_effect_pass_reference_block
    [TagBlockDefinitionAttribute(cacheFileSize: 172, tagFileSize: 172, alignment: 4, maxBlockCount: 8)]
    public class rasterizer_screen_effect_pass_reference_block
    {
        
        [EditorMarkUpAttribute(displayName: "explanation")]
        [TagDataAttribute(maxSize: 65535, alignment: 4, maxSizeString: "UNSIGNED_SHORT_MAX")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData explanation;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "IMPLEMENTATIONS", explanation: "Used to control which shader pass implementations are used depending on whether t" +
    "he primary and/or secondary external inputs are greater than zero. An implementa" +
    "tion of -1 will not draw anything.");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "layer pass index", unitsSpecifier: "leave as -1 unless debugging")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short layer_pass_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "primary=0 and secondary=0", unitsSpecifier: "implementation index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte primary_0_and_secondary_0;
        
        [EditorMarkUpAttribute(displayName: "primary>0 and secondary=0", unitsSpecifier: "implementation index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte primary_0_and_secondary_01;
        
        [EditorMarkUpAttribute(displayName: "primary=0 and secondary>0", unitsSpecifier: "implementation index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte primary_0_and_secondary_02;
        
        [EditorMarkUpAttribute(displayName: "primary>0 and secondary>0", unitsSpecifier: "implementation index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte primary_0_and_secondary_03;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "TEXCOORD GENERATION", explanation: @"* DEFAULT: Use for mask bitmaps that are mirrored and offset through the texcoords supplied to the screen effect (e.g. through the weapon HUD interface). The shader system must handle scaling.

* VIEWPORT NORMALIZED: Use when copying from texaccum or some other buffer or when applying a texture that is not an interface mask (e.g. another kind of mask, a noise map, etc. which is not mirrored or offset through the weapon HUD interface). Texture coordinates will range from [0,1][0,1] within the viewport, and the shader system must handle scaling if the bitmap is a linear target or an interface bitmap.

* VIEWPORT RELATIVE: Should not be used! This mode was necessary before we had he ability for the shader system to scale by texture resolution. Texture coordinates will range from [0,viewport_size_x][0,viewport_size_y] within the viewport.

* FRAMEBUFFER RELATIVE: Use when copying from the framebuffer. Texture coordinates will range from [viewport_bounds.x0,viewport_bounds.x1][viewport_bounds.y0,viewport_bounds.y1] within the viewport. Let the shader system assume normalized [0,1] coordinate range.

* ZERO: Use when doing dependent-z reads. Texture coordinates will be zero before applying offset (in advanced control block). Offset should be {1/(z_max-z_min), 0, -z_min/(z_max-z_min), 0} where z_min and z_max are in world units, and the ""xy scaled by z_far"" flag should be checked.");
        
        [EditorMarkUpAttribute(displayName: "stage 0 mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_stage_0_mode stage_0_mode;
        
        [EditorMarkUpAttribute(displayName: "stage 1 mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_stage_0_mode stage_1_mode;
        
        [EditorMarkUpAttribute(displayName: "stage 2 mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_stage_0_mode stage_2_mode;
        
        [EditorMarkUpAttribute(displayName: "stage 3 mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_stage_0_mode stage_3_mode;
        
        [EditorMarkUpAttribute(displayName: "advanced control")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<rasterizer_screen_effect_texcoord_generation_advanced_control_block> advanced_control;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "TARGET");
        
        [EditorMarkUpAttribute(displayName: "target")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_target target;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "convolution")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<rasterizer_screen_effect_convolution_block> convolution;
        
        public enum e_stage_0_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "viewport normalized")]
            viewport_normalized = 0x1,
            
            [EditorMarkUpAttribute(displayName: "viewport relative")]
            viewport_relative = 0x2,
            
            [EditorMarkUpAttribute(displayName: "framebuffer relative")]
            framebuffer_relative = 0x3,
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x4,
        }
        
        public enum e_target : short
        {
            
            [EditorMarkUpAttribute(displayName: "framebuffer")]
            framebuffer = 0x0,
            
            [EditorMarkUpAttribute(displayName: "texaccum")]
            texaccum = 0x1,
            
            [EditorMarkUpAttribute(displayName: "texaccum small")]
            texaccum_small = 0x2,
            
            [EditorMarkUpAttribute(displayName: "texaccum tiny")]
            texaccum_tiny = 0x3,
            
            [EditorMarkUpAttribute(displayName: "copy fb to texaccum")]
            copy_fb_to_texaccum = 0x4,
        }
    }
    #endregion
    
    #region rasterizer_screen_effect_texcoord_generation_advanced_control_block
    [TagBlockDefinitionAttribute(cacheFileSize: 72, tagFileSize: 72, alignment: 4, maxBlockCount: 1)]
    public class rasterizer_screen_effect_texcoord_generation_advanced_control_block
    {
        
        [EditorMarkUpAttribute(displayName: "stage 0 flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_stage_0_flags stage_0_flags;
        
        [EditorMarkUpAttribute(displayName: "stage 1 flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_stage_0_flags stage_1_flags;
        
        [EditorMarkUpAttribute(displayName: "stage 2 flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_stage_0_flags stage_2_flags;
        
        [EditorMarkUpAttribute(displayName: "stage 3 flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_stage_0_flags stage_3_flags;
        
        [EditorMarkUpAttribute(displayName: "stage 0 offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPlane3d stage_0_offset;
        
        [EditorMarkUpAttribute(displayName: "stage 1 offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPlane3d stage_1_offset;
        
        [EditorMarkUpAttribute(displayName: "stage 2 offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPlane3d stage_2_offset;
        
        [EditorMarkUpAttribute(displayName: "stage 3 offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPlane3d stage_3_offset;
        
        [FlagsAttribute()]
        public enum b_stage_0_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "xy scaled by z_far")]
            xy_scaled_by_z_far = 0x1,
        }
    }
    #endregion
    
    #region rasterizer_screen_effect_convolution_block
    [TagBlockDefinitionAttribute(cacheFileSize: 92, tagFileSize: 92, alignment: 4, maxBlockCount: 2)]
    public class rasterizer_screen_effect_convolution_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "CONVOLUTION", explanation: @"Convolution blurs the target of this pass reference to the SCREEN EFFECT CONVOLUTION buffer, which is accessible in the shader system through a texture extern. It is not cheap especially for large convolution amounts, so please use it sparingly!! Note that the resolution will be clamped to 64x64 minimum and 768000 pixels total maximum.");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "convolution amount", unitsSpecifier: "[0,+inf)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float convolution_amount;
        
        [EditorMarkUpAttribute(displayName: "filter scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float filter_scale;
        
        [EditorMarkUpAttribute(displayName: "filter box factor", unitsSpecifier: "[0,1] not used for zoom")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float filter_box_factor;
        
        [EditorMarkUpAttribute(displayName: "zoom falloff radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float zoom_falloff_radius;
        
        [EditorMarkUpAttribute(displayName: "zoom cutoff radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float zoom_cutoff_radius;
        
        [EditorMarkUpAttribute(displayName: "resolution scale", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float resolution_scale;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "only when primary is active")]
            only_when_primary_is_active = 0x1,
            
            [EditorMarkUpAttribute(displayName: "only when secondary is active")]
            only_when_secondary_is_active = 0x2,
            
            [EditorMarkUpAttribute(displayName: "predator zoom")]
            predator_zoom = 0x4,
        }
    }
    #endregion
}
