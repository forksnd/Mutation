//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 44, tagFileSize: 60, version: 3, groupTag: "lsnd", parentGroupTag: "", name: "sound_looping", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class sound_looping_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "marty\'s music time", unitsSpecifier: " seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float marty_s_music_time;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float _noNameField0;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _noNameField1;
        
        [EditorMarkUpAttribute(displayName: "tracks", tooltipText: "tracks play in parallel and loop continuously for the duration of the looping sou" +
    "nd.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<looping_sound_track_block> tracks;
        
        [EditorMarkUpAttribute(displayName: "detail sounds", tooltipText: "detail sounds play at random throughout the duration of the looping sound.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<looping_sound_detail_block> detail_sounds;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "deafening to AIs", tooltipText: "when used as a background stereo track, causes nearby AIs to be unable to hear")]
            deafening_to_ais = 0x1,
            
            [EditorMarkUpAttribute(displayName: "not a loop", tooltipText: "this is a collection of permutations strung together that should play once then s" +
    "top.")]
            not_a_loop = 0x2,
            
            [EditorMarkUpAttribute(displayName: "stops music", tooltipText: "all other music loops will stop when this one starts.")]
            stops_music = 0x4,
            
            [EditorMarkUpAttribute(displayName: "always spatialize", tooltipText: "always play as 3d sound, even in first person")]
            always_spatialize = 0x8,
            
            [EditorMarkUpAttribute(displayName: "synchronize playback", tooltipText: "synchronizes playback with other looping sounds attached to the owner of this sou" +
    "nd")]
            synchronize_playback = 0x10,
            
            [EditorMarkUpAttribute(displayName: "synchronize tracks")]
            synchronize_tracks = 0x20,
            
            [EditorMarkUpAttribute(displayName: "fake spatialization with distance")]
            fake_spatialization_with_distance = 0x40,
            
            [EditorMarkUpAttribute(displayName: "combine all 3d playback")]
            combine_all_3d_playback = 0x80,
        }
    }
    
    #region looping_sound_track_block
    [TagBlockDefinitionAttribute(cacheFileSize: 88, tagFileSize: 88, alignment: 4, maxBlockCount: 3)]
    public class looping_sound_track_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "gain", unitsSpecifier: "dB")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float gain;
        
        [EditorMarkUpAttribute(displayName: "fade in duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fade_in_duration;
        
        [EditorMarkUpAttribute(displayName: "fade out duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fade_out_duration;
        
        [EditorMarkUpAttribute(displayName: "in")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference @in;
        
        [EditorMarkUpAttribute(displayName: "loop")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference loop;
        
        [EditorMarkUpAttribute(displayName: "out")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference @out;
        
        [EditorMarkUpAttribute(displayName: "alt loop")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference alt_loop;
        
        [EditorMarkUpAttribute(displayName: "alt out")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference alt_out;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "output effect")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_output_effect output_effect;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "alt trans in")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference alt_trans_in;
        
        [EditorMarkUpAttribute(displayName: "alt trans out")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference alt_trans_out;
        
        [EditorMarkUpAttribute(displayName: "alt crossfade duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float alt_crossfade_duration;
        
        [EditorMarkUpAttribute(displayName: "alt fade out duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float alt_fade_out_duration;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "fade in at start", tooltipText: "the loop sound should fade in while the start sound is playing.")]
            fade_in_at_start = 0x1,
            
            [EditorMarkUpAttribute(displayName: "fade out at stop", tooltipText: "the loop sound should fade out while the stop sound is playing.")]
            fade_out_at_stop = 0x2,
            
            [EditorMarkUpAttribute(displayName: "crossfade alt loop", tooltipText: "when the sound changes to the alternate version,  .")]
            crossfade_alt_loop = 0x4,
            
            [EditorMarkUpAttribute(displayName: "master surround sound track")]
            master_surround_sound_track = 0x8,
            
            [EditorMarkUpAttribute(displayName: "fade out at alt stop")]
            fade_out_at_alt_stop = 0x10,
        }
        
        public enum e_output_effect : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "output front speakers")]
            output_front_speakers = 0x1,
            
            [EditorMarkUpAttribute(displayName: "output rear speakers")]
            output_rear_speakers = 0x2,
            
            [EditorMarkUpAttribute(displayName: "output center speakers")]
            output_center_speakers = 0x3,
        }
    }
    #endregion
    
    #region looping_sound_detail_block
    [TagBlockDefinitionAttribute(cacheFileSize: 52, tagFileSize: 52, alignment: 4, maxBlockCount: 12)]
    public class looping_sound_detail_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(displayName: "sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference sound;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "frequency of play");
        
        [EditorMarkUpAttribute(displayName: "random period bounds", unitsSpecifier: "seconds", tooltipText: "the time between successive playings of this sound will be randomly selected from" +
    " this range.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds random_period_bounds;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float _noNameField0;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "random spatialization", explanation: @"if the sound specified above is not stereo it will be randomly spatialized according to the following constraints. if both lower and upper bounds are zero for any of the following fields, the sound's position will be randomly selected from all possible directions or distances.");
        
        [EditorMarkUpAttribute(displayName: "yaw bounds", unitsSpecifier: "degrees", tooltipText: "the sound\'s position along the horizon will be randomly selected from this range." +
    "")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds yaw_bounds;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "pitch bounds", unitsSpecifier: "degrees", tooltipText: "the sound\'s position above (positive values) or below (negative values) the horiz" +
    "on will be randomly selected from this range.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds pitch_bounds;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "distance bounds", unitsSpecifier: "world units", tooltipText: "the sound\'s distance (from its spatialized looping sound or from the listener if " +
    "the looping sound is stereo) will be randomly selected from this range.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds distance_bounds;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t play with alternate")]
            don_t_play_with_alternate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t play without alternate")]
            don_t_play_without_alternate = 0x2,
            
            [EditorMarkUpAttribute(displayName: "start immediately with loop")]
            start_immediately_with_loop = 0x4,
        }
    }
    #endregion
}
