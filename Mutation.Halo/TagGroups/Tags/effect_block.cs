//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 48, tagFileSize: 64, version: 4, groupTag: "effe", parentGroupTag: "", name: "effect", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class effect_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "loop start event")]
        [BlockIndexAttribute(blockName: "effect_event_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short loop_start_event;
        
        [PaddingAttribute(PaddingType.Skip, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "locations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<effect_locations_block> locations;
        
        [EditorMarkUpAttribute(displayName: "events")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<effect_event_block> events;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Looping Sound");
        
        [EditorMarkUpAttribute(displayName: "looping sound")]
        [TagReferenceAttribute("lsnd")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference looping_sound;
        
        [EditorMarkUpAttribute(displayName: "location")]
        [BlockIndexAttribute(blockName: "effect_locations_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short location;
        
        [PaddingAttribute(PaddingType.Skip, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "always play distance")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float always_play_distance;
        
        [EditorMarkUpAttribute(displayName: "never play distance")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float never_play_distance;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "deleted when attachment deactivates")]
            deleted_when_attachment_deactivates = 0x1,
        }
    }
    
    #region effect_event_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 32)]
    public class effect_event_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "skip fraction", tooltipText: "chance that this event will be skipped entirely")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "delay bounds", unitsSpecifier: "seconds", tooltipText: "delay before this event takes place")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds delay_bounds;
        
        [EditorMarkUpAttribute(displayName: "duration bounds", unitsSpecifier: "seconds", tooltipText: "duration of this event")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds duration_bounds;
        
        [EditorMarkUpAttribute(displayName: "parts")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<effect_part_block> parts;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "beams")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<beam_block> beams;
        
        [EditorMarkUpAttribute(displayName: "accelerations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<effect_accelerations_block> accelerations;
        
        [EditorMarkUpAttribute(displayName: "particle systems")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<particle_system_definition_block_new> particle_systems;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "disabled for debugging")]
            disabled_for_debugging = 0x1,
        }
    }
    #endregion
    
    #region effect_part_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 32)]
    public class effect_part_block
    {
        
        [EditorMarkUpAttribute(displayName: "create in")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_create_in create_in;
        
        [EditorMarkUpAttribute(displayName: "create in")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_create_in1 create_in1;
        
        [EditorMarkUpAttribute(displayName: "location")]
        [BlockIndexAttribute(blockName: "effect_locations_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short location;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "type")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference type;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "velocity bounds", unitsSpecifier: "world units per second", tooltipText: "initial velocity along the location\'s forward, for decals the distance at which d" +
    "ecal is created (defaults to 0.5)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds velocity_bounds;
        
        [EditorMarkUpAttribute(displayName: "velocity cone angle", unitsSpecifier: "degrees", tooltipText: "initial velocity will be inside the cone defined by this angle.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float velocity_cone_angle;
        
        [EditorMarkUpAttribute(displayName: "angular velocity bounds", unitsSpecifier: "degrees per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds angular_velocity_bounds;
        
        [EditorMarkUpAttribute(displayName: "radius modifier bounds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds radius_modifier_bounds;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "SCALE MODIFIERS");
        
        [EditorMarkUpAttribute(displayName: "A scales values", unitsSpecifier: "")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_a_scales_values a_scales_values;
        
        [EditorMarkUpAttribute(displayName: "B scales values", unitsSpecifier: "")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_a_scales_values b_scales_values;
        
        public enum e_create_in : short
        {
            
            [EditorMarkUpAttribute(displayName: "any environment")]
            any_environment = 0x0,
            
            [EditorMarkUpAttribute(displayName: "air only")]
            air_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "water only")]
            water_only = 0x2,
            
            [EditorMarkUpAttribute(displayName: "space only")]
            space_only = 0x3,
        }
        
        public enum e_create_in1 : short
        {
            
            [EditorMarkUpAttribute(displayName: "either mode")]
            either_mode = 0x0,
            
            [EditorMarkUpAttribute(displayName: "violent mode only")]
            violent_mode_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "nonviolent mode only")]
            nonviolent_mode_only = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "face down regardless of location (decals")]
            face_down_regardless_of_location__decals = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "offset origin away from geometry (lights")]
            offset_origin_away_from_geometry__lights = 0x2,
            
            [EditorMarkUpAttribute(displayName: "never attached to object")]
            never_attached_to_object = 0x4,
            
            [EditorMarkUpAttribute(displayName: "disabled for debugging")]
            disabled_for_debugging = 0x8,
            
            [EditorMarkUpAttribute(displayName: "draw regardless of distance")]
            draw_regardless_of_distance = 0x10,
        }
        
        [FlagsAttribute()]
        public enum b_a_scales_values : uint
        {
            
            [EditorMarkUpAttribute(displayName: "velocity")]
            velocity = 0x1,
            
            [EditorMarkUpAttribute(displayName: "velocity delta")]
            velocity_delta = 0x2,
            
            [EditorMarkUpAttribute(displayName: "velocity cone angle")]
            velocity_cone_angle = 0x4,
            
            [EditorMarkUpAttribute(displayName: "angular velocity")]
            angular_velocity = 0x8,
            
            [EditorMarkUpAttribute(displayName: "angular velocity delta")]
            angular_velocity_delta = 0x10,
            
            [EditorMarkUpAttribute(displayName: "type-specific scale")]
            type_specific_scale = 0x20,
        }
    }
    #endregion
    
    #region beam_block
    [TagBlockDefinitionAttribute(cacheFileSize: 60, tagFileSize: 60, alignment: 4, maxBlockCount: 1024)]
    public class beam_block
    {
        
        [EditorMarkUpAttribute(displayName: "shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shader;
        
        [EditorMarkUpAttribute(displayName: "location")]
        [BlockIndexAttribute(blockName: "effect_locations_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short location;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "COLOR", explanation: "tint color of the beam");
        
        [EditorMarkUpAttribute(displayName: "color")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public color_function_struct_block color;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "ALPHA", explanation: "how much to fade out beam");
        
        [EditorMarkUpAttribute(displayName: "alpha")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block alpha;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "WIDTH", explanation: "how wide in world units");
        
        [EditorMarkUpAttribute(displayName: "width")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block width;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "LENGTH", explanation: "how long in world units");
        
        [EditorMarkUpAttribute(displayName: "length")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block length;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "YAW", explanation: "rotate the marker");
        
        [EditorMarkUpAttribute(displayName: "yaw")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block yaw;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField5 = new Explanation(name: "PITCH", explanation: "rotate the marker");
        
        [EditorMarkUpAttribute(displayName: "pitch")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block pitch;
    }
    #endregion
    
    #region effect_accelerations_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 32)]
    public class effect_accelerations_block
    {
        
        [EditorMarkUpAttribute(displayName: "create in")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_create_in create_in;
        
        [EditorMarkUpAttribute(displayName: "create in")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_create_in1 create_in1;
        
        [EditorMarkUpAttribute(displayName: "location")]
        [BlockIndexAttribute(blockName: "effect_locations_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short location;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float acceleration;
        
        [EditorMarkUpAttribute(displayName: "inner cone angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float inner_cone_angle;
        
        [EditorMarkUpAttribute(displayName: "outer cone angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float outer_cone_angle;
        
        public enum e_create_in : short
        {
            
            [EditorMarkUpAttribute(displayName: "any environment")]
            any_environment = 0x0,
            
            [EditorMarkUpAttribute(displayName: "air only")]
            air_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "water only")]
            water_only = 0x2,
            
            [EditorMarkUpAttribute(displayName: "space only")]
            space_only = 0x3,
        }
        
        public enum e_create_in1 : short
        {
            
            [EditorMarkUpAttribute(displayName: "either mode")]
            either_mode = 0x0,
            
            [EditorMarkUpAttribute(displayName: "violent mode only")]
            violent_mode_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "nonviolent mode only")]
            nonviolent_mode_only = 0x2,
        }
    }
    #endregion
}
