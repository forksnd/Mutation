//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 344, tagFileSize: 380, version: 2, groupTag: "wphi", parentGroupTag: "", name: "weapon_hud_interface", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class weapon_hud_interface_block
    {
        
        [EditorMarkUpAttribute(displayName: "child hud")]
        [TagReferenceAttribute("wphi")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference child_hud;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Flash cutoffs");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "inventory ammo cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short inventory_ammo_cutoff;
        
        [EditorMarkUpAttribute(displayName: "loaded ammo cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short loaded_ammo_cutoff;
        
        [EditorMarkUpAttribute(displayName: "heat cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short heat_cutoff;
        
        [EditorMarkUpAttribute(displayName: "age cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short age_cutoff;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "Weapon hud screen alignment");
        
        [EditorMarkUpAttribute(displayName: "anchor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_anchor anchor;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "static elements")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_static_block> static_elements;
        
        [EditorMarkUpAttribute(displayName: "meter elements")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_meter_block> meter_elements;
        
        [EditorMarkUpAttribute(displayName: "number elements")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_number_block> number_elements;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "Crosshairs", explanation: @"Crosshairs always go in the center of the screen.
Crosshairs can be attached to one of four different states:

* Aim: Default crosshair. Frame 0 is the default state, frame 1 is the auto-aim state (frame rate ignored)
* Zoom: Zoom overlay. Each zoom level has a corresponding frame (frame rate ignored)
* Charge: Charging overlay. If you wish to display an animation for charging, put it here.
* Flash: Similar to charging, but for low ammo/batter/heat states
* Reload/Overheat: Similar to charging, but for reloading/overheating
");
        
        [EditorMarkUpAttribute(displayName: "crosshairs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_crosshair_block> crosshairs;
        
        [EditorMarkUpAttribute(displayName: "overlay elements")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_overlays_block> overlay_elements;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField0;
        
        [EditorMarkUpAttribute(displayName: "screen effect")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_hud_screen_effect_definition> screen_effect;
        
        [PaddingAttribute(PaddingType.Padding, 132)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "Messaging information");
        
        [EditorMarkUpAttribute(displayName: "sequence index", tooltipText: "sequence index into the global hud icon bitmap")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short sequence_index;
        
        [EditorMarkUpAttribute(displayName: "width offset", tooltipText: "extra spacing beyond bitmap width for text alignment")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short width_offset;
        
        [EditorMarkUpAttribute(displayName: "offset from reference corner")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d offset_from_reference_corner;
        
        [EditorMarkUpAttribute(displayName: "override icon color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb override_icon_color;
        
        [EditorMarkUpAttribute(displayName: "frame rate [0,30]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte frame_rate__0_30;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags1 flags1;
        
        [EditorMarkUpAttribute(displayName: "text index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short text_index;
        
        [PaddingAttribute(PaddingType.Padding, 48)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "use parent hud flashing parameters")]
            use_parent_hud_flashing_parameters = 0x1,
        }
        
        public enum e_anchor : short
        {
            
            [EditorMarkUpAttribute(displayName: "top left")]
            top_left = 0x0,
            
            [EditorMarkUpAttribute(displayName: "top right")]
            top_right = 0x1,
            
            [EditorMarkUpAttribute(displayName: "bottom left")]
            bottom_left = 0x2,
            
            [EditorMarkUpAttribute(displayName: "bottom right")]
            bottom_right = 0x3,
            
            [EditorMarkUpAttribute(displayName: "center")]
            center = 0x4,
            
            [EditorMarkUpAttribute(displayName: "crosshair")]
            crosshair = 0x5,
        }
        
        [FlagsAttribute()]
        public enum b_flags1 : byte
        {
            
            [EditorMarkUpAttribute(displayName: "use text from string_list instead")]
            use_text_from_string_list_instead = 0x1,
            
            [EditorMarkUpAttribute(displayName: "override default color")]
            override_default_color = 0x2,
            
            [EditorMarkUpAttribute(displayName: "width offset is absolute icon width")]
            width_offset_is_absolute_icon_width = 0x4,
        }
    }
    
    #region weapon_hud_static_block
    [TagBlockDefinitionAttribute(cacheFileSize: 168, tagFileSize: 168, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_static_block
    {
        
        [EditorMarkUpAttribute(displayName: "state attached to")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_state_attached_to state_attached_to;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "can use on map type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_can_use_on_map_type can_use_on_map_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "anchor offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d anchor_offset;
        
        [EditorMarkUpAttribute(displayName: "width scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width_scale;
        
        [EditorMarkUpAttribute(displayName: "height scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(displayName: "scaling flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_scaling_flags scaling_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "interface bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference interface_bitmap;
        
        [EditorMarkUpAttribute(displayName: "default color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb default_color;
        
        [EditorMarkUpAttribute(displayName: "flashing color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb flashing_color;
        
        [EditorMarkUpAttribute(displayName: "flash period")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_period;
        
        [EditorMarkUpAttribute(displayName: "flash delay", tooltipText: "time between flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_delay;
        
        [EditorMarkUpAttribute(displayName: "number of flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short number_of_flashes;
        
        [EditorMarkUpAttribute(displayName: "flash flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flash_flags flash_flags;
        
        [EditorMarkUpAttribute(displayName: "flash length", tooltipText: "time of each flash")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_length;
        
        [EditorMarkUpAttribute(displayName: "disabled color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb disabled_color;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "sequence index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short sequence_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [EditorMarkUpAttribute(displayName: "multitex overlay")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_hud_multitexture_overlay_definition> multitex_overlay;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [PaddingAttribute(PaddingType.Padding, 40)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        public enum e_state_attached_to : short
        {
            
            [EditorMarkUpAttribute(displayName: "inventory ammo")]
            inventory_ammo = 0x0,
            
            [EditorMarkUpAttribute(displayName: "loaded ammo")]
            loaded_ammo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "heat")]
            heat = 0x2,
            
            [EditorMarkUpAttribute(displayName: "age")]
            age = 0x3,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon inventory ammo")]
            secondary_weapon_inventory_ammo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon loaded ammo")]
            secondary_weapon_loaded_ammo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "distance to target")]
            distance_to_target = 0x6,
            
            [EditorMarkUpAttribute(displayName: "elevation to target")]
            elevation_to_target = 0x7,
        }
        
        public enum e_can_use_on_map_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "any")]
            any = 0x0,
            
            [EditorMarkUpAttribute(displayName: "solo")]
            solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiplayer")]
            multiplayer = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_scaling_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale offset")]
            don_t_scale_offset = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t scale size")]
            don_t_scale_size = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flash_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "reverse default/flashing colors")]
            reverse_default_flashing_colors = 0x1,
        }
    }
    #endregion
    
    #region weapon_hud_meter_block
    [TagBlockDefinitionAttribute(cacheFileSize: 168, tagFileSize: 168, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_meter_block
    {
        
        [EditorMarkUpAttribute(displayName: "state attached to")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_state_attached_to state_attached_to;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "can use on map type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_can_use_on_map_type can_use_on_map_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "anchor offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d anchor_offset;
        
        [EditorMarkUpAttribute(displayName: "width scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width_scale;
        
        [EditorMarkUpAttribute(displayName: "height scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(displayName: "scaling flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_scaling_flags scaling_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "meter bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference meter_bitmap;
        
        [EditorMarkUpAttribute(displayName: "color at meter minimum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorRgb color_at_meter_minimum;
        
        [EditorMarkUpAttribute(displayName: "color at meter maximum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorRgb color_at_meter_maximum;
        
        [EditorMarkUpAttribute(displayName: "flash color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorRgb flash_color;
        
        [EditorMarkUpAttribute(displayName: "empty color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb empty_color;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "minumum meter value")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte minumum_meter_value;
        
        [EditorMarkUpAttribute(displayName: "sequence index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short sequence_index;
        
        [EditorMarkUpAttribute(displayName: "alpha multiplier")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte alpha_multiplier;
        
        [EditorMarkUpAttribute(displayName: "alpha bias")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte alpha_bias;
        
        [EditorMarkUpAttribute(displayName: "value scale", tooltipText: "used for non-integral values, i.e. health and shields")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short value_scale;
        
        [EditorMarkUpAttribute(displayName: "opacity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float opacity;
        
        [EditorMarkUpAttribute(displayName: "translucency")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float translucency;
        
        [EditorMarkUpAttribute(displayName: "disabled color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb disabled_color;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField0;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [PaddingAttribute(PaddingType.Padding, 40)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        public enum e_state_attached_to : short
        {
            
            [EditorMarkUpAttribute(displayName: "inventory ammo")]
            inventory_ammo = 0x0,
            
            [EditorMarkUpAttribute(displayName: "loaded ammo")]
            loaded_ammo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "heat")]
            heat = 0x2,
            
            [EditorMarkUpAttribute(displayName: "age")]
            age = 0x3,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon inventory ammo")]
            secondary_weapon_inventory_ammo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon loaded ammo")]
            secondary_weapon_loaded_ammo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "distance to target")]
            distance_to_target = 0x6,
            
            [EditorMarkUpAttribute(displayName: "elevation to target")]
            elevation_to_target = 0x7,
        }
        
        public enum e_can_use_on_map_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "any")]
            any = 0x0,
            
            [EditorMarkUpAttribute(displayName: "solo")]
            solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiplayer")]
            multiplayer = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_scaling_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale offset")]
            don_t_scale_offset = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t scale size")]
            don_t_scale_size = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flags : byte
        {
            
            [EditorMarkUpAttribute(displayName: "use min/max for state changes")]
            use_min_max_for_state_changes = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interpolate between min/max flash colors as state changes")]
            interpolate_between_min_max_flash_colors_as_state_changes = 0x2,
            
            [EditorMarkUpAttribute(displayName: "interpolate color along hsv space")]
            interpolate_color_along_hsv_space = 0x4,
            
            [EditorMarkUpAttribute(displayName: "...more colors for hsv interpolation")]
            ___more_colors_for_hsv_interpolation = 0x8,
            
            [EditorMarkUpAttribute(displayName: "invert interpolation")]
            invert_interpolation = 0x10,
        }
    }
    #endregion
    
    #region weapon_hud_number_block
    [TagBlockDefinitionAttribute(cacheFileSize: 160, tagFileSize: 160, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_number_block
    {
        
        [EditorMarkUpAttribute(displayName: "state attached to")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_state_attached_to state_attached_to;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "can use on map type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_can_use_on_map_type can_use_on_map_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "anchor offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d anchor_offset;
        
        [EditorMarkUpAttribute(displayName: "width scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width_scale;
        
        [EditorMarkUpAttribute(displayName: "height scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(displayName: "scaling flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_scaling_flags scaling_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "default color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb default_color;
        
        [EditorMarkUpAttribute(displayName: "flashing color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb flashing_color;
        
        [EditorMarkUpAttribute(displayName: "flash period")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_period;
        
        [EditorMarkUpAttribute(displayName: "flash delay", tooltipText: "time between flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_delay;
        
        [EditorMarkUpAttribute(displayName: "number of flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short number_of_flashes;
        
        [EditorMarkUpAttribute(displayName: "flash flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flash_flags flash_flags;
        
        [EditorMarkUpAttribute(displayName: "flash length", tooltipText: "time of each flash")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_length;
        
        [EditorMarkUpAttribute(displayName: "disabled color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb disabled_color;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "maximum number of digits")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte maximum_number_of_digits;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "number of fractional digits")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte number_of_fractional_digits;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [EditorMarkUpAttribute(displayName: "weapon specific flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_weapon_specific_flags weapon_specific_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        [PaddingAttribute(PaddingType.Padding, 36)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding9;
        
        public enum e_state_attached_to : short
        {
            
            [EditorMarkUpAttribute(displayName: "inventory ammo")]
            inventory_ammo = 0x0,
            
            [EditorMarkUpAttribute(displayName: "loaded ammo")]
            loaded_ammo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "heat")]
            heat = 0x2,
            
            [EditorMarkUpAttribute(displayName: "age")]
            age = 0x3,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon inventory ammo")]
            secondary_weapon_inventory_ammo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon loaded ammo")]
            secondary_weapon_loaded_ammo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "distance to target")]
            distance_to_target = 0x6,
            
            [EditorMarkUpAttribute(displayName: "elevation to target")]
            elevation_to_target = 0x7,
        }
        
        public enum e_can_use_on_map_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "any")]
            any = 0x0,
            
            [EditorMarkUpAttribute(displayName: "solo")]
            solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiplayer")]
            multiplayer = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_scaling_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale offset")]
            don_t_scale_offset = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t scale size")]
            don_t_scale_size = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flash_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "reverse default/flashing colors")]
            reverse_default_flashing_colors = 0x1,
        }
        
        [FlagsAttribute()]
        public enum b_flags : byte
        {
            
            [EditorMarkUpAttribute(displayName: "show leading zeros")]
            show_leading_zeros = 0x1,
            
            [EditorMarkUpAttribute(displayName: "only show when zoomed")]
            only_show_when_zoomed = 0x2,
            
            [EditorMarkUpAttribute(displayName: "draw a trailing m")]
            draw_a_trailing_m = 0x4,
        }
        
        [FlagsAttribute()]
        public enum b_weapon_specific_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "divide number by clip size")]
            divide_number_by_clip_size = 0x1,
        }
    }
    #endregion
    
    #region weapon_hud_crosshair_block
    [TagBlockDefinitionAttribute(cacheFileSize: 92, tagFileSize: 92, alignment: 4, maxBlockCount: 19)]
    public class weapon_hud_crosshair_block
    {
        
        [EditorMarkUpAttribute(displayName: "crosshair type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_crosshair_type crosshair_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "can use on map type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_can_use_on_map_type can_use_on_map_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "Crosshair bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference crosshair_bitmap;
        
        [EditorMarkUpAttribute(displayName: "Crosshair overlays")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_crosshair_item_block> crosshair_overlays;
        
        [PaddingAttribute(PaddingType.Padding, 40)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        public enum e_crosshair_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "aim")]
            aim = 0x0,
            
            [EditorMarkUpAttribute(displayName: "zoom")]
            zoom = 0x1,
            
            [EditorMarkUpAttribute(displayName: "charge")]
            charge = 0x2,
            
            [EditorMarkUpAttribute(displayName: "should reload")]
            should_reload = 0x3,
            
            [EditorMarkUpAttribute(displayName: "flash heat")]
            flash_heat = 0x4,
            
            [EditorMarkUpAttribute(displayName: "flash inventory ammo")]
            flash_inventory_ammo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "flash battery")]
            flash_battery = 0x6,
            
            [EditorMarkUpAttribute(displayName: "reload/overheat")]
            reload_overheat = 0x7,
            
            [EditorMarkUpAttribute(displayName: "flash when firing and no ammo")]
            flash_when_firing_and_no_ammo = 0x8,
            
            [EditorMarkUpAttribute(displayName: "flash when throwing and no grenade")]
            flash_when_throwing_and_no_grenade = 0x9,
            
            [EditorMarkUpAttribute(displayName: "low ammo and none left to reload")]
            low_ammo_and_none_left_to_reload = 0xa,
            
            [EditorMarkUpAttribute(displayName: "should reload secondary trigger")]
            should_reload_secondary_trigger = 0xb,
            
            [EditorMarkUpAttribute(displayName: "flash secondary inventory ammo")]
            flash_secondary_inventory_ammo = 0xc,
            
            [EditorMarkUpAttribute(displayName: "flash secondary reload")]
            flash_secondary_reload = 0xd,
            
            [EditorMarkUpAttribute(displayName: "flash when firing secondary trigger with no ammo")]
            flash_when_firing_secondary_trigger_with_no_ammo = 0xe,
            
            [EditorMarkUpAttribute(displayName: "low secondary ammo and none left to reload")]
            low_secondary_ammo_and_none_left_to_reload = 0xf,
            
            [EditorMarkUpAttribute(displayName: "primary trigger ready")]
            primary_trigger_ready = 0x10,
            
            [EditorMarkUpAttribute(displayName: "secondary trigger ready")]
            secondary_trigger_ready = 0x11,
            
            [EditorMarkUpAttribute(displayName: "flash when firing with depleted battery")]
            flash_when_firing_with_depleted_battery = 0x12,
        }
        
        public enum e_can_use_on_map_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "any")]
            any = 0x0,
            
            [EditorMarkUpAttribute(displayName: "solo")]
            solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiplayer")]
            multiplayer = 0x2,
        }
    }
    #endregion
    
    #region weapon_hud_crosshair_item_block
    [TagBlockDefinitionAttribute(cacheFileSize: 108, tagFileSize: 108, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_crosshair_item_block
    {
        
        [EditorMarkUpAttribute(displayName: "anchor offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d anchor_offset;
        
        [EditorMarkUpAttribute(displayName: "width scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width_scale;
        
        [EditorMarkUpAttribute(displayName: "height scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(displayName: "scaling flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_scaling_flags scaling_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "default color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb default_color;
        
        [EditorMarkUpAttribute(displayName: "flashing color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb flashing_color;
        
        [EditorMarkUpAttribute(displayName: "flash period")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_period;
        
        [EditorMarkUpAttribute(displayName: "flash delay", tooltipText: "time between flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_delay;
        
        [EditorMarkUpAttribute(displayName: "number of flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short number_of_flashes;
        
        [EditorMarkUpAttribute(displayName: "flash flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flash_flags flash_flags;
        
        [EditorMarkUpAttribute(displayName: "flash length", tooltipText: "time of each flash")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_length;
        
        [EditorMarkUpAttribute(displayName: "disabled color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb disabled_color;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "frame rate")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short frame_rate;
        
        [EditorMarkUpAttribute(displayName: "sequence index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short sequence_index;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [FlagsAttribute()]
        public enum b_scaling_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale offset")]
            don_t_scale_offset = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t scale size")]
            don_t_scale_size = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flash_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "reverse default/flashing colors")]
            reverse_default_flashing_colors = 0x1,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "flashes when active")]
            flashes_when_active = 0x1,
            
            [EditorMarkUpAttribute(displayName: "not a sprite")]
            not_a_sprite = 0x2,
            
            [EditorMarkUpAttribute(displayName: "show only when zoomed")]
            show_only_when_zoomed = 0x4,
            
            [EditorMarkUpAttribute(displayName: "show sniper data")]
            show_sniper_data = 0x8,
            
            [EditorMarkUpAttribute(displayName: "hide area outside reticle")]
            hide_area_outside_reticle = 0x10,
            
            [EditorMarkUpAttribute(displayName: "one zoom level")]
            one_zoom_level = 0x20,
            
            [EditorMarkUpAttribute(displayName: "don\'t show when zoomed")]
            don_t_show_when_zoomed = 0x40,
        }
    }
    #endregion
    
    #region weapon_hud_overlays_block
    [TagBlockDefinitionAttribute(cacheFileSize: 92, tagFileSize: 92, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_overlays_block
    {
        
        [EditorMarkUpAttribute(displayName: "state attached to")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_state_attached_to state_attached_to;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "can use on map type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_can_use_on_map_type can_use_on_map_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "Overlay bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference overlay_bitmap;
        
        [EditorMarkUpAttribute(displayName: "Overlays")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_hud_overlay_block> overlays;
        
        [PaddingAttribute(PaddingType.Padding, 40)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        public enum e_state_attached_to : short
        {
            
            [EditorMarkUpAttribute(displayName: "inventory ammo")]
            inventory_ammo = 0x0,
            
            [EditorMarkUpAttribute(displayName: "loaded ammo")]
            loaded_ammo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "heat")]
            heat = 0x2,
            
            [EditorMarkUpAttribute(displayName: "age")]
            age = 0x3,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon inventory ammo")]
            secondary_weapon_inventory_ammo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon loaded ammo")]
            secondary_weapon_loaded_ammo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "distance to target")]
            distance_to_target = 0x6,
            
            [EditorMarkUpAttribute(displayName: "elevation to target")]
            elevation_to_target = 0x7,
        }
        
        public enum e_can_use_on_map_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "any")]
            any = 0x0,
            
            [EditorMarkUpAttribute(displayName: "solo")]
            solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiplayer")]
            multiplayer = 0x2,
        }
    }
    #endregion
    
    #region weapon_hud_overlay_block
    [TagBlockDefinitionAttribute(cacheFileSize: 136, tagFileSize: 136, alignment: 4, maxBlockCount: 16)]
    public class weapon_hud_overlay_block
    {
        
        [EditorMarkUpAttribute(displayName: "anchor offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Point2d anchor_offset;
        
        [EditorMarkUpAttribute(displayName: "width scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width_scale;
        
        [EditorMarkUpAttribute(displayName: "height scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(displayName: "scaling flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_scaling_flags scaling_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "default color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb default_color;
        
        [EditorMarkUpAttribute(displayName: "flashing color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb flashing_color;
        
        [EditorMarkUpAttribute(displayName: "flash period")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_period;
        
        [EditorMarkUpAttribute(displayName: "flash delay", tooltipText: "time between flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_delay;
        
        [EditorMarkUpAttribute(displayName: "number of flashes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short number_of_flashes;
        
        [EditorMarkUpAttribute(displayName: "flash flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flash_flags flash_flags;
        
        [EditorMarkUpAttribute(displayName: "flash length", tooltipText: "time of each flash")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float flash_length;
        
        [EditorMarkUpAttribute(displayName: "disabled color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb disabled_color;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "frame rate")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short frame_rate;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "sequence index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short sequence_index;
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_type type;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [PaddingAttribute(PaddingType.Padding, 40)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [FlagsAttribute()]
        public enum b_scaling_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale offset")]
            don_t_scale_offset = 0x1,
            
            [EditorMarkUpAttribute(displayName: "don\'t scale size")]
            don_t_scale_size = 0x2,
        }
        
        [FlagsAttribute()]
        public enum b_flash_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "reverse default/flashing colors")]
            reverse_default_flashing_colors = 0x1,
        }
        
        [FlagsAttribute()]
        public enum b_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "show on flashing")]
            show_on_flashing = 0x1,
            
            [EditorMarkUpAttribute(displayName: "show on empty")]
            show_on_empty = 0x2,
            
            [EditorMarkUpAttribute(displayName: "show on reload/overheating")]
            show_on_reload_overheating = 0x4,
            
            [EditorMarkUpAttribute(displayName: "show on default")]
            show_on_default = 0x8,
            
            [EditorMarkUpAttribute(displayName: "show always")]
            show_always = 0x10,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "flashes when active")]
            flashes_when_active = 0x1,
        }
    }
    #endregion
    
    #region global_hud_screen_effect_definition
    [TagBlockDefinitionAttribute(cacheFileSize: 320, tagFileSize: 320, alignment: 4, maxBlockCount: 1)]
    public class global_hud_screen_effect_definition
    {
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Mask", explanation: "Mask bitmap overlay. Use either a 2D bitmap or an interface bitmap.");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "mask (fullscreen")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference mask__fullscreen;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "mask (splitscreen")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference mask__splitscreen;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [PaddingAttribute(PaddingType.Padding, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [PaddingAttribute(PaddingType.Padding, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        [PaddingAttribute(PaddingType.Padding, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding9;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "Screen effect (fullscreen)");
        
        [EditorMarkUpAttribute(displayName: "screen effect flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_screen_effect_flags screen_effect_flags;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding10;
        
        [EditorMarkUpAttribute(displayName: "screen effect")]
        [TagReferenceAttribute("egor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference screen_effect;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding11;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "Screen effect (splitscreen)");
        
        [EditorMarkUpAttribute(displayName: "screen effect flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_screen_effect_flags screen_effect_flags1;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding12;
        
        [EditorMarkUpAttribute(displayName: "screen effect")]
        [TagReferenceAttribute("egor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference screen_effect1;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding13;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "only when zoomed")]
            only_when_zoomed = 0x1,
            
            [EditorMarkUpAttribute(displayName: "mirror horizontally")]
            mirror_horizontally = 0x2,
            
            [EditorMarkUpAttribute(displayName: "mirror vertically")]
            mirror_vertically = 0x4,
            
            [EditorMarkUpAttribute(displayName: "use new hotness")]
            use_new_hotness = 0x8,
        }
        
        [FlagsAttribute()]
        public enum b_screen_effect_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "only when zoomed")]
            only_when_zoomed = 0x1,
        }
    }
    #endregion
}
