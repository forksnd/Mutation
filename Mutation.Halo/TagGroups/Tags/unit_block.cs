//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 304, tagFileSize: 396, version: 3, groupTag: "unit", parentGroupTag: "obje", name: "unit", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class unit_block : object_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "$$$ UNIT $$$");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "default team")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_default_team default_team;
        
        [EditorMarkUpAttribute(displayName: "constant sound volume")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_constant_sound_volume constant_sound_volume;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "integrated light toggle")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference integrated_light_toggle;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "camera field of view", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float camera_field_of_view;
        
        [EditorMarkUpAttribute(displayName: "camera stiffness")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float camera_stiffness;
        
        [EditorMarkUpAttribute(displayName: "unit camera")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_camera_struct_block unit_camera;
        
        [EditorMarkUpAttribute(displayName: "acceleration")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_seat_acceleration_struct_block acceleration;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "soft ping threshold", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float soft_ping_threshold;
        
        [EditorMarkUpAttribute(displayName: "soft ping interrupt time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float soft_ping_interrupt_time;
        
        [EditorMarkUpAttribute(displayName: "hard ping threshold", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float hard_ping_threshold;
        
        [EditorMarkUpAttribute(displayName: "hard ping interrupt time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float hard_ping_interrupt_time;
        
        [EditorMarkUpAttribute(displayName: "hard death threshold", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float hard_death_threshold;
        
        [EditorMarkUpAttribute(displayName: "feign death threshold", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float feign_death_threshold;
        
        [EditorMarkUpAttribute(displayName: "feign death time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float feign_death_time;
        
        [EditorMarkUpAttribute(displayName: "distance of evade anim", unitsSpecifier: "world units", tooltipText: "this must be set to tell the AI how far it should expect our evade animation to m" +
    "ove us")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float distance_of_evade_anim;
        
        [EditorMarkUpAttribute(displayName: "distance of dive anim", unitsSpecifier: "world units", tooltipText: "this must be set to tell the AI how far it should expect our dive animation to mo" +
    "ve us")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float distance_of_dive_anim;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "stunned movement threshold", unitsSpecifier: "[0,1]", tooltipText: "if we take this much damage in a short space of time we will play our \'stunned mo" +
    "vement\' animations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stunned_movement_threshold;
        
        [EditorMarkUpAttribute(displayName: "feign death chance", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float feign_death_chance;
        
        [EditorMarkUpAttribute(displayName: "feign repeat chance", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float feign_repeat_chance;
        
        [EditorMarkUpAttribute(displayName: "spawned turret character", tooltipText: "automatically created character when this unit is driven")]
        [TagReferenceAttribute("char")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference spawned_turret_character;
        
        [EditorMarkUpAttribute(displayName: "spawned actor count", tooltipText: "number of actors which we spawn")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ShortBounds spawned_actor_count;
        
        [EditorMarkUpAttribute(displayName: "spawned velocity", tooltipText: "velocity at which we throw spawned actors")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float spawned_velocity;
        
        [EditorMarkUpAttribute(displayName: "aiming velocity maximum", unitsSpecifier: "degrees per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float aiming_velocity_maximum;
        
        [EditorMarkUpAttribute(displayName: "aiming acceleration maximum", unitsSpecifier: "degrees per second squared")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float aiming_acceleration_maximum;
        
        [EditorMarkUpAttribute(displayName: "casual aiming modifier", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float casual_aiming_modifier;
        
        [EditorMarkUpAttribute(displayName: "looking velocity maximum", unitsSpecifier: "degrees per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float looking_velocity_maximum;
        
        [EditorMarkUpAttribute(displayName: "looking acceleration maximum", unitsSpecifier: "degrees per second squared")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float looking_acceleration_maximum;
        
        [EditorMarkUpAttribute(displayName: "right_hand_node", tooltipText: "where the primary weapon is attached")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id right_hand_node;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "left_hand_node", tooltipText: "where the seconday weapon is attached (for dual-pistol modes)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id left_hand_node;
        
        [EditorMarkUpAttribute(displayName: "more damn nodes")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_additional_node_names_struct_block more_damn_nodes;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference melee_damage;
        
        [EditorMarkUpAttribute(displayName: "your momma")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_boarding_melee_struct_block your_momma;
        
        [EditorMarkUpAttribute(displayName: "motion sensor blip size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_motion_sensor_blip_size motion_sensor_blip_size;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "postures")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<unit_postures_block> postures;
        
        [EditorMarkUpAttribute(displayName: "NEW HUD INTERFACES")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<unit_hud_reference_block> new_hud_interfaces;
        
        [EditorMarkUpAttribute(displayName: "dialogue variants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<dialogue_variant_block> dialogue_variants;
        
        [EditorMarkUpAttribute(displayName: "grenade velocity", unitsSpecifier: "world units per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float grenade_velocity;
        
        [EditorMarkUpAttribute(displayName: "grenade type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_grenade_type grenade_type;
        
        [EditorMarkUpAttribute(displayName: "grenade count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short grenade_count;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [EditorMarkUpAttribute(displayName: "powered seats")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<powered_seat_block> powered_seats;
        
        [EditorMarkUpAttribute(displayName: "weapons")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<unit_weapon_block> weapons;
        
        [EditorMarkUpAttribute(displayName: "seats")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<unit_seat_block> seats;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "Boost");
        
        [EditorMarkUpAttribute(displayName: "boost")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_boost_struct_block boost;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "Lipsync");
        
        [EditorMarkUpAttribute(displayName: "lipsync")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_lipsync_scales_struct_block lipsync;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "circular aiming")]
            circular_aiming = 0x1,
            
            [EditorMarkUpAttribute(displayName: "destroyed after dying")]
            destroyed_after_dying = 0x2,
            
            [EditorMarkUpAttribute(displayName: "half-speed interpolation")]
            half_speed_interpolation = 0x4,
            
            [EditorMarkUpAttribute(displayName: "fires from camera")]
            fires_from_camera = 0x8,
            
            [EditorMarkUpAttribute(displayName: "entrance inside bounding sphere")]
            entrance_inside_bounding_sphere = 0x10,
            
            [EditorMarkUpAttribute(displayName: "doesn\'t show readied weapon")]
            doesn_t_show_readied_weapon = 0x20,
            
            [EditorMarkUpAttribute(displayName: "causes passenger dialogue")]
            causes_passenger_dialogue = 0x40,
            
            [EditorMarkUpAttribute(displayName: "resists pings")]
            resists_pings = 0x80,
            
            [EditorMarkUpAttribute(displayName: "melee attack is fatal")]
            melee_attack_is_fatal = 0x100,
            
            [EditorMarkUpAttribute(displayName: "don\'t reface during pings")]
            don_t_reface_during_pings = 0x200,
            
            [EditorMarkUpAttribute(displayName: "has no aiming")]
            has_no_aiming = 0x400,
            
            [EditorMarkUpAttribute(displayName: "simple creature")]
            simple_creature = 0x800,
            
            [EditorMarkUpAttribute(displayName: "impact melee attaches to unit")]
            impact_melee_attaches_to_unit = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "impact melee dies on shields")]
            impact_melee_dies_on_shields = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "cannot open doors automatically")]
            cannot_open_doors_automatically = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "melee attackers cannot attach")]
            melee_attackers_cannot_attach = 0x8000,
            
            [EditorMarkUpAttribute(displayName: "not instantly killed by melee")]
            not_instantly_killed_by_melee = 0x10000,
            
            [EditorMarkUpAttribute(displayName: "shield sapping")]
            shield_sapping = 0x20000,
            
            [EditorMarkUpAttribute(displayName: "runs around flaming")]
            runs_around_flaming = 0x40000,
            
            [EditorMarkUpAttribute(displayName: "inconsequential")]
            inconsequential = 0x80000,
            
            [EditorMarkUpAttribute(displayName: "special cinematic unit")]
            special_cinematic_unit = 0x100000,
            
            [EditorMarkUpAttribute(displayName: "ignored by autoaiming")]
            ignored_by_autoaiming = 0x200000,
            
            [EditorMarkUpAttribute(displayName: "shields fry infection forms")]
            shields_fry_infection_forms = 0x400000,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x800000,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused1 = 0x1000000,
            
            [EditorMarkUpAttribute(displayName: "acts as gunner for parent")]
            acts_as_gunner_for_parent = 0x2000000,
            
            [EditorMarkUpAttribute(displayName: "controlled by parent gunner")]
            controlled_by_parent_gunner = 0x4000000,
            
            [EditorMarkUpAttribute(displayName: "parent\'s primary weapon")]
            parent_s_primary_weapon = 0x8000000,
            
            [EditorMarkUpAttribute(displayName: "unit has boost")]
            unit_has_boost = 0x10000000,
        }
        
        public enum e_default_team : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "player")]
            player = 0x1,
            
            [EditorMarkUpAttribute(displayName: "human")]
            human = 0x2,
            
            [EditorMarkUpAttribute(displayName: "covenant")]
            covenant = 0x3,
            
            [EditorMarkUpAttribute(displayName: "flood")]
            flood = 0x4,
            
            [EditorMarkUpAttribute(displayName: "sentinel")]
            sentinel = 0x5,
            
            [EditorMarkUpAttribute(displayName: "heretic")]
            heretic = 0x6,
            
            [EditorMarkUpAttribute(displayName: "prophet")]
            prophet = 0x7,
            
            [EditorMarkUpAttribute(displayName: "unused8")]
            unused8 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "unused9")]
            unused9 = 0x9,
            
            [EditorMarkUpAttribute(displayName: "unused10")]
            unused10 = 0xa,
            
            [EditorMarkUpAttribute(displayName: "unused11")]
            unused11 = 0xb,
            
            [EditorMarkUpAttribute(displayName: "unused12")]
            unused12 = 0xc,
            
            [EditorMarkUpAttribute(displayName: "unused13")]
            unused13 = 0xd,
            
            [EditorMarkUpAttribute(displayName: "unused14")]
            unused14 = 0xe,
            
            [EditorMarkUpAttribute(displayName: "unused15")]
            unused15 = 0xf,
        }
        
        public enum e_constant_sound_volume : short
        {
            
            [EditorMarkUpAttribute(displayName: "silent")]
            silent = 0x0,
            
            [EditorMarkUpAttribute(displayName: "medium")]
            medium = 0x1,
            
            [EditorMarkUpAttribute(displayName: "loud")]
            loud = 0x2,
            
            [EditorMarkUpAttribute(displayName: "shout")]
            shout = 0x3,
            
            [EditorMarkUpAttribute(displayName: "quiet")]
            quiet = 0x4,
        }
        
        public enum e_motion_sensor_blip_size : short
        {
            
            [EditorMarkUpAttribute(displayName: "medium")]
            medium = 0x0,
            
            [EditorMarkUpAttribute(displayName: "small")]
            small = 0x1,
            
            [EditorMarkUpAttribute(displayName: "large")]
            large = 0x2,
        }
        
        public enum e_grenade_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "human fragmentation")]
            human_fragmentation = 0x0,
            
            [EditorMarkUpAttribute(displayName: "covenant plasma")]
            covenant_plasma = 0x1,
        }
    }
    
    #region unit_additional_node_names_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class unit_additional_node_names_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "preferred_gun_node", tooltipText: "if found, use this gun marker")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id preferred_gun_node;
    }
    #endregion
    
    #region unit_boarding_melee_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 40, tagFileSize: 40, alignment: 4, maxBlockCount: 1)]
    public class unit_boarding_melee_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "boarding melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference boarding_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "boarding melee response")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference boarding_melee_response;
        
        [EditorMarkUpAttribute(displayName: "landing melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference landing_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "flurry melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference flurry_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "obstacle smash damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference obstacle_smash_damage;
    }
    #endregion
    
    #region unit_postures_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 20)]
    public class unit_postures_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [PaddingAttribute(PaddingType.Useless, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "pill offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d pill_offset;
    }
    #endregion
    
    #region dialogue_variant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 16)]
    public class dialogue_variant_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "variant number", tooltipText: "variant number to use this dialogue with (must match the suffix in the permutatio" +
    "ns on the unit\'s model)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short variant_number;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "dialogue")]
        [TagReferenceAttribute("udlg")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference dialogue;
    }
    #endregion
    
    #region powered_seat_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 2)]
    public class powered_seat_block
    {
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "driver powerup time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float driver_powerup_time;
        
        [EditorMarkUpAttribute(displayName: "driver powerdown time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float driver_powerdown_time;
        
        [PaddingAttribute(PaddingType.Useless, 56)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
    }
    #endregion
    
    #region unit_weapon_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 4)]
    public class unit_weapon_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "weapon")]
        [TagReferenceAttribute("weap")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference weapon;
        
        [PaddingAttribute(PaddingType.Useless, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region unit_seat_block
    [TagBlockDefinitionAttribute(cacheFileSize: 176, tagFileSize: 176, alignment: 4, maxBlockCount: 32)]
    public class unit_seat_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "label")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id label;
        
        [EditorMarkUpAttribute(displayName: "marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id marker_name;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "entry marker(s name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id entry_marker_s__name;
        
        [EditorMarkUpAttribute(displayName: "boarding grenade marker")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id boarding_grenade_marker;
        
        [EditorMarkUpAttribute(displayName: "boarding grenade string")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id boarding_grenade_string;
        
        [EditorMarkUpAttribute(displayName: "boarding melee string")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id boarding_melee_string;
        
        [EditorMarkUpAttribute(displayName: "ping scale", tooltipText: "nathan is too lazy to make pings for each seat.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ping_scale;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "turnover time", unitsSpecifier: "seconds", tooltipText: "how much time it takes to evict a rider from a flipped vehicle")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float turnover_time;
        
        [EditorMarkUpAttribute(displayName: "acceleration")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_seat_acceleration_struct_block acceleration;
        
        [EditorMarkUpAttribute(displayName: "AI scariness")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ai_scariness;
        
        [EditorMarkUpAttribute(displayName: "ai seat type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_ai_seat_type ai_seat_type;
        
        [EditorMarkUpAttribute(displayName: "boarding seat")]
        [BlockIndexAttribute(blockName: "unit_seat_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short boarding_seat;
        
        [EditorMarkUpAttribute(displayName: "listener interpolation factor", tooltipText: "how far to interpolate listener position from camera to occupant\'s head")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_interpolation_factor;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "speed dependant turn rates", explanation: @"when the unit velocity is 0, the yaw/pitch rates are the left values
at [max speed reference], the yaw/pitch rates are the right values.
the max speed reference is what the code uses to generate a clamped speed from 0..1
the exponent controls how midrange speeds are interpreted.");
        
        [EditorMarkUpAttribute(displayName: "yaw rate bounds", unitsSpecifier: "degrees per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds yaw_rate_bounds;
        
        [EditorMarkUpAttribute(displayName: "pitch rate bounds", unitsSpecifier: "degrees per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds pitch_rate_bounds;
        
        [EditorMarkUpAttribute(displayName: "min speed reference")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float min_speed_reference;
        
        [EditorMarkUpAttribute(displayName: "max speed reference")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_speed_reference;
        
        [EditorMarkUpAttribute(displayName: "speed exponent")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speed_exponent;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "camera fields");
        
        [EditorMarkUpAttribute(displayName: "unit camera")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public unit_camera_struct_block unit_camera;
        
        [EditorMarkUpAttribute(displayName: "unit hud interface")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<unit_hud_reference_block> unit_hud_interface;
        
        [EditorMarkUpAttribute(displayName: "enter seat string")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id enter_seat_string;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "yaw minimum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float yaw_minimum;
        
        [EditorMarkUpAttribute(displayName: "yaw maximum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float yaw_maximum;
        
        [EditorMarkUpAttribute(displayName: "built-in gunner")]
        [TagReferenceAttribute("char")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference built_in_gunner;
        
        [PaddingAttribute(PaddingType.Useless, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "entry fields", explanation: "note: the entry radius shouldn\'t exceed 3 world units, \nas that is as far as the " +
    "player will search for a vehicle\nto enter.");
        
        [EditorMarkUpAttribute(displayName: "entry radius", tooltipText: "how close to the entry marker a unit must be")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float entry_radius;
        
        [EditorMarkUpAttribute(displayName: "entry marker cone angle", tooltipText: "angle from marker forward the unit must be")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float entry_marker_cone_angle;
        
        [EditorMarkUpAttribute(displayName: "entry marker facing angle", tooltipText: "angle from unit facing the marker must be")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float entry_marker_facing_angle;
        
        [EditorMarkUpAttribute(displayName: "maximum relative velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_relative_velocity;
        
        [PaddingAttribute(PaddingType.Useless, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "invisible seat region")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id invisible_seat_region;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "runtime invisible seat region index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int runtime_invisible_seat_region_index;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "invisible")]
            invisible = 0x1,
            
            [EditorMarkUpAttribute(displayName: "locked")]
            locked = 0x2,
            
            [EditorMarkUpAttribute(displayName: "driver")]
            driver = 0x4,
            
            [EditorMarkUpAttribute(displayName: "gunner")]
            gunner = 0x8,
            
            [EditorMarkUpAttribute(displayName: "third person camera")]
            third_person_camera = 0x10,
            
            [EditorMarkUpAttribute(displayName: "allows weapons")]
            allows_weapons = 0x20,
            
            [EditorMarkUpAttribute(displayName: "third person on enter")]
            third_person_on_enter = 0x40,
            
            [EditorMarkUpAttribute(displayName: "first person camera slaved to gun.")]
            first_person_camera_slaved_to_gun = 0x80,
            
            [EditorMarkUpAttribute(displayName: "allow vehicle communication animations")]
            allow_vehicle_communication_animations = 0x100,
            
            [EditorMarkUpAttribute(displayName: "not valid without driver")]
            not_valid_without_driver = 0x200,
            
            [EditorMarkUpAttribute(displayName: "allow AI noncombatants")]
            allow_ai_noncombatants = 0x400,
            
            [EditorMarkUpAttribute(displayName: "boarding seat")]
            boarding_seat = 0x800,
            
            [EditorMarkUpAttribute(displayName: "ai firing disabled by max acceleration")]
            ai_firing_disabled_by_max_acceleration = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "boarding enters seat")]
            boarding_enters_seat = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "boarding need any passenger")]
            boarding_need_any_passenger = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "controls open and close")]
            controls_open_and_close = 0x8000,
            
            [EditorMarkUpAttribute(displayName: "invalid for player")]
            invalid_for_player = 0x10000,
            
            [EditorMarkUpAttribute(displayName: "invalid for non-player")]
            invalid_for_non_player = 0x20000,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "gunner (player only")]
            gunner__player_only = 0x40000,
            
            [EditorMarkUpAttribute(displayName: "invisible under major damage")]
            invisible_under_major_damage = 0x80000,
        }
        
        public enum e_ai_seat_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "passenger")]
            passenger = 0x1,
            
            [EditorMarkUpAttribute(displayName: "gunner")]
            gunner = 0x2,
            
            [EditorMarkUpAttribute(displayName: "small cargo")]
            small_cargo = 0x3,
            
            [EditorMarkUpAttribute(displayName: "large cargo")]
            large_cargo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "driver")]
            driver = 0x5,
        }
    }
    #endregion
    
    #region unit_boost_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 1)]
    public class unit_boost_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "boost peak power")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float boost_peak_power;
        
        [EditorMarkUpAttribute(displayName: "boost rise power")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float boost_rise_power;
        
        [EditorMarkUpAttribute(displayName: "boost peak time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float boost_peak_time;
        
        [EditorMarkUpAttribute(displayName: "boost fall power")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float boost_fall_power;
        
        [EditorMarkUpAttribute(displayName: "dead time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float dead_time;
    }
    #endregion
    
    #region unit_lipsync_scales_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class unit_lipsync_scales_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "attack weight")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float attack_weight;
        
        [EditorMarkUpAttribute(displayName: "decay weight")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float decay_weight;
    }
    #endregion
}
