//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 496, tagFileSize: 716, version: 2, groupTag: "weap", parentGroupTag: "item", name: "weapon", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class weapon_block : item_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "$$$ WEAPON $$$", explanation: "All weapons should have \'primary trigger\' and \'secondary trigger\' markers as appr" +
    "opriate.\nBlurred permutations are called \'$primary-blur\' and \'$secondary-blur\'.");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id _noNameField0;
        
        [EditorMarkUpAttribute(displayName: "secondary trigger mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_secondary_trigger_mode secondary_trigger_mode;
        
        [EditorMarkUpAttribute(displayName: "maximum alternate shots loaded", tooltipText: "if the second trigger loads alternate ammunition, this is the maximum number of s" +
    "hots that can be loaded at a time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short maximum_alternate_shots_loaded;
        
        [EditorMarkUpAttribute(displayName: "turn on time", tooltipText: "how long after being readied it takes this weapon to switch its \'turned_on\' attac" +
    "hment to 1.0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float turn_on_time;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "old obsolete export to functions");
        
        [EditorMarkUpAttribute(displayName: "ready time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ready_time;
        
        [EditorMarkUpAttribute(displayName: "ready effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference ready_effect;
        
        [EditorMarkUpAttribute(displayName: "ready damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference ready_damage_effect;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "heat");
        
        [EditorMarkUpAttribute(displayName: "heat recovery threshold", unitsSpecifier: "[0,1]", tooltipText: "the heat value a weapon must return to before leaving the overheated state, once " +
    "it has become overheated in the first place")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_recovery_threshold;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "overheated threshold", unitsSpecifier: "[0,1]", tooltipText: "the heat value over which a weapon first becomes overheated (should be greater th" +
    "an the heat recovery threshold)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float overheated_threshold;
        
        [EditorMarkUpAttribute(displayName: "heat detonation threshold", unitsSpecifier: "[0,1]", tooltipText: "the heat value above which the weapon has a chance of exploding each time it is f" +
    "ired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_detonation_threshold;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "heat detonation fraction", unitsSpecifier: "[0,1]", tooltipText: "the percent chance (between 0.0 and 1.0) the weapon will explode when fired over " +
    "the heat detonation threshold")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_detonation_fraction;
        
        [EditorMarkUpAttribute(displayName: "heat loss per second", unitsSpecifier: "[0,1]", tooltipText: "the amount of heat lost each second when the weapon is not being fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_loss_per_second;
        
        [EditorMarkUpAttribute(displayName: "heat illumination", unitsSpecifier: "[0,1]", tooltipText: "the amount of illumination given off when the weapon is overheated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_illumination;
        
        [EditorMarkUpAttribute(displayName: "overheated heat loss per second", unitsSpecifier: "[0,1]", tooltipText: "the amount of heat lost each second when the weapon is not being fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float overheated_heat_loss_per_second;
        
        [EditorMarkUpAttribute(displayName: "overheated")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference overheated;
        
        [EditorMarkUpAttribute(displayName: "overheated damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference overheated_damage_effect;
        
        [EditorMarkUpAttribute(displayName: "detonation")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference detonation;
        
        [EditorMarkUpAttribute(displayName: "detonation damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference detonation_damage_effect;
        
        [EditorMarkUpAttribute(displayName: "player melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference player_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "player melee response")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference player_melee_response;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "melee aim assist", explanation: @"magnetism angle: the maximum angle that magnetism works at full strength
magnetism range: the maximum distance that magnetism works at full strength
throttle magnitude: additional throttle to apply towards target when melee-ing w/ magnetism
throttle minimum distance: minimum distance to target that throttle magnetism kicks in
throttle maximum adjustment angle: maximum angle throttle magnetism will have an effect, relative to the players movement throttle
");
        
        [EditorMarkUpAttribute(displayName: "melee aim assist")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public melee_aim_assist_struct_block melee_aim_assist;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "melee damage parameters", explanation: "damage pyramid angles: defines the frustum from the camera that the melee-attack " +
    "uses to find targets\ndamage pyramid depth: how far the melee attack searches for" +
    " a target");
        
        [EditorMarkUpAttribute(displayName: "melee damage parameters")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public melee_damage_parameters_struct_block melee_damage_parameters;
        
        [EditorMarkUpAttribute(displayName: "melee damage reporting type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_melee_damage_reporting_type melee_damage_reporting_type;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField5 = new Explanation(name: "zoom");
        
        [EditorMarkUpAttribute(displayName: "magnification levels", tooltipText: "the number of magnification levels this weapon allows")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short magnification_levels;
        
        [EditorMarkUpAttribute(displayName: "magnification range")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds magnification_range;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField6 = new Explanation(name: "weapon aim assist");
        
        [EditorMarkUpAttribute(displayName: "weapon aim assist")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public aim_assist_struct_block weapon_aim_assist;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField7 = new Explanation(name: "movement");
        
        [EditorMarkUpAttribute(displayName: "movement penalized")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_movement_penalized movement_penalized;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "forward movement penalty", tooltipText: "percent slowdown to forward movement for units carrying this weapon")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float forward_movement_penalty;
        
        [EditorMarkUpAttribute(displayName: "sideways movement penalty", tooltipText: "percent slowdown to sideways and backward movement for units carrying this weapon" +
    "")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sideways_movement_penalty;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField8 = new Explanation(name: "AI targeting parameters");
        
        [EditorMarkUpAttribute(displayName: "AI scariness")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ai_scariness;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField9 = new Explanation(name: "miscellaneous");
        
        [EditorMarkUpAttribute(displayName: "weapon power-on time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weapon_power_on_time;
        
        [EditorMarkUpAttribute(displayName: "weapon power-off time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weapon_power_off_time;
        
        [EditorMarkUpAttribute(displayName: "weapon power-on effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference weapon_power_on_effect;
        
        [EditorMarkUpAttribute(displayName: "weapon power-off effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference weapon_power_off_effect;
        
        [EditorMarkUpAttribute(displayName: "age heat recovery penalty", tooltipText: "how much the weapon\'s heat recovery is penalized as it ages")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float age_heat_recovery_penalty;
        
        [EditorMarkUpAttribute(displayName: "age rate of fire penalty", tooltipText: "how much the weapon\'s rate of fire is penalized as it ages")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float age_rate_of_fire_penalty;
        
        [EditorMarkUpAttribute(displayName: "age misfire start", unitsSpecifier: "[0,1]", tooltipText: "the age threshold when the weapon begins to misfire")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float age_misfire_start;
        
        [EditorMarkUpAttribute(displayName: "age misfire chance", unitsSpecifier: "[0,1]", tooltipText: "at age 1.0, the misfire chance per shot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float age_misfire_chance;
        
        [EditorMarkUpAttribute(displayName: "pickup sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference pickup_sound;
        
        [EditorMarkUpAttribute(displayName: "zoom-in sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference zoom_in_sound;
        
        [EditorMarkUpAttribute(displayName: "zoom-out sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference zoom_out_sound;
        
        [EditorMarkUpAttribute(displayName: "active camo ding", tooltipText: "how much to decrease active camo when a round is fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float active_camo_ding;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "active camo regrowth rate", tooltipText: "how fast to increase active camo (per tick) when a round is fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float active_camo_regrowth_rate;
        
        [EditorMarkUpAttribute(displayName: "handle node", tooltipText: "the node that get\'s attached to the unit\'s hand")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id handle_node;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField10 = new Explanation(name: "weapon labels");
        
        [EditorMarkUpAttribute(displayName: "weapon class")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id weapon_class;
        
        [EditorMarkUpAttribute(displayName: "weapon name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id weapon_name;
        
        [EditorMarkUpAttribute(displayName: "multiplayer weapon type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_multiplayer_weapon_type multiplayer_weapon_type;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField11 = new Explanation(name: "more miscellaneous");
        
        [EditorMarkUpAttribute(displayName: "weapon type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_weapon_type weapon_type;
        
        [EditorMarkUpAttribute(displayName: "tracking")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_tracking_struct_block tracking;
        
        [EditorMarkUpAttribute(displayName: "player interface")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_interface_struct_block player_interface;
        
        [EditorMarkUpAttribute(displayName: "predicted resources")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<predicted_resource_block> predicted_resources;
        
        [EditorMarkUpAttribute(displayName: "magazines")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<magazines> magazines;
        
        [EditorMarkUpAttribute(displayName: "new triggers")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_triggers> new_triggers;
        
        [EditorMarkUpAttribute(displayName: "barrels")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_barrels> barrels;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Useless, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField12 = new Explanation(name: "first-person movement control");
        
        [EditorMarkUpAttribute(displayName: "max movement acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_movement_acceleration;
        
        [EditorMarkUpAttribute(displayName: "max movement velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_movement_velocity;
        
        [EditorMarkUpAttribute(displayName: "max turning acceleration")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_turning_acceleration;
        
        [EditorMarkUpAttribute(displayName: "max turning velocity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float max_turning_velocity;
        
        [EditorMarkUpAttribute(displayName: "deployed vehicle")]
        [TagReferenceAttribute("vehi")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference deployed_vehicle;
        
        [EditorMarkUpAttribute(displayName: "age effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference age_effect;
        
        [EditorMarkUpAttribute(displayName: "aged weapon")]
        [TagReferenceAttribute("weap")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference aged_weapon;
        
        [EditorMarkUpAttribute(displayName: "first person weapon offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d first_person_weapon_offset;
        
        [EditorMarkUpAttribute(displayName: "first person scope size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector2d first_person_scope_size;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "vertical heat display")]
            vertical_heat_display = 0x1,
            
            [EditorMarkUpAttribute(displayName: "mutually exclusive triggers")]
            mutually_exclusive_triggers = 0x2,
            
            [EditorMarkUpAttribute(displayName: "attacks automatically on bump")]
            attacks_automatically_on_bump = 0x4,
            
            [EditorMarkUpAttribute(displayName: "must be readied")]
            must_be_readied = 0x8,
            
            [EditorMarkUpAttribute(displayName: "doesn\'t count toward maximum")]
            doesn_t_count_toward_maximum = 0x10,
            
            [EditorMarkUpAttribute(displayName: "aim assists only when zoomed")]
            aim_assists_only_when_zoomed = 0x20,
            
            [EditorMarkUpAttribute(displayName: "prevents grenade throwing")]
            prevents_grenade_throwing = 0x40,
            
            [EditorMarkUpAttribute(displayName: "must be picked up")]
            must_be_picked_up = 0x80,
            
            [EditorMarkUpAttribute(displayName: "holds triggers when dropped")]
            holds_triggers_when_dropped = 0x100,
            
            [EditorMarkUpAttribute(displayName: "prevents melee attack")]
            prevents_melee_attack = 0x200,
            
            [EditorMarkUpAttribute(displayName: "detonates when dropped")]
            detonates_when_dropped = 0x400,
            
            [EditorMarkUpAttribute(displayName: "cannot fire at maximum age")]
            cannot_fire_at_maximum_age = 0x800,
            
            [EditorMarkUpAttribute(displayName: "secondary trigger overrides grenades")]
            secondary_trigger_overrides_grenades = 0x1000,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "(OBSOLETEdoes not depower active camo in multilplayer")]
            _obsolete_does_not_depower_active_camo_in_multilplayer = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "enables integrated night vision")]
            enables_integrated_night_vision = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "AIs use weapon melee damage")]
            ais_use_weapon_melee_damage = 0x8000,
            
            [EditorMarkUpAttribute(displayName: "forces no binoculars")]
            forces_no_binoculars = 0x10000,
            
            [EditorMarkUpAttribute(displayName: "loop fp firing animation")]
            loop_fp_firing_animation = 0x20000,
            
            [EditorMarkUpAttribute(displayName: "prevents sprinting")]
            prevents_sprinting = 0x40000,
            
            [EditorMarkUpAttribute(displayName: "cannot fire while boosting")]
            cannot_fire_while_boosting = 0x80000,
            
            [EditorMarkUpAttribute(displayName: "prevents driving")]
            prevents_driving = 0x100000,
            
            [EditorMarkUpAttribute(displayName: "prevents gunning")]
            prevents_gunning = 0x200000,
            
            [EditorMarkUpAttribute(displayName: "can be dual wielded")]
            can_be_dual_wielded = 0x400000,
            
            [EditorMarkUpAttribute(displayName: "can only be dual wielded")]
            can_only_be_dual_wielded = 0x800000,
            
            [EditorMarkUpAttribute(displayName: "melee only")]
            melee_only = 0x1000000,
            
            [EditorMarkUpAttribute(displayName: "cant fire if parent dead")]
            cant_fire_if_parent_dead = 0x2000000,
            
            [EditorMarkUpAttribute(displayName: "weapon ages with each kill")]
            weapon_ages_with_each_kill = 0x4000000,
            
            [EditorMarkUpAttribute(displayName: "weapon uses old dual fire error code")]
            weapon_uses_old_dual_fire_error_code = 0x8000000,
            
            [EditorMarkUpAttribute(displayName: "primary trigger melee attacks")]
            primary_trigger_melee_attacks = 0x10000000,
            
            [EditorMarkUpAttribute(displayName: "cannot be used by player")]
            cannot_be_used_by_player = 0x20000000,
        }
        
        public enum e_secondary_trigger_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "normal")]
            normal = 0x0,
            
            [EditorMarkUpAttribute(displayName: "slaved to primary")]
            slaved_to_primary = 0x1,
            
            [EditorMarkUpAttribute(displayName: "inhibits primary")]
            inhibits_primary = 0x2,
            
            [EditorMarkUpAttribute(displayName: "loads alterate ammunition")]
            loads_alterate_ammunition = 0x3,
            
            [EditorMarkUpAttribute(displayName: "loads multiple primary ammunition")]
            loads_multiple_primary_ammunition = 0x4,
        }
        
        public enum e_melee_damage_reporting_type : byte
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Advanced, displayName: "teh guardians11")]
            teh_guardians__1__1 = 0x0,
            
            [EditorMarkUpAttribute(displayName: "falling damage")]
            falling_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "generic collision damage")]
            generic_collision_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "generic melee damage")]
            generic_melee_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "generic explosion")]
            generic_explosion = 0x4,
            
            [EditorMarkUpAttribute(displayName: "magnum pistol")]
            magnum_pistol = 0x5,
            
            [EditorMarkUpAttribute(displayName: "plasma pistol")]
            plasma_pistol = 0x6,
            
            [EditorMarkUpAttribute(displayName: "needler")]
            needler = 0x7,
            
            [EditorMarkUpAttribute(displayName: "smg")]
            smg = 0x8,
            
            [EditorMarkUpAttribute(displayName: "plasma rifle")]
            plasma_rifle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "battle rifle")]
            battle_rifle = 0xa,
            
            [EditorMarkUpAttribute(displayName: "carbine")]
            carbine = 0xb,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0xc,
            
            [EditorMarkUpAttribute(displayName: "sniper rifle")]
            sniper_rifle = 0xd,
            
            [EditorMarkUpAttribute(displayName: "beam rifle")]
            beam_rifle = 0xe,
            
            [EditorMarkUpAttribute(displayName: "rocket launcher")]
            rocket_launcher = 0xf,
            
            [EditorMarkUpAttribute(displayName: "flak cannon")]
            flak_cannon = 0x10,
            
            [EditorMarkUpAttribute(displayName: "brute shot")]
            brute_shot = 0x11,
            
            [EditorMarkUpAttribute(displayName: "disintegrator")]
            disintegrator = 0x12,
            
            [EditorMarkUpAttribute(displayName: "brute plasma rifle")]
            brute_plasma_rifle = 0x13,
            
            [EditorMarkUpAttribute(displayName: "energy sword")]
            energy_sword = 0x14,
            
            [EditorMarkUpAttribute(displayName: "frag grenade")]
            frag_grenade = 0x15,
            
            [EditorMarkUpAttribute(displayName: "plasma grenade")]
            plasma_grenade = 0x16,
            
            [EditorMarkUpAttribute(displayName: "flag melee damage")]
            flag_melee_damage = 0x17,
            
            [EditorMarkUpAttribute(displayName: "bomb melee damage")]
            bomb_melee_damage = 0x18,
            
            [EditorMarkUpAttribute(displayName: "bomb explosion damage")]
            bomb_explosion_damage = 0x19,
            
            [EditorMarkUpAttribute(displayName: "ball melee damage")]
            ball_melee_damage = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "human turret")]
            human_turret = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "plasma turret")]
            plasma_turret = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "banshee")]
            banshee = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "ghost")]
            ghost = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "mongoose")]
            mongoose = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "scorpion")]
            scorpion = 0x20,
            
            [EditorMarkUpAttribute(displayName: "spectre driver")]
            spectre_driver = 0x21,
            
            [EditorMarkUpAttribute(displayName: "spectre gunner")]
            spectre_gunner = 0x22,
            
            [EditorMarkUpAttribute(displayName: "warthog driver")]
            warthog_driver = 0x23,
            
            [EditorMarkUpAttribute(displayName: "warthog gunner")]
            warthog_gunner = 0x24,
            
            [EditorMarkUpAttribute(displayName: "wraith")]
            wraith = 0x25,
            
            [EditorMarkUpAttribute(displayName: "tank")]
            tank = 0x26,
            
            [EditorMarkUpAttribute(displayName: "sentinel beam")]
            sentinel_beam = 0x27,
            
            [EditorMarkUpAttribute(displayName: "sentinel rpg")]
            sentinel_rpg = 0x28,
            
            [EditorMarkUpAttribute(displayName: "teleporter")]
            teleporter = 0x29,
        }
        
        public enum e_movement_penalized : short
        {
            
            [EditorMarkUpAttribute(displayName: "always")]
            always = 0x0,
            
            [EditorMarkUpAttribute(displayName: "when zoomed")]
            when_zoomed = 0x1,
            
            [EditorMarkUpAttribute(displayName: "when zoomed or reloading")]
            when_zoomed_or_reloading = 0x2,
        }
        
        public enum e_multiplayer_weapon_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "ctf flag")]
            ctf_flag = 0x1,
            
            [EditorMarkUpAttribute(displayName: "oddball ball")]
            oddball_ball = 0x2,
            
            [EditorMarkUpAttribute(displayName: "headhunter head")]
            headhunter_head = 0x3,
            
            [EditorMarkUpAttribute(displayName: "juggernaut powerup")]
            juggernaut_powerup = 0x4,
        }
        
        public enum e_weapon_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "undefined")]
            undefined = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0x1,
            
            [EditorMarkUpAttribute(displayName: "needler")]
            needler = 0x2,
            
            [EditorMarkUpAttribute(displayName: "plasma pistol")]
            plasma_pistol = 0x3,
            
            [EditorMarkUpAttribute(displayName: "plasma rifle")]
            plasma_rifle = 0x4,
            
            [EditorMarkUpAttribute(displayName: "rocket launcher")]
            rocket_launcher = 0x5,
        }
    }
    
    #region melee_aim_assist_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 1)]
    public class melee_aim_assist_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "magnetism angle", unitsSpecifier: "degrees", tooltipText: "the maximum angle that magnetism works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float magnetism_angle;
        
        [EditorMarkUpAttribute(displayName: "magnetism range", unitsSpecifier: "world units", tooltipText: "the maximum distance that magnetism works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float magnetism_range;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "throttle magnitude")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float throttle_magnitude;
        
        [EditorMarkUpAttribute(displayName: "throttle minimum distance")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float throttle_minimum_distance;
        
        [EditorMarkUpAttribute(displayName: "throttle maximum adjustment angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float throttle_maximum_adjustment_angle;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
    }
    #endregion
    
    #region melee_damage_parameters_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 76, tagFileSize: 76, alignment: 4, maxBlockCount: 1)]
    public class melee_damage_parameters_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "damage pyramid angles")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealEulerAngle2d damage_pyramid_angles;
        
        [EditorMarkUpAttribute(displayName: "damage pyramid depth")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float damage_pyramid_depth;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "melee combo damage");
        
        [EditorMarkUpAttribute(displayName: "1st hit melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _1st_hit_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "1st hit melee response")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _1st_hit_melee_response;
        
        [EditorMarkUpAttribute(displayName: "2nd hit melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _2nd_hit_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "2nd hit melee response")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _2nd_hit_melee_response;
        
        [EditorMarkUpAttribute(displayName: "3rd hit melee damage")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _3rd_hit_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "3rd hit melee response")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference _3rd_hit_melee_response;
        
        [EditorMarkUpAttribute(displayName: "lunge melee damage", tooltipText: "this is only important for the energy sword")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference lunge_melee_damage;
        
        [EditorMarkUpAttribute(displayName: "lunge melee response", tooltipText: "this is only important for the energy sword")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference lunge_melee_response;
    }
    #endregion
    
    #region aim_assist_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 36, tagFileSize: 36, alignment: 4, maxBlockCount: 1)]
    public class aim_assist_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "autoaim angle", unitsSpecifier: "degrees", tooltipText: "the maximum angle that autoaim works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float autoaim_angle;
        
        [EditorMarkUpAttribute(displayName: "autoaim range", unitsSpecifier: "world units", tooltipText: "the maximum distance that autoaim works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float autoaim_range;
        
        [EditorMarkUpAttribute(displayName: "magnetism angle", unitsSpecifier: "degrees", tooltipText: "the maximum angle that magnetism works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float magnetism_angle;
        
        [EditorMarkUpAttribute(displayName: "magnetism range", unitsSpecifier: "world units", tooltipText: "the maximum distance that magnetism works at full strength")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float magnetism_range;
        
        [EditorMarkUpAttribute(displayName: "deviation angle", unitsSpecifier: "degrees", tooltipText: "the maximum angle that a projectile is allowed to deviate from the gun barrel")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float deviation_angle;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
    }
    #endregion
    
    #region weapon_tracking_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class weapon_tracking_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "tracking type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_tracking_type tracking_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        public enum e_tracking_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "no tracking")]
            no_tracking = 0x0,
            
            [EditorMarkUpAttribute(displayName: "human tracking")]
            human_tracking = 0x1,
            
            [EditorMarkUpAttribute(displayName: "plasma tracking")]
            plasma_tracking = 0x2,
        }
    }
    #endregion
    
    #region weapon_interface_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 32, tagFileSize: 32, alignment: 4, maxBlockCount: 1)]
    public class weapon_interface_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "interface");
        
        [EditorMarkUpAttribute(displayName: "shared interface")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_shared_interface_struct_block shared_interface;
        
        [EditorMarkUpAttribute(displayName: "first person")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<weapon_first_person_interface_block> first_person;
        
        [EditorMarkUpAttribute(displayName: "new hud interface")]
        [TagReferenceAttribute("nhdt")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference new_hud_interface;
    }
    #endregion
    
    #region weapon_shared_interface_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1)]
    public class weapon_shared_interface_struct_block
    {
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region weapon_first_person_interface_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 4)]
    public class weapon_first_person_interface_block
    {
        
        [EditorMarkUpAttribute(displayName: "first person model")]
        [TagReferenceAttribute("mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference first_person_model;
        
        [EditorMarkUpAttribute(displayName: "first person animations")]
        [TagReferenceAttribute("jmad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference first_person_animations;
    }
    #endregion
    
    #region magazines
    [TagBlockDefinitionAttribute(cacheFileSize: 92, tagFileSize: 92, alignment: 4, maxBlockCount: 2)]
    public class magazines
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "rounds recharged", unitsSpecifier: "per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_recharged;
        
        [EditorMarkUpAttribute(displayName: "rounds total initial")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_total_initial;
        
        [EditorMarkUpAttribute(displayName: "rounds total maximum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_total_maximum;
        
        [EditorMarkUpAttribute(displayName: "rounds loaded maximum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_loaded_maximum;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "reload time", unitsSpecifier: "seconds", tooltipText: "the length of time it takes to load a single magazine into the weapon")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reload_time;
        
        [EditorMarkUpAttribute(displayName: "rounds reloaded")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_reloaded;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "chamber time", unitsSpecifier: "seconds", tooltipText: "the length of time it takes to chamber the next round")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float chamber_time;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "reloading effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference reloading_effect;
        
        [EditorMarkUpAttribute(displayName: "reloading damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference reloading_damage_effect;
        
        [EditorMarkUpAttribute(displayName: "chambering effect")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference chambering_effect;
        
        [EditorMarkUpAttribute(displayName: "chambering damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference chambering_damage_effect;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "magazines")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<magazine_objects> magazines_;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "wastes rounds when reloaded")]
            wastes_rounds_when_reloaded = 0x1,
            
            [EditorMarkUpAttribute(displayName: "every round must be chambered")]
            every_round_must_be_chambered = 0x2,
        }
    }
    #endregion
    
    #region magazine_objects
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 8)]
    public class magazine_objects
    {
        
        [EditorMarkUpAttribute(displayName: "rounds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "equipment")]
        [TagReferenceAttribute("eqip")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference equipment;
    }
    #endregion
    
    #region weapon_triggers
    [TagBlockDefinitionAttribute(cacheFileSize: 64, tagFileSize: 64, alignment: 4, maxBlockCount: 2)]
    public class weapon_triggers
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "input")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_input input;
        
        [EditorMarkUpAttribute(displayName: "behavior")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_behavior behavior;
        
        [EditorMarkUpAttribute(displayName: "primary barrel")]
        [BlockIndexAttribute(blockName: "weapon_barrels")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short primary_barrel;
        
        [EditorMarkUpAttribute(displayName: "secondary barrel")]
        [BlockIndexAttribute(blockName: "weapon_barrels")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short secondary_barrel;
        
        [EditorMarkUpAttribute(displayName: "prediction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_prediction prediction;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "autofire")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_trigger_autofire_struct_block autofire;
        
        [EditorMarkUpAttribute(displayName: "charging")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_trigger_charging_struct_block charging;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "autofire single action only")]
            autofire_single_action_only = 0x1,
        }
        
        public enum e_input : short
        {
            
            [EditorMarkUpAttribute(displayName: "right trigger")]
            right_trigger = 0x0,
            
            [EditorMarkUpAttribute(displayName: "left trigger")]
            left_trigger = 0x1,
            
            [EditorMarkUpAttribute(displayName: "melee attack")]
            melee_attack = 0x2,
        }
        
        public enum e_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "spew")]
            spew = 0x0,
            
            [EditorMarkUpAttribute(displayName: "latch")]
            latch = 0x1,
            
            [EditorMarkUpAttribute(displayName: "latch-autofire")]
            latch_autofire = 0x2,
            
            [EditorMarkUpAttribute(displayName: "charge")]
            charge = 0x3,
            
            [EditorMarkUpAttribute(displayName: "latch-zoom")]
            latch_zoom = 0x4,
            
            [EditorMarkUpAttribute(displayName: "latch-rocketlauncher")]
            latch_rocketlauncher = 0x5,
        }
        
        public enum e_prediction : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "spew")]
            spew = 0x1,
            
            [EditorMarkUpAttribute(displayName: "charge")]
            charge = 0x2,
        }
    }
    #endregion
    
    #region weapon_barrels
    [TagBlockDefinitionAttribute(cacheFileSize: 236, tagFileSize: 236, alignment: 4, maxBlockCount: 2)]
    public class weapon_barrels
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "firing");
        
        [EditorMarkUpAttribute(displayName: "rounds per second", tooltipText: "the number of firing effects created per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds rounds_per_second;
        
        [EditorMarkUpAttribute(displayName: "acceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous firing time it takes for the weapon to achieve its final rounds pe" +
    "r second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float acceleration_time;
        
        [EditorMarkUpAttribute(displayName: "deceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous idle time it takes for the weapon to return from its final rounds " +
    "per second to its initial")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float deceleration_time;
        
        [EditorMarkUpAttribute(displayName: "barrel spin scale", tooltipText: "scale the barrel spin speed by this amount")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float barrel_spin_scale;
        
        [EditorMarkUpAttribute(displayName: "blurred rate of fire", tooltipText: "a percentage between 0 and 1 which controls how soon in its firing animation the " +
    "weapon blurs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blurred_rate_of_fire;
        
        [EditorMarkUpAttribute(displayName: "shots per fire", tooltipText: "allows designer caps to the shots you can fire from one firing action")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ShortBounds shots_per_fire;
        
        [EditorMarkUpAttribute(displayName: "fire recovery time", unitsSpecifier: "seconds", tooltipText: "how long after a set of shots it takes before the barrel can fire again")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float fire_recovery_time;
        
        [EditorMarkUpAttribute(displayName: "soft recovery fraction", tooltipText: "how much of the recovery allows shots to be queued")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float soft_recovery_fraction;
        
        [EditorMarkUpAttribute(displayName: "magazine", tooltipText: "the magazine from which this trigger draws its ammunition")]
        [BlockIndexAttribute(blockName: "magazines")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short magazine;
        
        [EditorMarkUpAttribute(displayName: "rounds per shot", tooltipText: "the number of rounds expended to create a single firing effect")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_per_shot;
        
        [EditorMarkUpAttribute(displayName: "minimum rounds loaded", tooltipText: "the minimum number of rounds necessary to fire the weapon")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short minimum_rounds_loaded;
        
        [EditorMarkUpAttribute(displayName: "rounds between tracers", tooltipText: "the number of non-tracer rounds fired between tracers")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short rounds_between_tracers;
        
        [EditorMarkUpAttribute(displayName: "optional barrel marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id optional_barrel_marker_name;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "prediction properties", explanation: "what the behavior of this barrel is in a predicted network game");
        
        [EditorMarkUpAttribute(displayName: "prediction type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_prediction_type prediction_type;
        
        [EditorMarkUpAttribute(displayName: "firing noise", tooltipText: "how loud this weapon appears to the AI")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_firing_noise firing_noise;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "error");
        
        [EditorMarkUpAttribute(displayName: "acceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous firing time it takes for the weapon to achieve its final error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float acceleration_time1;
        
        [EditorMarkUpAttribute(displayName: "deceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous idle time it takes for the weapon to return to its initial error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float deceleration_time1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "damage error", tooltipText: "the range of angles (in degrees) that a damaged weapon will skew fire")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds damage_error;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "dual weapon error");
        
        [EditorMarkUpAttribute(displayName: "acceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous firing time it takes for the weapon to achieve its final error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float acceleration_time2;
        
        [EditorMarkUpAttribute(displayName: "deceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous idle time it takes for the weapon to return to its initial error")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float deceleration_time2;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "minimum error", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_error;
        
        [EditorMarkUpAttribute(displayName: "error angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds error_angle;
        
        [EditorMarkUpAttribute(displayName: "dual wield damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float dual_wield_damage_scale;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "projectile");
        
        [EditorMarkUpAttribute(displayName: "distribution function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_distribution_function distribution_function;
        
        [EditorMarkUpAttribute(displayName: "projectiles per shot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short projectiles_per_shot;
        
        [EditorMarkUpAttribute(displayName: "distribution angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float distribution_angle;
        
        [EditorMarkUpAttribute(displayName: "minimum error", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_error1;
        
        [EditorMarkUpAttribute(displayName: "error angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds error_angle1;
        
        [EditorMarkUpAttribute(displayName: "first person offset", unitsSpecifier: "world units", tooltipText: "+x is forward, +z is up, +y is left")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d first_person_offset;
        
        [EditorMarkUpAttribute(displayName: "damage effect reporting type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_damage_effect_reporting_type damage_effect_reporting_type;
        
        [PaddingAttribute(PaddingType.Padding, 3)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "projectile")]
        [TagReferenceAttribute("proj")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference projectile;
        
        [EditorMarkUpAttribute(displayName: "eh")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public weapon_barrel_damage_effect_struct_block eh;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField5 = new Explanation(name: "misc");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "ejection port recovery time", tooltipText: "the amount of time (in seconds) it takes for the ejection port to transition from" +
    " 1.0 (open) to 0.0 (closed) after a shot has been fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ejection_port_recovery_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "illumination recovery time", tooltipText: "the amount of time (in seconds) it takes the illumination function to transition " +
    "from 1.0 (bright) to 0.0 (dark) after a shot has been fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float illumination_recovery_time;
        
        [EditorMarkUpAttribute(displayName: "heat generated per round", unitsSpecifier: "[0,1]", tooltipText: "the amount of heat generated each time the trigger is fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float heat_generated_per_round;
        
        [EditorMarkUpAttribute(displayName: "age generated per round", unitsSpecifier: "[0,1]", tooltipText: "the amount the weapon ages each time the trigger is fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float age_generated_per_round;
        
        [EditorMarkUpAttribute(displayName: "overload time", unitsSpecifier: "seconds", tooltipText: "the next trigger fires this often while holding down this trigger")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float overload_time;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField6 = new Explanation(name: "angle change (recoil)");
        
        [EditorMarkUpAttribute(displayName: "angle change per shot", tooltipText: "angle change per shot of the weapon during firing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public AngleBounds angle_change_per_shot;
        
        [EditorMarkUpAttribute(displayName: "acceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous firing time it takes for the weapon to achieve its final angle cha" +
    "nge per shot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float acceleration_time3;
        
        [EditorMarkUpAttribute(displayName: "deceleration time", unitsSpecifier: "seconds", tooltipText: "the continuous idle time it takes for the weapon to return to its initial angle c" +
    "hange per shot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float deceleration_time3;
        
        [EditorMarkUpAttribute(displayName: "angle change function", tooltipText: "function used to scale between initial and final angle change per shot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_angle_change_function angle_change_function;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "firing effects", tooltipText: "firing effects determine what happens when this trigger is fired")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<barrel_firing_effect_block> firing_effects;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "tracks fired projectile", tooltipText: "poo poo ca ca pee pee")]
            tracks_fired_projectile = 0x1,
            
            [EditorMarkUpAttribute(displayName: "random firing effects", tooltipText: "rather than being chosen sequentially, firing effects are picked randomly")]
            random_firing_effects = 0x2,
            
            [EditorMarkUpAttribute(displayName: "can fire with partial ammo", tooltipText: "allows a weapon to be fired as long as there is a non-zero amount of ammunition l" +
    "oaded")]
            can_fire_with_partial_ammo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "projectiles use weapon origin", tooltipText: "instead of coming out of the magic first person camera origin, the projectiles fo" +
    "r this weapon actually come out of the gun")]
            projectiles_use_weapon_origin = 0x8,
            
            [EditorMarkUpAttribute(displayName: "ejects during chamber", tooltipText: "this trigger\'s ejection port is started during the key frame of its chamber anima" +
    "tion")]
            ejects_during_chamber = 0x10,
            
            [EditorMarkUpAttribute(displayName: "use error when unzoomed")]
            use_error_when_unzoomed = 0x20,
            
            [EditorMarkUpAttribute(displayName: "projectile vector cannot be adjusted", tooltipText: "projectiles fired by this weapon cannot have their direction adjusted by the AI t" +
    "o hit the target")]
            projectile_vector_cannot_be_adjusted = 0x40,
            
            [EditorMarkUpAttribute(displayName: "projectiles have identical error")]
            projectiles_have_identical_error = 0x80,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "projectiles fire parallel", tooltipText: "If there are multiple guns for this trigger, the projectiles emerge in parallel b" +
    "eams (rather than independant aiming)")]
            projectiles_fire_parallel = 0x100,
            
            [EditorMarkUpAttribute(displayName: "cant fire when others firing")]
            cant_fire_when_others_firing = 0x200,
            
            [EditorMarkUpAttribute(displayName: "cant fire when others recovering")]
            cant_fire_when_others_recovering = 0x400,
            
            [EditorMarkUpAttribute(displayName: "don\'t clear fire bit after recovering")]
            don_t_clear_fire_bit_after_recovering = 0x800,
            
            [EditorMarkUpAttribute(displayName: "stagger fire across multiple markers")]
            stagger_fire_across_multiple_markers = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "fires locked projectiles")]
            fires_locked_projectiles = 0x2000,
        }
        
        public enum e_prediction_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "continuous")]
            continuous = 0x1,
            
            [EditorMarkUpAttribute(displayName: "instant")]
            instant = 0x2,
        }
        
        public enum e_firing_noise : short
        {
            
            [EditorMarkUpAttribute(displayName: "silent")]
            silent = 0x0,
            
            [EditorMarkUpAttribute(displayName: "medium")]
            medium = 0x1,
            
            [EditorMarkUpAttribute(displayName: "loud")]
            loud = 0x2,
            
            [EditorMarkUpAttribute(displayName: "shout")]
            shout = 0x3,
            
            [EditorMarkUpAttribute(displayName: "quiet")]
            quiet = 0x4,
        }
        
        public enum e_distribution_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x0,
            
            [EditorMarkUpAttribute(displayName: "horizontal fan")]
            horizontal_fan = 0x1,
        }
        
        public enum e_damage_effect_reporting_type : byte
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Advanced, displayName: "teh guardians11")]
            teh_guardians__1__1 = 0x0,
            
            [EditorMarkUpAttribute(displayName: "falling damage")]
            falling_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "generic collision damage")]
            generic_collision_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "generic melee damage")]
            generic_melee_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "generic explosion")]
            generic_explosion = 0x4,
            
            [EditorMarkUpAttribute(displayName: "magnum pistol")]
            magnum_pistol = 0x5,
            
            [EditorMarkUpAttribute(displayName: "plasma pistol")]
            plasma_pistol = 0x6,
            
            [EditorMarkUpAttribute(displayName: "needler")]
            needler = 0x7,
            
            [EditorMarkUpAttribute(displayName: "smg")]
            smg = 0x8,
            
            [EditorMarkUpAttribute(displayName: "plasma rifle")]
            plasma_rifle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "battle rifle")]
            battle_rifle = 0xa,
            
            [EditorMarkUpAttribute(displayName: "carbine")]
            carbine = 0xb,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0xc,
            
            [EditorMarkUpAttribute(displayName: "sniper rifle")]
            sniper_rifle = 0xd,
            
            [EditorMarkUpAttribute(displayName: "beam rifle")]
            beam_rifle = 0xe,
            
            [EditorMarkUpAttribute(displayName: "rocket launcher")]
            rocket_launcher = 0xf,
            
            [EditorMarkUpAttribute(displayName: "flak cannon")]
            flak_cannon = 0x10,
            
            [EditorMarkUpAttribute(displayName: "brute shot")]
            brute_shot = 0x11,
            
            [EditorMarkUpAttribute(displayName: "disintegrator")]
            disintegrator = 0x12,
            
            [EditorMarkUpAttribute(displayName: "brute plasma rifle")]
            brute_plasma_rifle = 0x13,
            
            [EditorMarkUpAttribute(displayName: "energy sword")]
            energy_sword = 0x14,
            
            [EditorMarkUpAttribute(displayName: "frag grenade")]
            frag_grenade = 0x15,
            
            [EditorMarkUpAttribute(displayName: "plasma grenade")]
            plasma_grenade = 0x16,
            
            [EditorMarkUpAttribute(displayName: "flag melee damage")]
            flag_melee_damage = 0x17,
            
            [EditorMarkUpAttribute(displayName: "bomb melee damage")]
            bomb_melee_damage = 0x18,
            
            [EditorMarkUpAttribute(displayName: "bomb explosion damage")]
            bomb_explosion_damage = 0x19,
            
            [EditorMarkUpAttribute(displayName: "ball melee damage")]
            ball_melee_damage = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "human turret")]
            human_turret = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "plasma turret")]
            plasma_turret = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "banshee")]
            banshee = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "ghost")]
            ghost = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "mongoose")]
            mongoose = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "scorpion")]
            scorpion = 0x20,
            
            [EditorMarkUpAttribute(displayName: "spectre driver")]
            spectre_driver = 0x21,
            
            [EditorMarkUpAttribute(displayName: "spectre gunner")]
            spectre_gunner = 0x22,
            
            [EditorMarkUpAttribute(displayName: "warthog driver")]
            warthog_driver = 0x23,
            
            [EditorMarkUpAttribute(displayName: "warthog gunner")]
            warthog_gunner = 0x24,
            
            [EditorMarkUpAttribute(displayName: "wraith")]
            wraith = 0x25,
            
            [EditorMarkUpAttribute(displayName: "tank")]
            tank = 0x26,
            
            [EditorMarkUpAttribute(displayName: "sentinel beam")]
            sentinel_beam = 0x27,
            
            [EditorMarkUpAttribute(displayName: "sentinel rpg")]
            sentinel_rpg = 0x28,
            
            [EditorMarkUpAttribute(displayName: "teleporter")]
            teleporter = 0x29,
        }
        
        public enum e_angle_change_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "linear")]
            linear = 0x0,
            
            [EditorMarkUpAttribute(displayName: "early")]
            early = 0x1,
            
            [EditorMarkUpAttribute(displayName: "very early")]
            very_early = 0x2,
            
            [EditorMarkUpAttribute(displayName: "late")]
            late = 0x3,
            
            [EditorMarkUpAttribute(displayName: "very late")]
            very_late = 0x4,
            
            [EditorMarkUpAttribute(displayName: "cosine")]
            cosine = 0x5,
            
            [EditorMarkUpAttribute(displayName: "one")]
            one = 0x6,
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x7,
        }
    }
    #endregion
    
    #region weapon_barrel_damage_effect_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class weapon_barrel_damage_effect_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference damage_effect;
    }
    #endregion
    
    #region barrel_firing_effect_block
    [TagBlockDefinitionAttribute(cacheFileSize: 52, tagFileSize: 52, alignment: 4, maxBlockCount: 3)]
    public class barrel_firing_effect_block
    {
        
        [EditorMarkUpAttribute(displayName: "shot count lower bound", tooltipText: "the minimum number of times this firing effect will be used, once it has been cho" +
    "sen")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shot_count_lower_bound;
        
        [EditorMarkUpAttribute(displayName: "shot count upper bound", tooltipText: "the maximum number of times this firing effect will be used, once it has been cho" +
    "sen")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short shot_count_upper_bound;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "firing effect", tooltipText: "this effect is used when the weapon is loaded and fired normally")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference firing_effect;
        
        [EditorMarkUpAttribute(displayName: "misfire effect", tooltipText: "this effect is used when the weapon is loaded but fired while overheated")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference misfire_effect;
        
        [EditorMarkUpAttribute(displayName: "empty effect", tooltipText: "this effect is used when the weapon is not loaded")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference empty_effect;
        
        [EditorMarkUpAttribute(displayName: "firing damage", tooltipText: "this effect is used when the weapon is loaded and fired normally")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference firing_damage;
        
        [EditorMarkUpAttribute(displayName: "misfire damage", tooltipText: "this effect is used when the weapon is loaded but fired while overheated")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference misfire_damage;
        
        [EditorMarkUpAttribute(displayName: "empty damage", tooltipText: "this effect is used when the weapon is not loaded")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference empty_damage;
    }
    #endregion
    
    #region weapon_trigger_autofire_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 1)]
    public class weapon_trigger_autofire_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "AUTOFIRE");
        
        [EditorMarkUpAttribute(displayName: "autofire time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float autofire_time;
        
        [EditorMarkUpAttribute(displayName: "autofire throw")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float autofire_throw;
        
        [EditorMarkUpAttribute(displayName: "secondary action")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_secondary_action secondary_action;
        
        [EditorMarkUpAttribute(displayName: "primary action")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_secondary_action primary_action;
        
        public enum e_secondary_action : short
        {
            
            [EditorMarkUpAttribute(displayName: "fire")]
            fire = 0x0,
            
            [EditorMarkUpAttribute(displayName: "charge")]
            charge = 0x1,
            
            [EditorMarkUpAttribute(displayName: "track")]
            track = 0x2,
            
            [EditorMarkUpAttribute(displayName: "fire other")]
            fire_other = 0x3,
        }
    }
    #endregion
    
    #region weapon_trigger_charging_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 36, tagFileSize: 36, alignment: 4, maxBlockCount: 1)]
    public class weapon_trigger_charging_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "CHARGING");
        
        [EditorMarkUpAttribute(displayName: "charging time", unitsSpecifier: "seconds", tooltipText: "the amount of time it takes for this trigger to become fully charged")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float charging_time;
        
        [EditorMarkUpAttribute(displayName: "charged time", unitsSpecifier: "seconds", tooltipText: "the amount of time this trigger can be charged before becoming overcharged")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float charged_time;
        
        [EditorMarkUpAttribute(displayName: "overcharged action")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_overcharged_action overcharged_action;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "charged illumination", unitsSpecifier: "[0,1]", tooltipText: "the amount of illumination given off when the weapon is fully charged")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float charged_illumination;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "spew time", unitsSpecifier: "seconds", tooltipText: "length of time the weapon will spew (fire continuously) while discharging")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float spew_time;
        
        [EditorMarkUpAttribute(displayName: "charging effect", tooltipText: "the charging effect is created once when the trigger begins to charge")]
        [TagReferenceAttribute("")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference charging_effect;
        
        [EditorMarkUpAttribute(displayName: "charging damage effect", tooltipText: "the charging effect is created once when the trigger begins to charge")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference charging_damage_effect;
        
        public enum e_overcharged_action : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "explode")]
            explode = 0x1,
            
            [EditorMarkUpAttribute(displayName: "discharge")]
            discharge = 0x2,
        }
    }
    #endregion
}
