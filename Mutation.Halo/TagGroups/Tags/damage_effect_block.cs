//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 200, tagFileSize: 212, version: 6, groupTag: "jpt!", parentGroupTag: "", name: "damage_effect", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class damage_effect_block
    {
        
        [EditorMarkUpAttribute(displayName: "radius", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds radius;
        
        [EditorMarkUpAttribute(displayName: "cutoff scale", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float cutoff_scale;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "damage");
        
        [EditorMarkUpAttribute(displayName: "side effect")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_side_effect side_effect;
        
        [EditorMarkUpAttribute(displayName: "category")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_category category;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags1 flags1;
        
        [EditorMarkUpAttribute(displayName: "AOE core radius", unitsSpecifier: "world units", tooltipText: "if this is area of effect damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float aoe_core_radius;
        
        [EditorMarkUpAttribute(displayName: "damage lower bound")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float damage_lower_bound;
        
        [EditorMarkUpAttribute(displayName: "damage upper bound")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds damage_upper_bound;
        
        [EditorMarkUpAttribute(displayName: "dmg inner cone angle")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float dmg_inner_cone_angle;
        
        [EditorMarkUpAttribute(displayName: "blah")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public damage_outer_cone_angle_struct_block blah;
        
        [EditorMarkUpAttribute(displayName: "active camouflage damage", unitsSpecifier: "[0,1]", tooltipText: "how much more visible this damage makes a player who is active camouflaged")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float active_camouflage_damage;
        
        [EditorMarkUpAttribute(displayName: "stun", unitsSpecifier: "[0,1]", tooltipText: "amount of stun added to damaged unit")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stun;
        
        [EditorMarkUpAttribute(displayName: "maximum stun", unitsSpecifier: "[0,1]", tooltipText: "damaged unit\'s stun will never exceed this amount")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_stun;
        
        [EditorMarkUpAttribute(displayName: "stun time", unitsSpecifier: "seconds", tooltipText: "duration of stun due to this damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stun_time;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "instantaneous acceleration", unitsSpecifier: "[0,+inf]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float instantaneous_acceleration;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "rider direct damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float rider_direct_damage_scale;
        
        [EditorMarkUpAttribute(displayName: "rider maximum transfer damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float rider_maximum_transfer_damage_scale;
        
        [EditorMarkUpAttribute(displayName: "rider minimum transfer damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float rider_minimum_transfer_damage_scale;
        
        [PaddingAttribute(PaddingType.Useless, 140)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "general_damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id general_damage;
        
        [EditorMarkUpAttribute(displayName: "specific_damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id specific_damage;
        
        [EditorMarkUpAttribute(displayName: "AI stun radius", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float ai_stun_radius;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "AI stun bounds", unitsSpecifier: "(0-1)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds ai_stun_bounds;
        
        [EditorMarkUpAttribute(displayName: "shake radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float shake_radius;
        
        [EditorMarkUpAttribute(displayName: "EMP radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float emp_radius;
        
        [EditorMarkUpAttribute(displayName: "player responses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<damage_effect_player_response_block> player_responses;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "temporary camera impulse");
        
        [EditorMarkUpAttribute(displayName: "duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float duration;
        
        [EditorMarkUpAttribute(displayName: "fade function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_fade_function fade_function;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "rotation", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float rotation;
        
        [EditorMarkUpAttribute(displayName: "pushback", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pushback;
        
        [EditorMarkUpAttribute(displayName: "jitter", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealBounds jitter;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [PaddingAttribute(PaddingType.Useless, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "camera shaking", explanation: @"The wobble function and weight affects how the camera shake oscilates over time.
If the weight is one, then the wobble function completely scales the translational
and rotational magnitudes.  The less the weight, the less the effect wobble has.
If the wobble weight is 0 then wobble is completely ignored.");
        
        [EditorMarkUpAttribute(displayName: "duration", unitsSpecifier: "seconds", tooltipText: "the effect will last for this duration.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float duration1;
        
        [EditorMarkUpAttribute(displayName: "falloff function", tooltipText: "a function to envelope the effect\'s magnitude over time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_fade_function falloff_function;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [EditorMarkUpAttribute(displayName: "random translation", unitsSpecifier: "world units", tooltipText: "random translation in all directions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float random_translation;
        
        [EditorMarkUpAttribute(displayName: "random rotation", unitsSpecifier: "degrees", tooltipText: "random rotation in all directions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float random_rotation;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        [EditorMarkUpAttribute(displayName: "wobble function", tooltipText: "a function to perturb the effect\'s behavior over time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_wobble_function wobble_function;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding9;
        
        [EditorMarkUpAttribute(displayName: "wobble function period", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float wobble_function_period;
        
        [EditorMarkUpAttribute(displayName: "wobble weight", tooltipText: "a value of 0.0 signifies that the wobble function has no effect; a value of 1.0 s" +
    "ignifies that the effect will not be felt when the wobble function\'s value is ze" +
    "ro.")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float wobble_weight;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding10;
        
        [PaddingAttribute(PaddingType.Useless, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding11;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding12;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "sound");
        
        [EditorMarkUpAttribute(displayName: "sound")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference sound;
        
        [PaddingAttribute(PaddingType.Useless, 112)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding13;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "breaking effect", explanation: @"Controls particle velocities when a damage effect shatters a materal.

All particles created within 'forward radius' will be kicked along the
damage direction with a speed equivalent to 'forward velocity' at the
epicenter of the damage and 0 at the outer radius.  'Forward exponent'
is used to modify the velocity scale.  A low exponent (like 0.5) means that
particles between the epicenter and the radius will be kicked out with a speed
closer to 'forward velocity' than if a higher exponent (like 2.0) was used

The outward fields work in a similar way, except instead of kicking along the
damage direction, they get kick away from the damage epicenter.");
        
        [EditorMarkUpAttribute(displayName: "forward velocity", unitsSpecifier: "world units per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float forward_velocity;
        
        [EditorMarkUpAttribute(displayName: "forward radius", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float forward_radius;
        
        [EditorMarkUpAttribute(displayName: "forward exponent")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float forward_exponent;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding14;
        
        [EditorMarkUpAttribute(displayName: "outward velocity", unitsSpecifier: "world units per second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float outward_velocity;
        
        [EditorMarkUpAttribute(displayName: "outward radius", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float outward_radius;
        
        [EditorMarkUpAttribute(displayName: "outward exponent")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float outward_exponent;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding15;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "don\'t scale damage by distance")]
            don_t_scale_damage_by_distance = 0x1,
            
            [EditorMarkUpAttribute(displayName: "area damage players only", tooltipText: "area of effect damage only affects players")]
            area_damage_players_only = 0x2,
        }
        
        public enum e_side_effect : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "harmless")]
            harmless = 0x1,
            
            [EditorMarkUpAttribute(displayName: "lethal to the unsuspecting")]
            lethal_to_the_unsuspecting = 0x2,
            
            [EditorMarkUpAttribute(displayName: "emp")]
            emp = 0x3,
        }
        
        public enum e_category : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "falling")]
            falling = 0x1,
            
            [EditorMarkUpAttribute(displayName: "bullet")]
            bullet = 0x2,
            
            [EditorMarkUpAttribute(displayName: "grenade")]
            grenade = 0x3,
            
            [EditorMarkUpAttribute(displayName: "high explosive")]
            high_explosive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "sniper")]
            sniper = 0x5,
            
            [EditorMarkUpAttribute(displayName: "melee")]
            melee = 0x6,
            
            [EditorMarkUpAttribute(displayName: "flame")]
            flame = 0x7,
            
            [EditorMarkUpAttribute(displayName: "mounted weapon")]
            mounted_weapon = 0x8,
            
            [EditorMarkUpAttribute(displayName: "vehicle")]
            vehicle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "plasma")]
            plasma = 0xa,
            
            [EditorMarkUpAttribute(displayName: "needle")]
            needle = 0xb,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0xc,
        }
        
        [FlagsAttribute()]
        public enum b_flags1 : uint
        {
            
            [EditorMarkUpAttribute(displayName: "does not hurt owner")]
            does_not_hurt_owner = 0x1,
            
            [EditorMarkUpAttribute(displayName: "can cause headshots")]
            can_cause_headshots = 0x2,
            
            [EditorMarkUpAttribute(displayName: "pings resistant units")]
            pings_resistant_units = 0x4,
            
            [EditorMarkUpAttribute(displayName: "does not hurt friends")]
            does_not_hurt_friends = 0x8,
            
            [EditorMarkUpAttribute(displayName: "does not ping units")]
            does_not_ping_units = 0x10,
            
            [EditorMarkUpAttribute(displayName: "detonates explosives")]
            detonates_explosives = 0x20,
            
            [EditorMarkUpAttribute(displayName: "only hurts shields")]
            only_hurts_shields = 0x40,
            
            [EditorMarkUpAttribute(displayName: "causes flaming death")]
            causes_flaming_death = 0x80,
            
            [EditorMarkUpAttribute(displayName: "damage indicators always point down")]
            damage_indicators_always_point_down = 0x100,
            
            [EditorMarkUpAttribute(displayName: "skips shields")]
            skips_shields = 0x200,
            
            [EditorMarkUpAttribute(displayName: "only hurts one infection form")]
            only_hurts_one_infection_form = 0x400,
            
            [EditorMarkUpAttribute(displayName: "obsolete, was can cause multiplayer headshots")]
            obsolete__was_can_cause_multiplayer_headshots = 0x800,
            
            [EditorMarkUpAttribute(displayName: "infection form pop")]
            infection_form_pop = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "ignore seat scale for dir. dmg")]
            ignore_seat_scale_for_dir__dmg = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "forces hard ping")]
            forces_hard_ping = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "does not hurt players")]
            does_not_hurt_players = 0x8000,
        }
        
        public enum e_fade_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "linear")]
            linear = 0x0,
            
            [EditorMarkUpAttribute(displayName: "late")]
            late = 0x1,
            
            [EditorMarkUpAttribute(displayName: "very late")]
            very_late = 0x2,
            
            [EditorMarkUpAttribute(displayName: "early")]
            early = 0x3,
            
            [EditorMarkUpAttribute(displayName: "very early")]
            very_early = 0x4,
            
            [EditorMarkUpAttribute(displayName: "cosine")]
            cosine = 0x5,
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x6,
            
            [EditorMarkUpAttribute(displayName: "one")]
            one = 0x7,
        }
        
        public enum e_wobble_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "one")]
            one = 0x0,
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cosine")]
            cosine = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "cosine (variable period")]
            cosine__variable_period = 0x3,
            
            [EditorMarkUpAttribute(displayName: "diagonal wave")]
            diagonal_wave = 0x4,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "diagonal wave (variable period")]
            diagonal_wave__variable_period = 0x5,
            
            [EditorMarkUpAttribute(displayName: "slide")]
            slide = 0x6,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "slide (variable period")]
            slide__variable_period = 0x7,
            
            [EditorMarkUpAttribute(displayName: "noise")]
            noise = 0x8,
            
            [EditorMarkUpAttribute(displayName: "jitter")]
            jitter = 0x9,
            
            [EditorMarkUpAttribute(displayName: "wander")]
            wander = 0xa,
            
            [EditorMarkUpAttribute(displayName: "spark")]
            spark = 0xb,
        }
    }
    
    #region damage_outer_cone_angle_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class damage_outer_cone_angle_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "dmg outer cone angle")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float dmg_outer_cone_angle;
    }
    #endregion
    
    #region damage_effect_player_response_block
    [TagBlockDefinitionAttribute(cacheFileSize: 76, tagFileSize: 76, alignment: 4, maxBlockCount: 2)]
    public class damage_effect_player_response_block
    {
        
        [EditorMarkUpAttribute(displayName: "response type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_response_type response_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "screen flash", explanation: @"There are seven screen flash types:

NONE: DST'= DST
LIGHTEN: DST'= DST(1 - A) + C
DARKEN: DST'= DST(1 - A) - C
MAX: DST'= MAX[DST(1 - C), (C - A)(1-DST)]
MIN: DST'= MIN[DST(1 - C), (C + A)(1-DST)]
TINT: DST'= DST(1 - C) + (A*PIN[2C - 1, 0, 1] + A)(1-DST)
INVERT: DST'= DST(1 - C) + A)

In the above equations C and A represent the color and alpha of the screen flash, DST represents the color in the framebuffer before the screen flash is applied, and DST' represents the color after the screen flash is applied.");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "screen flash")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public screen_flash_definition_struct_block screen_flash;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "vibration");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "vibration")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public vibration_definition_struct_block vibration;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "sound effect");
        
        [EditorMarkUpAttribute(displayName: "sound effect")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public damage_effect_sound_effect_definition_block sound_effect;
        
        [PaddingAttribute(PaddingType.Useless, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        public enum e_response_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "shielded")]
            shielded = 0x0,
            
            [EditorMarkUpAttribute(displayName: "unshielded")]
            unshielded = 0x1,
            
            [EditorMarkUpAttribute(displayName: "all")]
            all = 0x2,
        }
    }
    #endregion
    
    #region screen_flash_definition_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 32, tagFileSize: 32, alignment: 4, maxBlockCount: 1)]
    public class screen_flash_definition_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float duration;
        
        [EditorMarkUpAttribute(displayName: "fade function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_fade_function fade_function;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "maximum intensity", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_intensity;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealColorArgb color;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "lighten")]
            lighten = 0x1,
            
            [EditorMarkUpAttribute(displayName: "darken")]
            darken = 0x2,
            
            [EditorMarkUpAttribute(displayName: "max")]
            max = 0x3,
            
            [EditorMarkUpAttribute(displayName: "min")]
            min = 0x4,
            
            [EditorMarkUpAttribute(displayName: "invert")]
            invert = 0x5,
            
            [EditorMarkUpAttribute(displayName: "tint")]
            tint = 0x6,
        }
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "low")]
            low = 0x0,
            
            [EditorMarkUpAttribute(displayName: "medium")]
            medium = 0x1,
            
            [EditorMarkUpAttribute(displayName: "high")]
            high = 0x2,
        }
        
        public enum e_fade_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "linear")]
            linear = 0x0,
            
            [EditorMarkUpAttribute(displayName: "late")]
            late = 0x1,
            
            [EditorMarkUpAttribute(displayName: "very late")]
            very_late = 0x2,
            
            [EditorMarkUpAttribute(displayName: "early")]
            early = 0x3,
            
            [EditorMarkUpAttribute(displayName: "very early")]
            very_early = 0x4,
            
            [EditorMarkUpAttribute(displayName: "cosine")]
            cosine = 0x5,
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x6,
            
            [EditorMarkUpAttribute(displayName: "one")]
            one = 0x7,
        }
    }
    #endregion
    
    #region vibration_definition_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 24, tagFileSize: 24, alignment: 4, maxBlockCount: 1)]
    public class vibration_definition_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "low frequency vibration");
        
        [EditorMarkUpAttribute(displayName: "low frequency vibration")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public vibration_frequency_definition_struct_block low_frequency_vibration;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "high frequency vibration");
        
        [EditorMarkUpAttribute(displayName: "high frequency vibration")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public vibration_frequency_definition_struct_block high_frequency_vibration;
        
        [PaddingAttribute(PaddingType.Useless, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region vibration_frequency_definition_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 1)]
    public class vibration_frequency_definition_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float duration;
        
        [EditorMarkUpAttribute(displayName: "dirty whore")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public mapping_function_block dirty_whore;
        
        [PaddingAttribute(PaddingType.Useless, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region damage_effect_sound_effect_definition_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1)]
    public class damage_effect_sound_effect_definition_block
    {
        
        [EditorMarkUpAttribute(displayName: "effect name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id effect_name;
        
        [EditorMarkUpAttribute(displayName: "duration", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float duration;
        
        [EditorMarkUpAttribute(displayName: "effect scale function")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public mapping_function_block effect_scale_function1;
    }
    #endregion
}
