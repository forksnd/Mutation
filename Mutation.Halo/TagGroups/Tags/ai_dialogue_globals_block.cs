//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 44, tagFileSize: 60, version: 1, groupTag: "adlg", parentGroupTag: "", name: "ai_dialogue_globals", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class ai_dialogue_globals_block
    {
        
        [EditorMarkUpAttribute(displayName: "vocalizations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_0> vocalizations;
        
        [EditorMarkUpAttribute(displayName: "patterns")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_patterns_block> patterns;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "dialogue data")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<dialogue_data_block> dialogue_data;
        
        [EditorMarkUpAttribute(displayName: "involuntary data")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<involuntary_data_block> involuntary_data;
    }
    
    #region vocalization_definitions_block_0
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_0
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EditorMarkUpAttribute(displayName: "children")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_1> children;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_definitions_block_1
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_1
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EditorMarkUpAttribute(displayName: "children")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_2> children;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_definitions_block_2
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_2
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EditorMarkUpAttribute(displayName: "children")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_3> children;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_definitions_block_3
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_3
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EditorMarkUpAttribute(displayName: "children")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_4> children;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_definitions_block_4
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_4
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EditorMarkUpAttribute(displayName: "children")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<vocalization_definitions_block_5> children;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_definitions_block_5
    [TagBlockDefinitionAttribute(cacheFileSize: 96, tagFileSize: 96, alignment: 4, maxBlockCount: 500)]
    public class vocalization_definitions_block_5
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization;
        
        [EditorMarkUpAttribute(displayName: "parent vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_vocalization;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_index;
        
        [EditorMarkUpAttribute(displayName: "priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority priority;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "glance behavior", tooltipText: "how does the speaker of this vocalization direct his gaze?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_behavior;
        
        [EditorMarkUpAttribute(displayName: "glance recipient behavior", tooltipText: "how does someone who hears me behave?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_glance_behavior glance_recipient_behavior;
        
        [EditorMarkUpAttribute(displayName: "perception type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_perception_type perception_type;
        
        [EditorMarkUpAttribute(displayName: "max combat status")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_max_combat_status max_combat_status;
        
        [EditorMarkUpAttribute(displayName: "animation impulse")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_animation_impulse animation_impulse;
        
        [EditorMarkUpAttribute(displayName: "overlap priority")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_priority overlap_priority;
        
        [EditorMarkUpAttribute(displayName: "sound repetition delay", unitsSpecifier: "minutes", tooltipText: "Minimum delay time between playing the same permutation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sound_repetition_delay;
        
        [EditorMarkUpAttribute(displayName: "allowable queue delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float allowable_queue_delay;
        
        [EditorMarkUpAttribute(displayName: "pre voc. delay", unitsSpecifier: "seconds", tooltipText: "How long to wait to actually start the vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float pre_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "notification delay", unitsSpecifier: "seconds", tooltipText: "How long into the vocalization the AI should be notified")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float notification_delay;
        
        [EditorMarkUpAttribute(displayName: "post voc. delay", unitsSpecifier: "seconds", tooltipText: "How long speech is suppressed in the speaking unit after vocalizing")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float post_voc__delay;
        
        [EditorMarkUpAttribute(displayName: "repeat delay", unitsSpecifier: "seconds", tooltipText: "How long before the same vocalization can be repeated")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float repeat_delay;
        
        [EditorMarkUpAttribute(displayName: "weight", unitsSpecifier: "[0-1]", tooltipText: "Inherent weight of this vocalization")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float weight;
        
        [EditorMarkUpAttribute(displayName: "speaker freeze time", tooltipText: "speaker won\'t move for the given amount of time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float speaker_freeze_time;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "listener freeze time", tooltipText: "listener won\'t move for the given amount of time (from start of vocalization)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float listener_freeze_time;
        
        [EditorMarkUpAttribute(displayName: "speaker emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion speaker_emotion;
        
        [EditorMarkUpAttribute(displayName: "listener emotion")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_emotion listener_emotion;
        
        [EditorMarkUpAttribute(displayName: "player skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float player_skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EditorMarkUpAttribute(displayName: "Sample line")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id sample_line;
        
        [EditorMarkUpAttribute(displayName: "reponses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<response_block> reponses;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField0;
        
        public enum e_priority : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "recall")]
            recall = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "comment")]
            comment = 0x3,
            
            [EditorMarkUpAttribute(displayName: "idle_response")]
            idle_response = 0x4,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0x5,
            
            [EditorMarkUpAttribute(displayName: "combat")]
            combat = 0x6,
            
            [EditorMarkUpAttribute(displayName: "status")]
            status = 0x7,
            
            [EditorMarkUpAttribute(displayName: "respond")]
            respond = 0x8,
            
            [EditorMarkUpAttribute(displayName: "warn")]
            warn = 0x9,
            
            [EditorMarkUpAttribute(displayName: "act")]
            act = 0xa,
            
            [EditorMarkUpAttribute(displayName: "react")]
            react = 0xb,
            
            [EditorMarkUpAttribute(displayName: "involuntary")]
            involuntary = 0xc,
            
            [EditorMarkUpAttribute(displayName: "scream")]
            scream = 0xd,
            
            [EditorMarkUpAttribute(displayName: "scripted")]
            scripted = 0xe,
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0xf,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "immediate")]
            immediate = 0x1,
            
            [EditorMarkUpAttribute(displayName: "interrupt")]
            interrupt = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cancel low priority")]
            cancel_low_priority = 0x4,
        }
        
        public enum e_glance_behavior : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "glance subject short")]
            glance_subject_short = 0x1,
            
            [EditorMarkUpAttribute(displayName: "glance subject long")]
            glance_subject_long = 0x2,
            
            [EditorMarkUpAttribute(displayName: "glance cause short")]
            glance_cause_short = 0x3,
            
            [EditorMarkUpAttribute(displayName: "glance cause long")]
            glance_cause_long = 0x4,
            
            [EditorMarkUpAttribute(displayName: "glance friend short")]
            glance_friend_short = 0x5,
            
            [EditorMarkUpAttribute(displayName: "glance friend long")]
            glance_friend_long = 0x6,
        }
        
        public enum e_perception_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "speaker")]
            speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "listener")]
            listener = 0x2,
        }
        
        public enum e_max_combat_status : short
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x0,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x3,
            
            [EditorMarkUpAttribute(displayName: "uninspected")]
            uninspected = 0x4,
            
            [EditorMarkUpAttribute(displayName: "definite")]
            definite = 0x5,
            
            [EditorMarkUpAttribute(displayName: "certain")]
            certain = 0x6,
            
            [EditorMarkUpAttribute(displayName: "visible")]
            visible = 0x7,
            
            [EditorMarkUpAttribute(displayName: "clear_los")]
            clear_los = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dangerous")]
            dangerous = 0x9,
        }
        
        public enum e_animation_impulse : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "shakefist")]
            shakefist = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cheer")]
            cheer = 0x2,
            
            [EditorMarkUpAttribute(displayName: "surprise-front")]
            surprise_front = 0x3,
            
            [EditorMarkUpAttribute(displayName: "surprise-back")]
            surprise_back = 0x4,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x5,
            
            [EditorMarkUpAttribute(displayName: "brace")]
            brace = 0x6,
            
            [EditorMarkUpAttribute(displayName: "point")]
            point = 0x7,
            
            [EditorMarkUpAttribute(displayName: "hold")]
            hold = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wave")]
            wave = 0x9,
            
            [EditorMarkUpAttribute(displayName: "advance")]
            advance = 0xa,
            
            [EditorMarkUpAttribute(displayName: "fallback")]
            fallback = 0xb,
        }
        
        public enum e_speaker_emotion : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "amorous")]
            amorous = 0x2,
            
            [EditorMarkUpAttribute(displayName: "happy")]
            happy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "inquisitive")]
            inquisitive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "repulsed")]
            repulsed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "disappointed")]
            disappointed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "shocked")]
            shocked = 0x7,
            
            [EditorMarkUpAttribute(displayName: "scared")]
            scared = 0x8,
            
            [EditorMarkUpAttribute(displayName: "arrogant")]
            arrogant = 0x9,
            
            [EditorMarkUpAttribute(displayName: "annoyed")]
            annoyed = 0xa,
            
            [EditorMarkUpAttribute(displayName: "angry")]
            angry = 0xb,
            
            [EditorMarkUpAttribute(displayName: "pensive")]
            pensive = 0xc,
            
            [EditorMarkUpAttribute(displayName: "pain")]
            pain = 0xd,
        }
    }
    #endregion
    
    #region vocalization_patterns_block
    [TagBlockDefinitionAttribute(cacheFileSize: 64, tagFileSize: 64, alignment: 4, maxBlockCount: 1000)]
    public class vocalization_patterns_block
    {
        
        [EditorMarkUpAttribute(displayName: "dialogue type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_dialogue_type dialogue_type;
        
        [EditorMarkUpAttribute(displayName: "vocalization index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short vocalization_index;
        
        [EditorMarkUpAttribute(displayName: "vocalization name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vocalization_name;
        
        [EditorMarkUpAttribute(displayName: "speaker type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_type speaker_type;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "listener/target", tooltipText: "who/what am I speaking to/of?")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_speaker_type listener_target;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "hostility", tooltipText: "The relationship between the subject and the cause")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_hostility hostility;
        
        [EditorMarkUpAttribute(displayName: "damage type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_damage_type damage_type;
        
        [EditorMarkUpAttribute(displayName: "danger level", tooltipText: "Speaker must have danger level of at least this much")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_danger_level danger_level;
        
        [EditorMarkUpAttribute(displayName: "attitude")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_attitude attitude;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "subject actor type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_subject_actor_type subject_actor_type;
        
        [EditorMarkUpAttribute(displayName: "cause actor type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_subject_actor_type cause_actor_type;
        
        [EditorMarkUpAttribute(displayName: "cause type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_cause_type cause_type;
        
        [EditorMarkUpAttribute(displayName: "subject type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_cause_type subject_type;
        
        [EditorMarkUpAttribute(displayName: "cause ai type name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id cause_ai_type_name;
        
        [EditorMarkUpAttribute(displayName: "spatial relation", tooltipText: "with respect to the subject, the cause is ...")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_spatial_relation spatial_relation;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "subject ai type name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id subject_ai_type_name;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "Conditions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_conditions conditions;
        
        public enum e_dialogue_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "death")]
            death = 0x0,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x1,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused1 = 0x2,
            
            [EditorMarkUpAttribute(displayName: "damage")]
            damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "damage unused 1")]
            damage_unused_1 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "damage unused 2")]
            damage_unused_2 = 0x5,
            
            [EditorMarkUpAttribute(displayName: "sighted_new")]
            sighted_new = 0x6,
            
            [EditorMarkUpAttribute(displayName: "sighted_new major")]
            sighted_new_major = 0x7,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused2 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "sighted_old")]
            sighted_old = 0x9,
            
            [EditorMarkUpAttribute(displayName: "sighted_first")]
            sighted_first = 0xa,
            
            [EditorMarkUpAttribute(displayName: "sighted_special")]
            sighted_special = 0xb,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused3 = 0xc,
            
            [EditorMarkUpAttribute(displayName: "heard_new")]
            heard_new = 0xd,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused4 = 0xe,
            
            [EditorMarkUpAttribute(displayName: "heard_old")]
            heard_old = 0xf,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused5 = 0x10,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused6 = 0x11,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused7 = 0x12,
            
            [EditorMarkUpAttribute(displayName: "acknowledge_multiple")]
            acknowledge_multiple = 0x13,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused8 = 0x14,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused9 = 0x15,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused10 = 0x16,
            
            [EditorMarkUpAttribute(displayName: "found_unit")]
            found_unit = 0x17,
            
            [EditorMarkUpAttribute(displayName: "found_unit_presearch")]
            found_unit_presearch = 0x18,
            
            [EditorMarkUpAttribute(displayName: "found_unit_pursuit")]
            found_unit_pursuit = 0x19,
            
            [EditorMarkUpAttribute(displayName: "found_unit_self_preserving")]
            found_unit_self_preserving = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "found_unit_retreating")]
            found_unit_retreating = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "throwing_grenade")]
            throwing_grenade = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "noticed_grenade")]
            noticed_grenade = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "fighting")]
            fighting = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "charging")]
            charging = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "suppressing_fire")]
            suppressing_fire = 0x20,
            
            [EditorMarkUpAttribute(displayName: "grenade_uncover")]
            grenade_uncover = 0x21,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused11 = 0x22,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused12 = 0x23,
            
            [EditorMarkUpAttribute(displayName: "dive")]
            dive = 0x24,
            
            [EditorMarkUpAttribute(displayName: "evade")]
            evade = 0x25,
            
            [EditorMarkUpAttribute(displayName: "avoid")]
            avoid = 0x26,
            
            [EditorMarkUpAttribute(displayName: "surprised")]
            surprised = 0x27,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused13 = 0x28,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused14 = 0x29,
            
            [EditorMarkUpAttribute(displayName: "presearch")]
            presearch = 0x2a,
            
            [EditorMarkUpAttribute(displayName: "presearch_start")]
            presearch_start = 0x2b,
            
            [EditorMarkUpAttribute(displayName: "search")]
            search = 0x2c,
            
            [EditorMarkUpAttribute(displayName: "search_start")]
            search_start = 0x2d,
            
            [EditorMarkUpAttribute(displayName: "investigate_failed")]
            investigate_failed = 0x2e,
            
            [EditorMarkUpAttribute(displayName: "uncover_failed")]
            uncover_failed = 0x2f,
            
            [EditorMarkUpAttribute(displayName: "pursuit_failed")]
            pursuit_failed = 0x30,
            
            [EditorMarkUpAttribute(displayName: "investigate_start")]
            investigate_start = 0x31,
            
            [EditorMarkUpAttribute(displayName: "abandoned_search_space")]
            abandoned_search_space = 0x32,
            
            [EditorMarkUpAttribute(displayName: "abandoned_search_time")]
            abandoned_search_time = 0x33,
            
            [EditorMarkUpAttribute(displayName: "presearch_failed")]
            presearch_failed = 0x34,
            
            [EditorMarkUpAttribute(displayName: "abandoned_search_restricted")]
            abandoned_search_restricted = 0x35,
            
            [EditorMarkUpAttribute(displayName: "investigate_pursuit_start")]
            investigate_pursuit_start = 0x36,
            
            [EditorMarkUpAttribute(displayName: "postcombat_inspect_body")]
            postcombat_inspect_body = 0x37,
            
            [EditorMarkUpAttribute(displayName: "vehicle_slow_down")]
            vehicle_slow_down = 0x38,
            
            [EditorMarkUpAttribute(displayName: "vehicle_get_in")]
            vehicle_get_in = 0x39,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x3a,
            
            [EditorMarkUpAttribute(displayName: "taunt")]
            taunt = 0x3b,
            
            [EditorMarkUpAttribute(displayName: "taunt_reply")]
            taunt_reply = 0x3c,
            
            [EditorMarkUpAttribute(displayName: "retreat")]
            retreat = 0x3d,
            
            [EditorMarkUpAttribute(displayName: "retreat_from_scary_target")]
            retreat_from_scary_target = 0x3e,
            
            [EditorMarkUpAttribute(displayName: "retreat_from_dead_leader")]
            retreat_from_dead_leader = 0x3f,
            
            [EditorMarkUpAttribute(displayName: "retreat_from_proximity")]
            retreat_from_proximity = 0x40,
            
            [EditorMarkUpAttribute(displayName: "retreat_from_low_shield")]
            retreat_from_low_shield = 0x41,
            
            [EditorMarkUpAttribute(displayName: "flee")]
            flee = 0x42,
            
            [EditorMarkUpAttribute(displayName: "cowering")]
            cowering = 0x43,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused15 = 0x44,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused16 = 0x45,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused17 = 0x46,
            
            [EditorMarkUpAttribute(displayName: "cover")]
            cover = 0x47,
            
            [EditorMarkUpAttribute(displayName: "covered")]
            covered = 0x48,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused18 = 0x49,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused19 = 0x4a,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused20 = 0x4b,
            
            [EditorMarkUpAttribute(displayName: "pursuit_start")]
            pursuit_start = 0x4c,
            
            [EditorMarkUpAttribute(displayName: "pursuit_sync_start")]
            pursuit_sync_start = 0x4d,
            
            [EditorMarkUpAttribute(displayName: "pursuit_sync_join")]
            pursuit_sync_join = 0x4e,
            
            [EditorMarkUpAttribute(displayName: "pursuit_sync_quorum")]
            pursuit_sync_quorum = 0x4f,
            
            [EditorMarkUpAttribute(displayName: "melee")]
            melee = 0x50,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused21 = 0x51,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused22 = 0x52,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused23 = 0x53,
            
            [EditorMarkUpAttribute(displayName: "vehicle_falling")]
            vehicle_falling = 0x54,
            
            [EditorMarkUpAttribute(displayName: "vehicle_woohoo")]
            vehicle_woohoo = 0x55,
            
            [EditorMarkUpAttribute(displayName: "vehicle_scared")]
            vehicle_scared = 0x56,
            
            [EditorMarkUpAttribute(displayName: "vehicle_crazy")]
            vehicle_crazy = 0x57,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused24 = 0x58,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused25 = 0x59,
            
            [EditorMarkUpAttribute(displayName: "leap")]
            leap = 0x5a,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused26 = 0x5b,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused27 = 0x5c,
            
            [EditorMarkUpAttribute(displayName: "postcombat_win")]
            postcombat_win = 0x5d,
            
            [EditorMarkUpAttribute(displayName: "postcombat_lose")]
            postcombat_lose = 0x5e,
            
            [EditorMarkUpAttribute(displayName: "postcombat_neutral")]
            postcombat_neutral = 0x5f,
            
            [EditorMarkUpAttribute(displayName: "shoot_corpse")]
            shoot_corpse = 0x60,
            
            [EditorMarkUpAttribute(displayName: "postcombat start")]
            postcombat_start = 0x61,
            
            [EditorMarkUpAttribute(displayName: "inspect_body_start")]
            inspect_body_start = 0x62,
            
            [EditorMarkUpAttribute(displayName: "postcombat_status")]
            postcombat_status = 0x63,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused28 = 0x64,
            
            [EditorMarkUpAttribute(displayName: "vehicle_entry_start_driver")]
            vehicle_entry_start_driver = 0x65,
            
            [EditorMarkUpAttribute(displayName: "vehicle_enter")]
            vehicle_enter = 0x66,
            
            [EditorMarkUpAttribute(displayName: "vehicle_entry_start_gun")]
            vehicle_entry_start_gun = 0x67,
            
            [EditorMarkUpAttribute(displayName: "vehicle_entry_start_passenger")]
            vehicle_entry_start_passenger = 0x68,
            
            [EditorMarkUpAttribute(displayName: "vehicle_exit")]
            vehicle_exit = 0x69,
            
            [EditorMarkUpAttribute(displayName: "evict_driver")]
            evict_driver = 0x6a,
            
            [EditorMarkUpAttribute(displayName: "evict_gunner")]
            evict_gunner = 0x6b,
            
            [EditorMarkUpAttribute(displayName: "evict_passenger")]
            evict_passenger = 0x6c,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused29 = 0x6d,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused30 = 0x6e,
            
            [EditorMarkUpAttribute(displayName: "new_order_advance")]
            new_order_advance = 0x6f,
            
            [EditorMarkUpAttribute(displayName: "new_order_charge")]
            new_order_charge = 0x70,
            
            [EditorMarkUpAttribute(displayName: "new_order_fallback")]
            new_order_fallback = 0x71,
            
            [EditorMarkUpAttribute(displayName: "new_order_retreat")]
            new_order_retreat = 0x72,
            
            [EditorMarkUpAttribute(displayName: "new_order_moveon")]
            new_order_moveon = 0x73,
            
            [EditorMarkUpAttribute(displayName: "new_order_arrival")]
            new_order_arrival = 0x74,
            
            [EditorMarkUpAttribute(displayName: "new_order_entervcl")]
            new_order_entervcl = 0x75,
            
            [EditorMarkUpAttribute(displayName: "new_order_exitvcl")]
            new_order_exitvcl = 0x76,
            
            [EditorMarkUpAttribute(displayName: "new_order_fllplr")]
            new_order_fllplr = 0x77,
            
            [EditorMarkUpAttribute(displayName: "new_order_leaveplr")]
            new_order_leaveplr = 0x78,
            
            [EditorMarkUpAttribute(displayName: "new_order_support")]
            new_order_support = 0x79,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused31 = 0x7a,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused32 = 0x7b,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused33 = 0x7c,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused34 = 0x7d,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused35 = 0x7e,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused36 = 0x7f,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused37 = 0x80,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused38 = 0x81,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused39 = 0x82,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused40 = 0x83,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused41 = 0x84,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused42 = 0x85,
            
            [EditorMarkUpAttribute(displayName: "emerge")]
            emerge = 0x86,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused43 = 0x87,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused44 = 0x88,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused45 = 0x89,
            
            [EditorMarkUpAttribute(displayName: "curse")]
            curse = 0x8a,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused46 = 0x8b,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused47 = 0x8c,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused48 = 0x8d,
            
            [EditorMarkUpAttribute(displayName: "threaten")]
            threaten = 0x8e,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused49 = 0x8f,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused50 = 0x90,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused51 = 0x91,
            
            [EditorMarkUpAttribute(displayName: "cover_friend")]
            cover_friend = 0x92,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused52 = 0x93,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused53 = 0x94,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused54 = 0x95,
            
            [EditorMarkUpAttribute(displayName: "strike")]
            strike = 0x96,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused55 = 0x97,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused56 = 0x98,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused57 = 0x99,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused58 = 0x9a,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused59 = 0x9b,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused60 = 0x9c,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused61 = 0x9d,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused62 = 0x9e,
            
            [EditorMarkUpAttribute(displayName: "gloat")]
            gloat = 0x9f,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused63 = 0xa0,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused64 = 0xa1,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused65 = 0xa2,
            
            [EditorMarkUpAttribute(displayName: "greet")]
            greet = 0xa3,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused66 = 0xa4,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused67 = 0xa5,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused68 = 0xa6,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused69 = 0xa7,
            
            [EditorMarkUpAttribute(displayName: "player_look")]
            player_look = 0xa8,
            
            [EditorMarkUpAttribute(displayName: "player_look_longtime")]
            player_look_longtime = 0xa9,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused70 = 0xaa,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused71 = 0xab,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused72 = 0xac,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused73 = 0xad,
            
            [EditorMarkUpAttribute(displayName: "panic_grenade_attached")]
            panic_grenade_attached = 0xae,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused74 = 0xaf,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused75 = 0xb0,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused76 = 0xb1,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused77 = 0xb2,
            
            [EditorMarkUpAttribute(displayName: "help response")]
            help_response = 0xb3,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused78 = 0xb4,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused79 = 0xb5,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused80 = 0xb6,
            
            [EditorMarkUpAttribute(displayName: "remind")]
            remind = 0xb7,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused81 = 0xb8,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused82 = 0xb9,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused83 = 0xba,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused84 = 0xbb,
            
            [EditorMarkUpAttribute(displayName: "weapon_trade_better")]
            weapon_trade_better = 0xbc,
            
            [EditorMarkUpAttribute(displayName: "weapon_trade_worse")]
            weapon_trade_worse = 0xbd,
            
            [EditorMarkUpAttribute(displayName: "weapon_reade_equal")]
            weapon_reade_equal = 0xbe,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused85 = 0xbf,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused86 = 0xc0,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused87 = 0xc1,
            
            [EditorMarkUpAttribute(displayName: "betray")]
            betray = 0xc2,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused88 = 0xc3,
            
            [EditorMarkUpAttribute(displayName: "forgive")]
            forgive = 0xc4,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused89 = 0xc5,
            
            [EditorMarkUpAttribute(displayName: "reanimate")]
            reanimate = 0xc6,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused90 = 0xc7,
        }
        
        public enum e_speaker_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "subject")]
            subject = 0x0,
            
            [EditorMarkUpAttribute(displayName: "cause")]
            cause = 0x1,
            
            [EditorMarkUpAttribute(displayName: "friend")]
            friend = 0x2,
            
            [EditorMarkUpAttribute(displayName: "target")]
            target = 0x3,
            
            [EditorMarkUpAttribute(displayName: "enemy")]
            enemy = 0x4,
            
            [EditorMarkUpAttribute(displayName: "vehicle")]
            vehicle = 0x5,
            
            [EditorMarkUpAttribute(displayName: "joint")]
            joint = 0x6,
            
            [EditorMarkUpAttribute(displayName: "squad")]
            squad = 0x7,
            
            [EditorMarkUpAttribute(displayName: "leader")]
            leader = 0x8,
            
            [EditorMarkUpAttribute(displayName: "joint_leader")]
            joint_leader = 0x9,
            
            [EditorMarkUpAttribute(displayName: "clump")]
            clump = 0xa,
            
            [EditorMarkUpAttribute(displayName: "peer")]
            peer = 0xb,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "subject visible")]
            subject_visible = 0x1,
            
            [EditorMarkUpAttribute(displayName: "cause visible")]
            cause_visible = 0x2,
            
            [EditorMarkUpAttribute(displayName: "friends present")]
            friends_present = 0x4,
            
            [EditorMarkUpAttribute(displayName: "subject is speaker\'s target")]
            subject_is_speaker_s_target = 0x8,
            
            [EditorMarkUpAttribute(displayName: "cause is speaker\'s target")]
            cause_is_speaker_s_target = 0x10,
            
            [EditorMarkUpAttribute(displayName: "cause is player or speaker is player ally")]
            cause_is_player_or_speaker_is_player_ally = 0x20,
            
            [EditorMarkUpAttribute(displayName: "speaker is searching")]
            speaker_is_searching = 0x40,
            
            [EditorMarkUpAttribute(displayName: "speaker is following player")]
            speaker_is_following_player = 0x80,
            
            [EditorMarkUpAttribute(displayName: "cause is primary player ally")]
            cause_is_primary_player_ally = 0x100,
        }
        
        public enum e_hostility : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "self")]
            self = 0x1,
            
            [EditorMarkUpAttribute(displayName: "neutral")]
            neutral = 0x2,
            
            [EditorMarkUpAttribute(displayName: "friend")]
            friend = 0x3,
            
            [EditorMarkUpAttribute(displayName: "enemy")]
            enemy = 0x4,
            
            [EditorMarkUpAttribute(displayName: "traitor")]
            traitor = 0x5,
        }
        
        public enum e_damage_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "falling")]
            falling = 0x1,
            
            [EditorMarkUpAttribute(displayName: "bullet")]
            bullet = 0x2,
            
            [EditorMarkUpAttribute(displayName: "grenade")]
            grenade = 0x3,
            
            [EditorMarkUpAttribute(displayName: "explosive")]
            explosive = 0x4,
            
            [EditorMarkUpAttribute(displayName: "sniper")]
            sniper = 0x5,
            
            [EditorMarkUpAttribute(displayName: "melee")]
            melee = 0x6,
            
            [EditorMarkUpAttribute(displayName: "flame")]
            flame = 0x7,
            
            [EditorMarkUpAttribute(displayName: "mounted weapon")]
            mounted_weapon = 0x8,
            
            [EditorMarkUpAttribute(displayName: "vehicle")]
            vehicle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "plasma")]
            plasma = 0xa,
            
            [EditorMarkUpAttribute(displayName: "needle")]
            needle = 0xb,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0xc,
        }
        
        public enum e_danger_level : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "broadly facing")]
            broadly_facing = 0x1,
            
            [EditorMarkUpAttribute(displayName: "shooting near")]
            shooting_near = 0x2,
            
            [EditorMarkUpAttribute(displayName: "shooting at")]
            shooting_at = 0x3,
            
            [EditorMarkUpAttribute(displayName: "extremely close")]
            extremely_close = 0x4,
            
            [EditorMarkUpAttribute(displayName: "shield damage")]
            shield_damage = 0x5,
            
            [EditorMarkUpAttribute(displayName: "shield extended damage")]
            shield_extended_damage = 0x6,
            
            [EditorMarkUpAttribute(displayName: "body damage")]
            body_damage = 0x7,
            
            [EditorMarkUpAttribute(displayName: "body extended damage")]
            body_extended_damage = 0x8,
        }
        
        public enum e_attitude : short
        {
            
            [EditorMarkUpAttribute(displayName: "Normal")]
            normal = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Timid")]
            timid = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Aggressive")]
            aggressive = 0x2,
        }
        
        public enum e_subject_actor_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "elite")]
            elite = 0x1,
            
            [EditorMarkUpAttribute(displayName: "jackal")]
            jackal = 0x2,
            
            [EditorMarkUpAttribute(displayName: "grunt")]
            grunt = 0x3,
            
            [EditorMarkUpAttribute(displayName: "hunter")]
            hunter = 0x4,
            
            [EditorMarkUpAttribute(displayName: "engineer")]
            engineer = 0x5,
            
            [EditorMarkUpAttribute(displayName: "assassin")]
            assassin = 0x6,
            
            [EditorMarkUpAttribute(displayName: "player")]
            player = 0x7,
            
            [EditorMarkUpAttribute(displayName: "marine")]
            marine = 0x8,
            
            [EditorMarkUpAttribute(displayName: "crew")]
            crew = 0x9,
            
            [EditorMarkUpAttribute(displayName: "combat form")]
            combat_form = 0xa,
            
            [EditorMarkUpAttribute(displayName: "infection form")]
            infection_form = 0xb,
            
            [EditorMarkUpAttribute(displayName: "carrier form")]
            carrier_form = 0xc,
            
            [EditorMarkUpAttribute(displayName: "monitor")]
            monitor = 0xd,
            
            [EditorMarkUpAttribute(displayName: "sentinel")]
            sentinel = 0xe,
            
            [EditorMarkUpAttribute(displayName: "none")]
            none1 = 0xf,
            
            [EditorMarkUpAttribute(displayName: "mounted weapon")]
            mounted_weapon = 0x10,
            
            [EditorMarkUpAttribute(displayName: "brute")]
            brute = 0x11,
            
            [EditorMarkUpAttribute(displayName: "prophet")]
            prophet = 0x12,
            
            [EditorMarkUpAttribute(displayName: "bugger")]
            bugger = 0x13,
            
            [EditorMarkUpAttribute(displayName: "juggernaut")]
            juggernaut = 0x14,
        }
        
        public enum e_cause_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "player")]
            player = 0x1,
            
            [EditorMarkUpAttribute(displayName: "actor")]
            actor = 0x2,
            
            [EditorMarkUpAttribute(displayName: "biped")]
            biped = 0x3,
            
            [EditorMarkUpAttribute(displayName: "body")]
            body = 0x4,
            
            [EditorMarkUpAttribute(displayName: "vehicle")]
            vehicle = 0x5,
            
            [EditorMarkUpAttribute(displayName: "projectile")]
            projectile = 0x6,
            
            [EditorMarkUpAttribute(displayName: "actor or player")]
            actor_or_player = 0x7,
            
            [EditorMarkUpAttribute(displayName: "turret")]
            turret = 0x8,
            
            [EditorMarkUpAttribute(displayName: "unit in vehicle")]
            unit_in_vehicle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "unit in turret")]
            unit_in_turret = 0xa,
            
            [EditorMarkUpAttribute(displayName: "driver")]
            driver = 0xb,
            
            [EditorMarkUpAttribute(displayName: "gunner")]
            gunner = 0xc,
            
            [EditorMarkUpAttribute(displayName: "passenger")]
            passenger = 0xd,
            
            [EditorMarkUpAttribute(displayName: "postcombat")]
            postcombat = 0xe,
            
            [EditorMarkUpAttribute(displayName: "postcombat_won")]
            postcombat_won = 0xf,
            
            [EditorMarkUpAttribute(displayName: "postcombat_lost")]
            postcombat_lost = 0x10,
            
            [EditorMarkUpAttribute(displayName: "player masterchief")]
            player_masterchief = 0x11,
            
            [EditorMarkUpAttribute(displayName: "player dervish")]
            player_dervish = 0x12,
            
            [EditorMarkUpAttribute(displayName: "heretic")]
            heretic = 0x13,
            
            [EditorMarkUpAttribute(displayName: "majorly scary")]
            majorly_scary = 0x14,
            
            [EditorMarkUpAttribute(displayName: "last man in vehicle")]
            last_man_in_vehicle = 0x15,
            
            [EditorMarkUpAttribute(displayName: "male")]
            male = 0x16,
            
            [EditorMarkUpAttribute(displayName: "female")]
            female = 0x17,
            
            [EditorMarkUpAttribute(displayName: "grenade")]
            grenade = 0x18,
        }
        
        public enum e_spatial_relation : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "very near (<1wu")]
            very_near___1wu = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "near (<2.5wus")]
            near___2_5wus = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "medium range (<5wus")]
            medium_range___5wus = 0x3,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "far (<10wus")]
            far___10wus = 0x4,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "very far (>10wus")]
            very_far___10wus = 0x5,
            
            [EditorMarkUpAttribute(displayName: "in front of")]
            in_front_of = 0x6,
            
            [EditorMarkUpAttribute(displayName: "behind")]
            behind = 0x7,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "above (delta>1 wu")]
            above__delta_1_wu = 0x8,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "below (delta>1 wu")]
            below__delta_1_wu = 0x9,
        }
        
        [FlagsAttribute()]
        public enum b_conditions : uint
        {
            
            [EditorMarkUpAttribute(displayName: "asleep")]
            asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "idle")]
            idle = 0x2,
            
            [EditorMarkUpAttribute(displayName: "alert")]
            alert = 0x4,
            
            [EditorMarkUpAttribute(displayName: "active")]
            active = 0x8,
            
            [EditorMarkUpAttribute(displayName: "uninspected orphan")]
            uninspected_orphan = 0x10,
            
            [EditorMarkUpAttribute(displayName: "definite orphan")]
            definite_orphan = 0x20,
            
            [EditorMarkUpAttribute(displayName: "certain orphan")]
            certain_orphan = 0x40,
            
            [EditorMarkUpAttribute(displayName: "visible enemy")]
            visible_enemy = 0x80,
            
            [EditorMarkUpAttribute(displayName: "clear los enemy")]
            clear_los_enemy = 0x100,
            
            [EditorMarkUpAttribute(displayName: "dangerous enemy")]
            dangerous_enemy = 0x200,
            
            [EditorMarkUpAttribute(displayName: "no vehicle")]
            no_vehicle = 0x400,
            
            [EditorMarkUpAttribute(displayName: "vehicle driver")]
            vehicle_driver = 0x800,
            
            [EditorMarkUpAttribute(displayName: "vehicle passenger")]
            vehicle_passenger = 0x1000,
        }
    }
    #endregion
    
    #region dialogue_data_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 200)]
    public class dialogue_data_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.Unknown1, displayName: "start index (postprocess")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short start_index__postprocess;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.Unknown1, displayName: "length (postprocess")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short length__postprocess;
    }
    #endregion
    
    #region involuntary_data_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 100)]
    public class involuntary_data_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "involuntary vocalization index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short involuntary_vocalization_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
}
