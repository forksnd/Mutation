//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 112, tagFileSize: 116, version: 1, groupTag: "tdtl", parentGroupTag: "", name: "liquid", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class liquid_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "LIQUID");
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "attachment marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id attachment_marker_name;
        
        [PaddingAttribute(PaddingType.Padding, 56)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "falloff distance from camera", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float falloff_distance_from_camera;
        
        [EditorMarkUpAttribute(displayName: "cutoff distance from camera", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float cutoff_distance_from_camera;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "arcs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<liquid_arc_block> arcs;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "standard")]
            standard = 0x0,
            
            [EditorMarkUpAttribute(displayName: "weapon to projectile")]
            weapon_to_projectile = 0x1,
            
            [EditorMarkUpAttribute(displayName: "projectile from weapon")]
            projectile_from_weapon = 0x2,
        }
    }
    
    #region liquid_arc_block
    [TagBlockDefinitionAttribute(cacheFileSize: 236, tagFileSize: 236, alignment: 4, maxBlockCount: 3)]
    public class liquid_arc_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "LIQUID ARC", explanation: "Note that if the type is not STANDARD, then the \'collide_with_stuff\' and material" +
    " effects will not have any effect. In addition, the \'natural_length\' will not ha" +
    "ve an effect except as a means to compute the collision fraction.");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "sprite count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_sprite_count sprite_count;
        
        [EditorMarkUpAttribute(displayName: "natural length", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float natural_length;
        
        [EditorMarkUpAttribute(displayName: "instances")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short instances;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "instance spread angle", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float instance_spread_angle;
        
        [EditorMarkUpAttribute(displayName: "instance rotation period", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float instance_rotation_period;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "material effects")]
        [TagReferenceAttribute("foot")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference material_effects;
        
        [EditorMarkUpAttribute(displayName: "bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference bitmap;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "HORIZONTAL RANGE", explanation: "In world units, how far the noise extends horizontally. By default the horizontal" +
    " range is along the world XY plane.");
        
        [EditorMarkUpAttribute(displayName: "horizontal range")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block horizontal_range;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "VERTICAL RANGE", explanation: "In world units, how far the noise extends vertically. By default the vertical ran" +
    "ge is along the world Z axis (up).");
        
        [EditorMarkUpAttribute(displayName: "vertical range")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block vertical_range;
        
        [EditorMarkUpAttribute(displayName: "vertical negative scale", unitsSpecifier: "[0,1]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float vertical_negative_scale;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "ROUGHNESS", explanation: @"Roughness controls how the different 'octaves' of noise get scaled. Usually it is in the range [0,1] but it can be slightly higher or lower and still make sense (zero is actually a pretty decent value). The mathematical equation used is 2^(-k*(1-r)) where 'k' is the octave index starting at 0 and 'r' is the roughness value.");
        
        [EditorMarkUpAttribute(displayName: "roughness")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block roughness;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "NOISE FREQUENCIES", explanation: "4 sprites is 3 octaves\n8 sprites is 4 octaves\n16 sprites is 5 octaves\n32 sprites " +
    "is 6 octaves\n64 sprites is 7 octaves\n128 sprites is 8 octaves\n256 sprites is 9 o" +
    "ctaves, etc.");
        
        [EditorMarkUpAttribute(displayName: "octave 1 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_1_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 2 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_2_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 3 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_3_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 4 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_4_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 5 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_5_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 6 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_6_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 7 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_7_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 8 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_8_frequency;
        
        [EditorMarkUpAttribute(displayName: "octave 9 frequency", unitsSpecifier: "cycles/second")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float octave_9_frequency;
        
        [PaddingAttribute(PaddingType.Padding, 28)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "octave flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_octave_flags octave_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "cores")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<liquid_core_block> cores;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField5 = new Explanation(name: "RANGE-COLLISION SCALE", explanation: "Scales range (amplitude) by collision fraction. The input to the function will be" +
    " 1 if there is no collision, and 0 if the collision occurs at the origin.");
        
        [EditorMarkUpAttribute(displayName: "range-scale")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block range_scale;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField6 = new Explanation(name: "BRIGHTNESS-COLLISION SCALE", explanation: "Scales brightness by collision fraction.");
        
        [EditorMarkUpAttribute(displayName: "brightness-scale")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block brightness_scale;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "basis marker-relative")]
            basis_marker_relative = 0x1,
            
            [EditorMarkUpAttribute(displayName: "spread by external input")]
            spread_by_external_input = 0x2,
            
            [EditorMarkUpAttribute(displayName: "collide with stuff")]
            collide_with_stuff = 0x4,
            
            [EditorMarkUpAttribute(displayName: "no perspective midpoints")]
            no_perspective_midpoints = 0x8,
        }
        
        public enum e_sprite_count : short
        {
            
            [EditorMarkUpAttribute(displayName: "4 sprites")]
            _4_sprites = 0x0,
            
            [EditorMarkUpAttribute(displayName: "8 sprites")]
            _8_sprites = 0x1,
            
            [EditorMarkUpAttribute(displayName: "16 sprites")]
            _16_sprites = 0x2,
            
            [EditorMarkUpAttribute(displayName: "32 sprites")]
            _32_sprites = 0x3,
            
            [EditorMarkUpAttribute(displayName: "64 sprites")]
            _64_sprites = 0x4,
            
            [EditorMarkUpAttribute(displayName: "128 sprites")]
            _128_sprites = 0x5,
            
            [EditorMarkUpAttribute(displayName: "256 sprites")]
            _256_sprites = 0x6,
        }
        
        [FlagsAttribute()]
        public enum b_octave_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "octave 1")]
            octave_1 = 0x1,
            
            [EditorMarkUpAttribute(displayName: "octave 2")]
            octave_2 = 0x2,
            
            [EditorMarkUpAttribute(displayName: "octave 3")]
            octave_3 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "octave 4")]
            octave_4 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "octave 5")]
            octave_5 = 0x10,
            
            [EditorMarkUpAttribute(displayName: "octave 6")]
            octave_6 = 0x20,
            
            [EditorMarkUpAttribute(displayName: "octave 7")]
            octave_7 = 0x40,
            
            [EditorMarkUpAttribute(displayName: "octave 8")]
            octave_8 = 0x80,
            
            [EditorMarkUpAttribute(displayName: "octave 9")]
            octave_9 = 0x100,
        }
    }
    #endregion
    
    #region liquid_core_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 4)]
    public class liquid_core_block
    {
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "bitmap index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short bitmap_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "THICKNESS", explanation: "In world units.");
        
        [EditorMarkUpAttribute(displayName: "thickness")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block thickness;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "COLOR");
        
        [EditorMarkUpAttribute(displayName: "color")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public color_function_struct_block color;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "BRIGHTNESS/TIME", explanation: "Periodic function based on time.");
        
        [EditorMarkUpAttribute(displayName: "brightness-time")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block brightness_time;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "BRIGHTNESS/FACING", explanation: "Brightness when facing perpendicular versus parallel.");
        
        [EditorMarkUpAttribute(displayName: "brightness-facing")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block brightness_facing;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "ALONG-AXIS SCALE", explanation: "Scale along-axis. Default should be 1.");
        
        [EditorMarkUpAttribute(displayName: "along-axis scale")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scalar_function_struct_block along_axis_scale;
    }
    #endregion
}
