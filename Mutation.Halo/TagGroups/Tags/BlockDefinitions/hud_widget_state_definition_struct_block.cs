//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    #region hud_widget_state_definition_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 1)]
    public class hud_widget_state_definition_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "widget state", explanation: "this section is split up into YES and NO flags.\na widget will draw if any of it\'s" +
    " YES flags are true,\nbut it will NOT draw if any of it\'s NO flags are true.\n");
        
        [EditorMarkUpAttribute(displayName: "[Y] unit flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__unit_flags _y__unit_flags;
        
        [EditorMarkUpAttribute(displayName: "[Y] extra flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__extra_flags _y__extra_flags;
        
        [EditorMarkUpAttribute(displayName: "[Y] weapon flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__weapon_flags _y__weapon_flags;
        
        [EditorMarkUpAttribute(displayName: "[Y] game engine state flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__game_engine_state_flags _y__game_engine_state_flags;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "[N] unit flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__unit_flags _n__unit_flags;
        
        [EditorMarkUpAttribute(displayName: "[N] extra flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__extra_flags _n__extra_flags;
        
        [EditorMarkUpAttribute(displayName: "[N] weapon flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__weapon_flags _n__weapon_flags;
        
        [EditorMarkUpAttribute(displayName: "[N] game engine state flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b__y__game_engine_state_flags _n__game_engine_state_flags;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "age cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte age_cutoff;
        
        [EditorMarkUpAttribute(displayName: "clip cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte clip_cutoff;
        
        [EditorMarkUpAttribute(displayName: "total cutoff")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte total_cutoff;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [FlagsAttribute()]
        public enum b__y__unit_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x1,
            
            [EditorMarkUpAttribute(displayName: "grenade type is NONE")]
            grenade_type_is_none = 0x2,
            
            [EditorMarkUpAttribute(displayName: "grenade type is frag")]
            grenade_type_is_frag = 0x4,
            
            [EditorMarkUpAttribute(displayName: "grenade type is plasma")]
            grenade_type_is_plasma = 0x8,
            
            [EditorMarkUpAttribute(displayName: "unit is single wielding")]
            unit_is_single_wielding = 0x10,
            
            [EditorMarkUpAttribute(displayName: "unit is dual wielding")]
            unit_is_dual_wielding = 0x20,
            
            [EditorMarkUpAttribute(displayName: "unit is unzoomed")]
            unit_is_unzoomed = 0x40,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "unit is zoomed (level 1")]
            unit_is_zoomed__level_1 = 0x80,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "unit is zoomed (level 2")]
            unit_is_zoomed__level_2 = 0x100,
            
            [EditorMarkUpAttribute(displayName: "grenades disabled")]
            grenades_disabled = 0x200,
            
            [EditorMarkUpAttribute(displayName: "binoculars enabled")]
            binoculars_enabled = 0x400,
            
            [EditorMarkUpAttribute(displayName: "motion sensor enabled")]
            motion_sensor_enabled = 0x800,
            
            [EditorMarkUpAttribute(displayName: "shield enabled")]
            shield_enabled = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "dervish")]
            dervish = 0x2000,
        }
        
        [FlagsAttribute()]
        public enum b__y__extra_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "autoaim-friendly")]
            autoaim_friendly = 0x1,
            
            [EditorMarkUpAttribute(displayName: "autoaim-plasma")]
            autoaim_plasma = 0x2,
            
            [EditorMarkUpAttribute(displayName: "autoaim-headshot")]
            autoaim_headshot = 0x4,
            
            [EditorMarkUpAttribute(displayName: "autoaim-vulnerable")]
            autoaim_vulnerable = 0x8,
            
            [EditorMarkUpAttribute(displayName: "autoaim-invincible")]
            autoaim_invincible = 0x10,
        }
        
        [FlagsAttribute()]
        public enum b__y__weapon_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "primary weapon")]
            primary_weapon = 0x1,
            
            [EditorMarkUpAttribute(displayName: "secondary weapon")]
            secondary_weapon = 0x2,
            
            [EditorMarkUpAttribute(displayName: "backpack weapon")]
            backpack_weapon = 0x4,
            
            [EditorMarkUpAttribute(displayName: "age below cutoff")]
            age_below_cutoff = 0x8,
            
            [EditorMarkUpAttribute(displayName: "clip below cutoff")]
            clip_below_cutoff = 0x10,
            
            [EditorMarkUpAttribute(displayName: "total below cutoff")]
            total_below_cutoff = 0x20,
            
            [EditorMarkUpAttribute(displayName: "overheated")]
            overheated = 0x40,
            
            [EditorMarkUpAttribute(displayName: "out of ammo")]
            out_of_ammo = 0x80,
            
            [EditorMarkUpAttribute(displayName: "lock target available")]
            lock_target_available = 0x100,
            
            [EditorMarkUpAttribute(displayName: "locking")]
            locking = 0x200,
            
            [EditorMarkUpAttribute(displayName: "locked")]
            locked = 0x400,
        }
        
        [FlagsAttribute()]
        public enum b__y__game_engine_state_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "campaign solo")]
            campaign_solo = 0x1,
            
            [EditorMarkUpAttribute(displayName: "campaign coop")]
            campaign_coop = 0x2,
            
            [EditorMarkUpAttribute(displayName: "free-for-all")]
            free_for_all = 0x4,
            
            [EditorMarkUpAttribute(displayName: "team game")]
            team_game = 0x8,
            
            [EditorMarkUpAttribute(displayName: "user leading")]
            user_leading = 0x10,
            
            [EditorMarkUpAttribute(displayName: "user not leading")]
            user_not_leading = 0x20,
            
            [EditorMarkUpAttribute(displayName: "timed game")]
            timed_game = 0x40,
            
            [EditorMarkUpAttribute(displayName: "untimed game")]
            untimed_game = 0x80,
            
            [EditorMarkUpAttribute(displayName: "other score valid")]
            other_score_valid = 0x100,
            
            [EditorMarkUpAttribute(displayName: "other score invalid")]
            other_score_invalid = 0x200,
            
            [EditorMarkUpAttribute(displayName: "player is arming bomb")]
            player_is_arming_bomb = 0x400,
            
            [EditorMarkUpAttribute(displayName: "player talking")]
            player_talking = 0x800,
        }
    }
    #endregion
}
