//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    #region ai_conversation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 104, tagFileSize: 116, alignment: 4, maxBlockCount: 128)]
    public class ai_conversation_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 name;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "trigger distance", unitsSpecifier: "world units", tooltipText: "distance the player must enter before the conversation can trigger")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float trigger_distance;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "run-to-player dist", unitsSpecifier: "world units", tooltipText: "if the \'involves player\' flag is set, when triggered the conversation\'s participa" +
    "nt(s) will run to within this distance of the player")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float run_to_player_dist;
        
        [PaddingAttribute(PaddingType.Padding, 36)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "participants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<ai_conversation_participant_block> participants;
        
        [EditorMarkUpAttribute(displayName: "lines")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<ai_conversation_line_block> lines;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField0;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "stop if death", tooltipText: "this conversation will be aborted if any participant dies")]
            stop_if_death = 0x1,
            
            [EditorMarkUpAttribute(displayName: "stop if damaged", tooltipText: "an actor will abort this conversation if they are damaged")]
            stop_if_damaged = 0x2,
            
            [EditorMarkUpAttribute(displayName: "stop if visible enemy", tooltipText: "an actor will abort this conversation if they see an enemy")]
            stop_if_visible_enemy = 0x4,
            
            [EditorMarkUpAttribute(displayName: "stop if alerted to enemy", tooltipText: "an actor will abort this conversation if they suspect an enemy")]
            stop_if_alerted_to_enemy = 0x8,
            
            [EditorMarkUpAttribute(displayName: "player must be visible", tooltipText: "this conversation cannot take place unless the participants can _see_ a nearby pl" +
    "ayer")]
            player_must_be_visible = 0x10,
            
            [EditorMarkUpAttribute(displayName: "stop other actions", tooltipText: "participants stop doing whatever they were doing in order to perform this convers" +
    "ation")]
            stop_other_actions = 0x20,
            
            [EditorMarkUpAttribute(displayName: "keep trying to play", tooltipText: "if this conversation fails initially, it will keep testing to see when it can pla" +
    "y")]
            keep_trying_to_play = 0x40,
            
            [EditorMarkUpAttribute(displayName: "player must be looking", tooltipText: "this conversation will not start until the player is looking at one of the partic" +
    "ipants")]
            player_must_be_looking = 0x80,
        }
    }
    #endregion
    
    #region ai_conversation_participant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 84, tagFileSize: 84, alignment: 4, maxBlockCount: 8)]
    public class ai_conversation_participant_block
    {
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "use this object", tooltipText: "if a unit with this name exists, we try to pick them to start the conversation")]
        [BlockIndexAttribute(blockName: "scenario_object_names_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short use_this_object;
        
        [EditorMarkUpAttribute(displayName: "set new name", tooltipText: "once we pick a unit, we name it this")]
        [BlockIndexAttribute(blockName: "scenario_object_names_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short set_new_name;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "encounter name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 encounter_name;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
    }
    #endregion
    
    #region ai_conversation_line_block
    [TagBlockDefinitionAttribute(cacheFileSize: 76, tagFileSize: 76, alignment: 4, maxBlockCount: 32)]
    public class ai_conversation_line_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "participant")]
        [BlockIndexAttribute(blockName: "ai_conversation_participant_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short participant;
        
        [EditorMarkUpAttribute(displayName: "addressee")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_addressee addressee;
        
        [EditorMarkUpAttribute(displayName: "addressee participant", tooltipText: "this field is only used if the addressee type is \'participant\'")]
        [BlockIndexAttribute(blockName: "ai_conversation_participant_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short addressee_participant;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "line delay time")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float line_delay_time;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "variant 1")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_1;
        
        [EditorMarkUpAttribute(displayName: "variant 2")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_2;
        
        [EditorMarkUpAttribute(displayName: "variant 3")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_3;
        
        [EditorMarkUpAttribute(displayName: "variant 4")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_4;
        
        [EditorMarkUpAttribute(displayName: "variant 5")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_5;
        
        [EditorMarkUpAttribute(displayName: "variant 6")]
        [TagReferenceAttribute("snd!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference variant_6;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "addressee look at speaker")]
            addressee_look_at_speaker = 0x1,
            
            [EditorMarkUpAttribute(displayName: "everyone look at speaker")]
            everyone_look_at_speaker = 0x2,
            
            [EditorMarkUpAttribute(displayName: "everyone look at addressee")]
            everyone_look_at_addressee = 0x4,
            
            [EditorMarkUpAttribute(displayName: "wait after until told to advance")]
            wait_after_until_told_to_advance = 0x8,
            
            [EditorMarkUpAttribute(displayName: "wait until speaker nearby")]
            wait_until_speaker_nearby = 0x10,
            
            [EditorMarkUpAttribute(displayName: "wait until everyone nearby")]
            wait_until_everyone_nearby = 0x20,
        }
        
        public enum e_addressee : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "player")]
            player = 0x1,
            
            [EditorMarkUpAttribute(displayName: "participant")]
            participant = 0x2,
        }
    }
    #endregion
}
