//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    #region triggers_block
    [TagBlockDefinitionAttribute(cacheFileSize: 48, tagFileSize: 52, alignment: 4, maxBlockCount: 256)]
    public class triggers_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 name;
        
        [EditorMarkUpAttribute(displayName: "trigger flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_trigger_flags trigger_flags;
        
        [EditorMarkUpAttribute(displayName: "combination rule")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_combination_rule combination_rule;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "conditions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<order_completion_condition> conditions;
        
        [FlagsAttribute()]
        public enum b_trigger_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "Latch ON when triggered")]
            latch_on_when_triggered = 0x1,
        }
        
        public enum e_combination_rule : short
        {
            
            [EditorMarkUpAttribute(displayName: "OR")]
            or = 0x0,
            
            [EditorMarkUpAttribute(displayName: "AND")]
            and = 0x1,
        }
    }
    #endregion
    
    #region order_completion_condition
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 5)]
    public class order_completion_condition
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "rule type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_rule_type rule_type;
        
        [EditorMarkUpAttribute(displayName: "squad")]
        [BlockIndexAttribute(blockName: "squads_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short squad;
        
        [EditorMarkUpAttribute(displayName: "squad group")]
        [BlockIndexAttribute(blockName: "squad_groups_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short squad_group;
        
        [EditorMarkUpAttribute(displayName: "a")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short a;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "x")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float x;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "trigger volume")]
        [BlockIndexAttribute(blockName: "scenario_trigger_volume_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short trigger_volume;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "Exit condition script")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 exit_condition_script;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short _noNameField0;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [PaddingAttribute(PaddingType.Useless, 36)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        public enum e_rule_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "A or greater alive")]
            a_or_greater_alive = 0x0,
            
            [EditorMarkUpAttribute(displayName: "A or fewer alive")]
            a_or_fewer_alive = 0x1,
            
            [EditorMarkUpAttribute(displayName: "X or greater strength")]
            x_or_greater_strength = 0x2,
            
            [EditorMarkUpAttribute(displayName: "X or less strength")]
            x_or_less_strength = 0x3,
            
            [EditorMarkUpAttribute(displayName: "If enemy sighted")]
            if_enemy_sighted = 0x4,
            
            [EditorMarkUpAttribute(displayName: "After A ticks")]
            after_a_ticks = 0x5,
            
            [EditorMarkUpAttribute(displayName: "If alerted by squad A")]
            if_alerted_by_squad_a = 0x6,
            
            [EditorMarkUpAttribute(displayName: "Script ref TRUE")]
            script_ref_true = 0x7,
            
            [EditorMarkUpAttribute(displayName: "Script ref FALSE")]
            script_ref_false = 0x8,
            
            [EditorMarkUpAttribute(displayName: "If player in trigger volume")]
            if_player_in_trigger_volume = 0x9,
            
            [EditorMarkUpAttribute(displayName: "If ALL players in trigger volume")]
            if_all_players_in_trigger_volume = 0xa,
            
            [EditorMarkUpAttribute(displayName: "Combat status A or more")]
            combat_status_a_or_more = 0xb,
            
            [EditorMarkUpAttribute(displayName: "Combat status A or less")]
            combat_status_a_or_less = 0xc,
            
            [EditorMarkUpAttribute(displayName: "Arrived")]
            arrived = 0xd,
            
            [EditorMarkUpAttribute(displayName: "In vehicle")]
            in_vehicle = 0xe,
            
            [EditorMarkUpAttribute(displayName: "Sighted player")]
            sighted_player = 0xf,
            
            [EditorMarkUpAttribute(displayName: "A or greater fighting")]
            a_or_greater_fighting = 0x10,
            
            [EditorMarkUpAttribute(displayName: "A or fewer fighting")]
            a_or_fewer_fighting = 0x11,
            
            [EditorMarkUpAttribute(displayName: "Player within X world units")]
            player_within_x_world_units = 0x12,
            
            [EditorMarkUpAttribute(displayName: "Player shot more than X seconds ago")]
            player_shot_more_than_x_seconds_ago = 0x13,
            
            [EditorMarkUpAttribute(displayName: "Game safe to save")]
            game_safe_to_save = 0x14,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Advanced, displayName: "NOT")]
            not = 0x1,
        }
    }
    #endregion
}
