//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    #region squads_block
    [TagBlockDefinitionAttribute(cacheFileSize: 116, tagFileSize: 120, alignment: 4, maxBlockCount: 335)]
    public class squads_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 name;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "team")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_team team;
        
        [EditorMarkUpAttribute(displayName: "parent")]
        [BlockIndexAttribute(blockName: "squad_groups_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent;
        
        [EditorMarkUpAttribute(displayName: "squad delay time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float squad_delay_time;
        
        [EditorMarkUpAttribute(displayName: "normal diff count", tooltipText: "initial number of actors on normal difficulty")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short normal_diff_count;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "insane diff count", tooltipText: "initial number of actors on insane difficulty (hard difficulty is midway between " +
    "normal and insane)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short insane_diff_count;
        
        [EditorMarkUpAttribute(displayName: "major upgrade")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_major_upgrade major_upgrade;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Actor defaults", explanation: "The following default values are used for spawned actors");
        
        [EditorMarkUpAttribute(displayName: "vehicle type")]
        [BlockIndexAttribute(blockName: "scenario_vehicle_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short vehicle_type;
        
        [EditorMarkUpAttribute(displayName: "character type")]
        [BlockIndexAttribute(blockName: "character_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short character_type;
        
        [EditorMarkUpAttribute(displayName: "initial zone")]
        [BlockIndexAttribute(blockName: "zone_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_zone;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "initial weapon")]
        [BlockIndexAttribute(blockName: "scenario_weapon_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_weapon;
        
        [EditorMarkUpAttribute(displayName: "initial secondary weapon")]
        [BlockIndexAttribute(blockName: "scenario_weapon_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_secondary_weapon;
        
        [EditorMarkUpAttribute(displayName: "grenade type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_grenade_type grenade_type;
        
        [EditorMarkUpAttribute(displayName: "initial order")]
        [BlockIndexAttribute(blockName: "orders_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_order;
        
        [EditorMarkUpAttribute(displayName: "vehicle variant")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vehicle_variant;
        
        [PaddingAttribute(PaddingType.Useless, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "starting locations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<actor_starting_locations_block> starting_locations;
        
        [EditorMarkUpAttribute(displayName: "Placement script")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 placement_script;
        
        [PaddingAttribute(PaddingType.Skip, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x1,
            
            [EditorMarkUpAttribute(displayName: "never search")]
            never_search = 0x2,
            
            [EditorMarkUpAttribute(displayName: "start timer immediately")]
            start_timer_immediately = 0x4,
            
            [EditorMarkUpAttribute(displayName: "no timer, delay forever")]
            no_timer__delay_forever = 0x8,
            
            [EditorMarkUpAttribute(displayName: "magic sight after timer")]
            magic_sight_after_timer = 0x10,
            
            [EditorMarkUpAttribute(displayName: "automatic migration")]
            automatic_migration = 0x20,
            
            [EditorMarkUpAttribute(displayName: "DEPRECATED")]
            deprecated = 0x40,
            
            [EditorMarkUpAttribute(displayName: "respawn enabled")]
            respawn_enabled = 0x80,
            
            [EditorMarkUpAttribute(displayName: "blind")]
            blind = 0x100,
            
            [EditorMarkUpAttribute(displayName: "deaf")]
            deaf = 0x200,
            
            [EditorMarkUpAttribute(displayName: "braindead")]
            braindead = 0x400,
            
            [EditorMarkUpAttribute(displayName: "3d_firing_positions")]
            _3d_firing_positions = 0x800,
            
            [EditorMarkUpAttribute(displayName: "initially placed")]
            initially_placed = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "units not enterable by player")]
            units_not_enterable_by_player = 0x2000,
        }
        
        public enum e_team : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "player")]
            player = 0x1,
            
            [EditorMarkUpAttribute(displayName: "human")]
            human = 0x2,
            
            [EditorMarkUpAttribute(displayName: "covenant")]
            covenant = 0x3,
            
            [EditorMarkUpAttribute(displayName: "flood")]
            flood = 0x4,
            
            [EditorMarkUpAttribute(displayName: "sentinel")]
            sentinel = 0x5,
            
            [EditorMarkUpAttribute(displayName: "heretic")]
            heretic = 0x6,
            
            [EditorMarkUpAttribute(displayName: "prophet")]
            prophet = 0x7,
            
            [EditorMarkUpAttribute(displayName: "unused8")]
            unused8 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "unused9")]
            unused9 = 0x9,
            
            [EditorMarkUpAttribute(displayName: "unused10")]
            unused10 = 0xa,
            
            [EditorMarkUpAttribute(displayName: "unused11")]
            unused11 = 0xb,
            
            [EditorMarkUpAttribute(displayName: "unused12")]
            unused12 = 0xc,
            
            [EditorMarkUpAttribute(displayName: "unused13")]
            unused13 = 0xd,
            
            [EditorMarkUpAttribute(displayName: "unused14")]
            unused14 = 0xe,
            
            [EditorMarkUpAttribute(displayName: "unused15")]
            unused15 = 0xf,
        }
        
        public enum e_major_upgrade : short
        {
            
            [EditorMarkUpAttribute(displayName: "normal")]
            normal = 0x0,
            
            [EditorMarkUpAttribute(displayName: "few")]
            few = 0x1,
            
            [EditorMarkUpAttribute(displayName: "many")]
            many = 0x2,
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x3,
            
            [EditorMarkUpAttribute(displayName: "all")]
            all = 0x4,
        }
        
        public enum e_grenade_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Human grenade")]
            human_grenade = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Covenant Plasma")]
            covenant_plasma = 0x2,
        }
    }
    #endregion
    
    #region actor_starting_locations_block
    [TagBlockDefinitionAttribute(cacheFileSize: 100, tagFileSize: 100, alignment: 4, maxBlockCount: 32)]
    public class actor_starting_locations_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(displayName: "position")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d position;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "reference frame")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short reference_frame;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "facing (yaw, pitch", unitsSpecifier: "degrees")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealEulerAngle2d facing__yaw__pitch;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "character type")]
        [BlockIndexAttribute(blockName: "character_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short character_type;
        
        [EditorMarkUpAttribute(displayName: "initial weapon")]
        [BlockIndexAttribute(blockName: "scenario_weapon_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_weapon;
        
        [EditorMarkUpAttribute(displayName: "initial secondary weapon")]
        [BlockIndexAttribute(blockName: "scenario_weapon_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short initial_secondary_weapon;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "vehicle type")]
        [BlockIndexAttribute(blockName: "scenario_vehicle_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short vehicle_type;
        
        [EditorMarkUpAttribute(displayName: "seat type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_seat_type seat_type;
        
        [EditorMarkUpAttribute(displayName: "grenade type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_grenade_type grenade_type;
        
        [EditorMarkUpAttribute(displayName: "swarm count", tooltipText: "number of cretures in swarm if a swarm is spawned at this location")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short swarm_count;
        
        [EditorMarkUpAttribute(displayName: "actor variant name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id actor_variant_name;
        
        [EditorMarkUpAttribute(displayName: "vehicle variant name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id vehicle_variant_name;
        
        [EditorMarkUpAttribute(displayName: "initial movement distance", tooltipText: "before doing anything else, the actor will travel the given distance in its forwa" +
    "rd direction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float initial_movement_distance;
        
        [EditorMarkUpAttribute(displayName: "emitter vehicle")]
        [BlockIndexAttribute(blockName: "scenario_vehicle_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short emitter_vehicle;
        
        [EditorMarkUpAttribute(displayName: "initial movement mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_initial_movement_mode initial_movement_mode;
        
        [EditorMarkUpAttribute(displayName: "Placement script")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public String32 placement_script;
        
        [PaddingAttribute(PaddingType.Skip, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "initially asleep")]
            initially_asleep = 0x1,
            
            [EditorMarkUpAttribute(displayName: "infection form explode")]
            infection_form_explode = 0x2,
            
            [EditorMarkUpAttribute(displayName: "n/a")]
            n_a = 0x4,
            
            [EditorMarkUpAttribute(displayName: "always place")]
            always_place = 0x8,
            
            [EditorMarkUpAttribute(displayName: "initially hidden")]
            initially_hidden = 0x10,
        }
        
        public enum e_seat_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "DEFAULT")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "passenger")]
            passenger = 0x1,
            
            [EditorMarkUpAttribute(displayName: "gunner")]
            gunner = 0x2,
            
            [EditorMarkUpAttribute(displayName: "driver")]
            driver = 0x3,
            
            [EditorMarkUpAttribute(displayName: "small cargo")]
            small_cargo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "large cargo")]
            large_cargo = 0x5,
            
            [EditorMarkUpAttribute(displayName: "NO driver")]
            no_driver = 0x6,
            
            [EditorMarkUpAttribute(displayName: "NO vehicle")]
            no_vehicle = 0x7,
        }
        
        public enum e_grenade_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "NONE")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Human grenade")]
            human_grenade = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Covenant Plasma")]
            covenant_plasma = 0x2,
        }
        
        public enum e_initial_movement_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "climbing")]
            climbing = 0x1,
            
            [EditorMarkUpAttribute(displayName: "flying")]
            flying = 0x2,
        }
    }
    #endregion
}
