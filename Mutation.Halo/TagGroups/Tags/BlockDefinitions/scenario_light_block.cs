//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    #region scenario_light_block
    [TagBlockDefinitionAttribute(cacheFileSize: 108, tagFileSize: 108, alignment: 4, maxBlockCount: 500)]
    public class scenario_light_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "~Controls", explanation: " ");
        
        [EditorMarkUpAttribute(displayName: "Type")]
        [BlockIndexAttribute(blockName: "scenario_light_palette_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short type;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "Name")]
        [BlockIndexAttribute(blockName: "scenario_object_names_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short name;
        
        [EditorMarkUpAttribute(displayName: "Object Data")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scenario_object_datum_struct_block object_data;
        
        [EditorMarkUpAttribute(displayName: "Device Data")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scenario_device_struct_block device_data;
        
        [EditorMarkUpAttribute(displayName: "Light Data")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public scenario_light_struct_block light_data;
    }
    #endregion
    
    #region scenario_light_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 48, tagFileSize: 48, alignment: 4, maxBlockCount: 1)]
    public class scenario_light_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "Type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "Flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "Lightmap Type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_lightmap_type lightmap_type;
        
        [EditorMarkUpAttribute(displayName: "Lightmap Flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_lightmap_flags lightmap_flags;
        
        [EditorMarkUpAttribute(displayName: "Lightmap Half Life")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float lightmap_half_life;
        
        [EditorMarkUpAttribute(displayName: "Lightmap Light Scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float lightmap_light_scale;
        
        [PaddingAttribute(PaddingType.Useless, 116)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Target Point")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d target_point;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Width", unitsSpecifier: "World Units*")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float width;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Height Scale", unitsSpecifier: "World Units*")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float height_scale;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Field of View", unitsSpecifier: "Degrees*")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float field_of_view;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Falloff Distance", unitsSpecifier: "World Units*")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float falloff_distance;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.Unknown1, displayName: "Cutoff Distance", unitsSpecifier: "World Units (from Far Plane)*")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float cutoff_distance;
        
        [PaddingAttribute(PaddingType.Useless, 128)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "sphere")]
            sphere = 0x0,
            
            [EditorMarkUpAttribute(displayName: "orthogonal")]
            orthogonal = 0x1,
            
            [EditorMarkUpAttribute(displayName: "projective")]
            projective = 0x2,
            
            [EditorMarkUpAttribute(displayName: "pyramid")]
            pyramid = 0x3,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "Custom Geometry")]
            custom_geometry = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Unused")]
            unused = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cinematic_only")]
            cinematic_only = 0x4,
        }
        
        public enum e_lightmap_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "Use Light Tag Setting")]
            use_light_tag_setting = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Dynamic Only")]
            dynamic_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Dynamic with Lightmaps")]
            dynamic_with_lightmaps = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Lightmaps Only")]
            lightmaps_only = 0x3,
        }
        
        [FlagsAttribute()]
        public enum b_lightmap_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "Unused")]
            unused = 0x1,
        }
    }
    #endregion
}
