//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 252, tagFileSize: 348, version: 1, groupTag: "hlmt", parentGroupTag: "", name: "model", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class model_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "MODEL");
        
        [EditorMarkUpAttribute(displayName: "render model")]
        [TagReferenceAttribute("mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference render_model;
        
        [EditorMarkUpAttribute(displayName: "collision model")]
        [TagReferenceAttribute("coll")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference collision_model;
        
        [EditorMarkUpAttribute(displayName: "animation")]
        [TagReferenceAttribute("jmad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference animation;
        
        [EditorMarkUpAttribute(displayName: "physics")]
        [TagReferenceAttribute("phys")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference physics;
        
        [EditorMarkUpAttribute(displayName: "physics_model")]
        [TagReferenceAttribute("phmo")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference physics_model;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "level of detail", explanation: @"If a model is further away than the LOD reduction distance, it will be reduced to that LOD.
So the L1 reduction distance should be really long and the L5 reduction distance should be really short.
This means distances should be in descending order, e.g. 5 4 3 2 1.

Note that if we run out of memory or too many models are on screen at once, the engine may reduce
models to a lower LOD BEFORE they reach the reduction distance for that LOD.

If a model has a begin fade distance and disappear distance, it will begin fading out at that distance,
reaching zero alpha and disappearing at the disappear distance. These distances should be greater than all
of the LOD reduction distances.
");
        
        [EditorMarkUpAttribute(displayName: "disappear distance", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float disappear_distance;
        
        [EditorMarkUpAttribute(displayName: "begin fade distance", unitsSpecifier: "world units")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float begin_fade_distance;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "reduce to L1", unitsSpecifier: "world units (super low)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reduce_to_l1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "reduce to L2", unitsSpecifier: "world units (low)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reduce_to_l2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "reduce to L3", unitsSpecifier: "world units (medium)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reduce_to_l3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "reduce to L4", unitsSpecifier: "world units (high)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reduce_to_l4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "reduce to L5", unitsSpecifier: "world units (super high)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float reduce_to_l5;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "shadow fade distance")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_shadow_fade_distance shadow_fade_distance;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "variants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_variant_block> variants;
        
        [EditorMarkUpAttribute(displayName: "materials")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_material_block> materials;
        
        [EditorMarkUpAttribute(displayName: "new damage info")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_damage_info_block> new_damage_info;
        
        [EditorMarkUpAttribute(displayName: "targets")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_target_block> targets;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_region_block> _noNameField1;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_node_block> _noNameField2;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "model object data")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_object_data_block> model_object_data;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "more stuff");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "default dialogue", tooltipText: "The default dialogue tag for this model (overriden by variants)")]
        [TagReferenceAttribute("udlg")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference default_dialogue;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "UNUSED")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference unused;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "default dialogue effect", tooltipText: "The default dialogue tag for this model (overriden by variants)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id default_dialogue_effect;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags8;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags9;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags10;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags11;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags12;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags13;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags14;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags15;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags16;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags17;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags18;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags19;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags20;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags21;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags22;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags23;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags24;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags25;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags26;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags27;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags28;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags29;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags30;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags31;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only node flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_node_flags32;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags8;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags9;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags10;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags11;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags12;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags13;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags14;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags15;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags16;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags17;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags18;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags19;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags20;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags21;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags22;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags23;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags24;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags25;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags26;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags27;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags28;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags29;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags30;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags31;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "render-only section flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte render_only_section_flags32;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "runtime flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_runtime_flags runtime_flags;
        
        [EditorMarkUpAttribute(displayName: "scenario load parameters")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_scenario_load_parameters_block> scenario_load_parameters;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "HOLOGRAM", explanation: "hologram shader is applied whenever the control function from it\'s object is non-" +
    "zero");
        
        [EditorMarkUpAttribute(displayName: "hologram shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference hologram_shader;
        
        [EditorMarkUpAttribute(displayName: "hologram control function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id hologram_control_function;
        
        public enum e_shadow_fade_distance : short
        {
            
            [EditorMarkUpAttribute(displayName: "fade at super high detail level")]
            fade_at_super_high_detail_level = 0x0,
            
            [EditorMarkUpAttribute(displayName: "fade at high detail level")]
            fade_at_high_detail_level = 0x1,
            
            [EditorMarkUpAttribute(displayName: "fade at medium detail level")]
            fade_at_medium_detail_level = 0x2,
            
            [EditorMarkUpAttribute(displayName: "fade at low detail level")]
            fade_at_low_detail_level = 0x3,
            
            [EditorMarkUpAttribute(displayName: "fade at super low detail level")]
            fade_at_super_low_detail_level = 0x4,
            
            [EditorMarkUpAttribute(displayName: "fade never")]
            fade_never = 0x5,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "active camo always on")]
            active_camo_always_on = 0x1,
            
            [EditorMarkUpAttribute(displayName: "active camo always merge")]
            active_camo_always_merge = 0x2,
            
            [EditorMarkUpAttribute(displayName: "active camo never merge")]
            active_camo_never_merge = 0x4,
        }
        
        [FlagsAttribute()]
        public enum b_runtime_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "contains run-time nodes")]
            contains_run_time_nodes = 0x1,
        }
    }
    
    #region model_variant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 64)]
    public class model_variant_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [PaddingAttribute(PaddingType.Padding, 16)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "regions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_variant_region_block> regions;
        
        [EditorMarkUpAttribute(displayName: "objects")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_variant_object_block> objects;
        
        [PaddingAttribute(PaddingType.Padding, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "dialogue sound effect")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id dialogue_sound_effect;
        
        [EditorMarkUpAttribute(displayName: "dialogue")]
        [TagReferenceAttribute("udlg")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference dialogue;
    }
    #endregion
    
    #region model_variant_region_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 16)]
    public class model_variant_region_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "region name", unitsSpecifier: "must match region name in render_model")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id region_name;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "parent variant")]
        [BlockIndexAttribute(blockName: "model_variant_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_variant;
        
        [EditorMarkUpAttribute(displayName: "permutations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_variant_permutation_block> permutations;
        
        [EditorMarkUpAttribute(displayName: "sort order", tooltipText: "negative values mean closer to the camera")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_sort_order sort_order;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        public enum e_sort_order : short
        {
            
            [EditorMarkUpAttribute(displayName: "no sorting")]
            no_sorting = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "-5 (closest")]
            _5__closest = 0x1,
            
            [EditorMarkUpAttribute(displayName: "-4")]
            _4 = 0x2,
            
            [EditorMarkUpAttribute(displayName: "-3")]
            _3 = 0x3,
            
            [EditorMarkUpAttribute(displayName: "-2")]
            _2 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "-1")]
            _1 = 0x5,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "0 (same as model")]
            _0__same_as_model = 0x6,
            
            [EditorMarkUpAttribute(displayName: "1")]
            _11 = 0x7,
            
            [EditorMarkUpAttribute(displayName: "2")]
            _21 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "3")]
            _31 = 0x9,
            
            [EditorMarkUpAttribute(displayName: "4")]
            _41 = 0xa,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "5 (farthest")]
            _5__farthest = 0xb,
        }
    }
    #endregion
    
    #region model_variant_permutation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 32, tagFileSize: 32, alignment: 4, maxBlockCount: 32)]
    public class model_variant_permutation_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "permutation name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id permutation_name;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "probability", unitsSpecifier: "(0,+inf)")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float probability;
        
        [EditorMarkUpAttribute(displayName: "states")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_variant_state_block> states;
        
        [PaddingAttribute(PaddingType.Padding, 5)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 7)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [FlagsAttribute()]
        public enum b_flags : byte
        {
            
            [EditorMarkUpAttribute(displayName: "copy states to all permutations")]
            copy_states_to_all_permutations = 0x1,
        }
    }
    #endregion
    
    #region model_variant_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 24, tagFileSize: 24, alignment: 4, maxBlockCount: 10)]
    public class model_variant_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "permutation name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id permutation_name;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "property flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_property_flags property_flags;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_state state;
        
        [EditorMarkUpAttribute(displayName: "looping effect", tooltipText: "played while the model is in this state")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference looping_effect;
        
        [EditorMarkUpAttribute(displayName: "looping effect marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id looping_effect_marker_name;
        
        [EditorMarkUpAttribute(displayName: "initial probability")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float initial_probability;
        
        [FlagsAttribute()]
        public enum b_property_flags : byte
        {
            
            [EditorMarkUpAttribute(displayName: "blurred")]
            blurred = 0x1,
            
            [EditorMarkUpAttribute(displayName: "hella blurred")]
            hella_blurred = 0x2,
            
            [EditorMarkUpAttribute(displayName: "shielded")]
            shielded = 0x4,
        }
        
        public enum e_state : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "minor damage")]
            minor_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "medium damage")]
            medium_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "major damage")]
            major_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "destroyed")]
            destroyed = 0x4,
        }
    }
    #endregion
    
    #region model_variant_object_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 16)]
    public class model_variant_object_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "parent marker")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parent_marker;
        
        [EditorMarkUpAttribute(displayName: "child marker")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id child_marker;
        
        [EditorMarkUpAttribute(displayName: "child object")]
        [TagReferenceAttribute("obje")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference child_object;
    }
    #endregion
    
    #region model_material_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 32)]
    public class model_material_block
    {
        
        [EditorMarkUpAttribute(displayName: "material name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id material_name;
        
        [EditorMarkUpAttribute(displayName: "material type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_material_type material_type;
        
        // get_block_proc=0x00512900, is_valid_source_block_proc=0x00512940
        [EditorMarkUpAttribute(displayName: "damage section")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short damage_section;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "global material name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id global_material_name;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        public enum e_material_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "dirt")]
            dirt = 0x0,
            
            [EditorMarkUpAttribute(displayName: "sand")]
            sand = 0x1,
            
            [EditorMarkUpAttribute(displayName: "stone")]
            stone = 0x2,
            
            [EditorMarkUpAttribute(displayName: "snow")]
            snow = 0x3,
            
            [EditorMarkUpAttribute(displayName: "wood")]
            wood = 0x4,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "metal (hollow")]
            metal__hollow = 0x5,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "metal (thin")]
            metal__thin = 0x6,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "metal (thick")]
            metal__thick = 0x7,
            
            [EditorMarkUpAttribute(displayName: "rubber")]
            rubber = 0x8,
            
            [EditorMarkUpAttribute(displayName: "glass")]
            glass = 0x9,
            
            [EditorMarkUpAttribute(displayName: "force field")]
            force_field = 0xa,
            
            [EditorMarkUpAttribute(displayName: "grunt")]
            grunt = 0xb,
            
            [EditorMarkUpAttribute(displayName: "hunter armor")]
            hunter_armor = 0xc,
            
            [EditorMarkUpAttribute(displayName: "hunter skin")]
            hunter_skin = 0xd,
            
            [EditorMarkUpAttribute(displayName: "elite")]
            elite = 0xe,
            
            [EditorMarkUpAttribute(displayName: "jackal")]
            jackal = 0xf,
            
            [EditorMarkUpAttribute(displayName: "jackal energy shield")]
            jackal_energy_shield = 0x10,
            
            [EditorMarkUpAttribute(displayName: "engineer skin")]
            engineer_skin = 0x11,
            
            [EditorMarkUpAttribute(displayName: "engineer force field")]
            engineer_force_field = 0x12,
            
            [EditorMarkUpAttribute(displayName: "flood combat form")]
            flood_combat_form = 0x13,
            
            [EditorMarkUpAttribute(displayName: "flood carrier form")]
            flood_carrier_form = 0x14,
            
            [EditorMarkUpAttribute(displayName: "cyborg armor")]
            cyborg_armor = 0x15,
            
            [EditorMarkUpAttribute(displayName: "cyborg energy shield")]
            cyborg_energy_shield = 0x16,
            
            [EditorMarkUpAttribute(displayName: "human armor")]
            human_armor = 0x17,
            
            [EditorMarkUpAttribute(displayName: "human skin")]
            human_skin = 0x18,
            
            [EditorMarkUpAttribute(displayName: "sentinel")]
            sentinel = 0x19,
            
            [EditorMarkUpAttribute(displayName: "monitor")]
            monitor = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "plastic")]
            plastic = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "water")]
            water = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "leaves")]
            leaves = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "elite energy shield")]
            elite_energy_shield = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "ice")]
            ice = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "hunter shield")]
            hunter_shield = 0x20,
        }
    }
    #endregion
    
    #region global_damage_info_block
    [TagBlockDefinitionAttribute(cacheFileSize: 248, tagFileSize: 248, alignment: 4, maxBlockCount: 1)]
    public class global_damage_info_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "global indirect material name", tooltipText: "absorbes AOE or child damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id global_indirect_material_name;
        
        // get_block_proc=0x00512900, is_valid_source_block_proc=0x00512940
        [EditorMarkUpAttribute(displayName: "indirect damage section", tooltipText: "absorbes AOE or child damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short indirect_damage_section;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "collision damage reporting type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_collision_damage_reporting_type collision_damage_reporting_type;
        
        [EditorMarkUpAttribute(displayName: "response damage reporting type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_collision_damage_reporting_type response_damage_reporting_type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Padding, 20)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "body");
        
        [EditorMarkUpAttribute(displayName: "maximum vitality")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_vitality;
        
        [EditorMarkUpAttribute(displayName: "minimum stun damage", tooltipText: "the minimum damage required to stun this object\'s health")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_stun_damage;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "stun time", unitsSpecifier: "seconds", tooltipText: "the length of time the health stay stunned (do not recharge) after taking damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stun_time;
        
        [EditorMarkUpAttribute(displayName: "recharge time", unitsSpecifier: "seconds", tooltipText: "the length of time it would take for the shields to fully recharge after being co" +
    "mpletely depleted")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float recharge_time;
        
        [EditorMarkUpAttribute(displayName: "recharge fraction", tooltipText: "0 defaults to 1 - to what maximum level the body health will be allowed to rechar" +
    "ge")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float recharge_fraction;
        
        [PaddingAttribute(PaddingType.Padding, 64)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "shield");
        
        [EditorMarkUpAttribute(displayName: "shield damaged first person shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shield_damaged_first_person_shader;
        
        [EditorMarkUpAttribute(displayName: "shield damaged shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shield_damaged_shader;
        
        [EditorMarkUpAttribute(displayName: "maximum shield vitality", tooltipText: "the default initial and maximum shield vitality of this object")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_shield_vitality;
        
        [EditorMarkUpAttribute(displayName: "global shield material name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id global_shield_material_name;
        
        [EditorMarkUpAttribute(displayName: "minimum stun damage", tooltipText: "the minimum damage required to stun this object\'s shields")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_stun_damage1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "stun time", unitsSpecifier: "seconds", tooltipText: "the length of time the shields stay stunned (do not recharge) after taking damage" +
    "")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stun_time1;
        
        [EditorMarkUpAttribute(displayName: "recharge time", unitsSpecifier: "seconds", tooltipText: "the length of time it would take for the shields to fully recharge after being co" +
    "mpletely depleted")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float recharge_time1;
        
        [EditorMarkUpAttribute(displayName: "shield damaged threshold")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float shield_damaged_threshold;
        
        [EditorMarkUpAttribute(displayName: "shield damaged effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shield_damaged_effect;
        
        [EditorMarkUpAttribute(displayName: "shield depleted effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shield_depleted_effect;
        
        [EditorMarkUpAttribute(displayName: "shield recharging effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference shield_recharging_effect;
        
        [EditorMarkUpAttribute(displayName: "damage sections")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_damage_section_block> damage_sections;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "nodes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_damage_nodes_block> nodes;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding8;
        
        [EditorMarkUpAttribute(displayName: "damage seats")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<damage_seat_info_block> damage_seats;
        
        [EditorMarkUpAttribute(displayName: "damage constraints")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<damage_constraint_info_block> damage_constraints;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "overshield");
        
        [EditorMarkUpAttribute(displayName: "overshield first person shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference overshield_first_person_shader;
        
        [EditorMarkUpAttribute(displayName: "overshield shader")]
        [TagReferenceAttribute("shad")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference overshield_shader;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "takes shield damage for children")]
            takes_shield_damage_for_children = 0x1,
            
            [EditorMarkUpAttribute(displayName: "takes body damage for children")]
            takes_body_damage_for_children = 0x2,
            
            [EditorMarkUpAttribute(displayName: "always shields friendly damage")]
            always_shields_friendly_damage = 0x4,
            
            [EditorMarkUpAttribute(displayName: "passes area damage to children")]
            passes_area_damage_to_children = 0x8,
            
            [EditorMarkUpAttribute(displayName: "parent never takes body damage for us")]
            parent_never_takes_body_damage_for_us = 0x10,
            
            [EditorMarkUpAttribute(displayName: "only damaged by explosives")]
            only_damaged_by_explosives = 0x20,
            
            [EditorMarkUpAttribute(displayName: "parent never takes shield damage for us")]
            parent_never_takes_shield_damage_for_us = 0x40,
            
            [EditorMarkUpAttribute(displayName: "cannot die from damage")]
            cannot_die_from_damage = 0x80,
            
            [EditorMarkUpAttribute(displayName: "passes attached damage to riders")]
            passes_attached_damage_to_riders = 0x100,
        }
        
        public enum e_collision_damage_reporting_type : byte
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Advanced, displayName: "teh guardians11")]
            teh_guardians__1__1 = 0x0,
            
            [EditorMarkUpAttribute(displayName: "falling damage")]
            falling_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "generic collision damage")]
            generic_collision_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "generic melee damage")]
            generic_melee_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "generic explosion")]
            generic_explosion = 0x4,
            
            [EditorMarkUpAttribute(displayName: "magnum pistol")]
            magnum_pistol = 0x5,
            
            [EditorMarkUpAttribute(displayName: "plasma pistol")]
            plasma_pistol = 0x6,
            
            [EditorMarkUpAttribute(displayName: "needler")]
            needler = 0x7,
            
            [EditorMarkUpAttribute(displayName: "smg")]
            smg = 0x8,
            
            [EditorMarkUpAttribute(displayName: "plasma rifle")]
            plasma_rifle = 0x9,
            
            [EditorMarkUpAttribute(displayName: "battle rifle")]
            battle_rifle = 0xa,
            
            [EditorMarkUpAttribute(displayName: "carbine")]
            carbine = 0xb,
            
            [EditorMarkUpAttribute(displayName: "shotgun")]
            shotgun = 0xc,
            
            [EditorMarkUpAttribute(displayName: "sniper rifle")]
            sniper_rifle = 0xd,
            
            [EditorMarkUpAttribute(displayName: "beam rifle")]
            beam_rifle = 0xe,
            
            [EditorMarkUpAttribute(displayName: "rocket launcher")]
            rocket_launcher = 0xf,
            
            [EditorMarkUpAttribute(displayName: "flak cannon")]
            flak_cannon = 0x10,
            
            [EditorMarkUpAttribute(displayName: "brute shot")]
            brute_shot = 0x11,
            
            [EditorMarkUpAttribute(displayName: "disintegrator")]
            disintegrator = 0x12,
            
            [EditorMarkUpAttribute(displayName: "brute plasma rifle")]
            brute_plasma_rifle = 0x13,
            
            [EditorMarkUpAttribute(displayName: "energy sword")]
            energy_sword = 0x14,
            
            [EditorMarkUpAttribute(displayName: "frag grenade")]
            frag_grenade = 0x15,
            
            [EditorMarkUpAttribute(displayName: "plasma grenade")]
            plasma_grenade = 0x16,
            
            [EditorMarkUpAttribute(displayName: "flag melee damage")]
            flag_melee_damage = 0x17,
            
            [EditorMarkUpAttribute(displayName: "bomb melee damage")]
            bomb_melee_damage = 0x18,
            
            [EditorMarkUpAttribute(displayName: "bomb explosion damage")]
            bomb_explosion_damage = 0x19,
            
            [EditorMarkUpAttribute(displayName: "ball melee damage")]
            ball_melee_damage = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "human turret")]
            human_turret = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "plasma turret")]
            plasma_turret = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "banshee")]
            banshee = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "ghost")]
            ghost = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "mongoose")]
            mongoose = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "scorpion")]
            scorpion = 0x20,
            
            [EditorMarkUpAttribute(displayName: "spectre driver")]
            spectre_driver = 0x21,
            
            [EditorMarkUpAttribute(displayName: "spectre gunner")]
            spectre_gunner = 0x22,
            
            [EditorMarkUpAttribute(displayName: "warthog driver")]
            warthog_driver = 0x23,
            
            [EditorMarkUpAttribute(displayName: "warthog gunner")]
            warthog_gunner = 0x24,
            
            [EditorMarkUpAttribute(displayName: "wraith")]
            wraith = 0x25,
            
            [EditorMarkUpAttribute(displayName: "tank")]
            tank = 0x26,
            
            [EditorMarkUpAttribute(displayName: "sentinel beam")]
            sentinel_beam = 0x27,
            
            [EditorMarkUpAttribute(displayName: "sentinel rpg")]
            sentinel_rpg = 0x28,
            
            [EditorMarkUpAttribute(displayName: "teleporter")]
            teleporter = 0x29,
        }
    }
    #endregion
    
    #region global_damage_section_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 16)]
    public class global_damage_section_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "damage section flags", explanation: "* absorbs body damage: damage to this section does not count against body vitalit" +
    "y\n* headshottable: takes extra headshot damage when shot\n* ignores shields: dama" +
    "ge to this section bypasses shields");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "vitality percentage", unitsSpecifier: "[0.1]", tooltipText: "percentage of total object vitality")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float vitality_percentage;
        
        [EditorMarkUpAttribute(displayName: "instant responses")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<instantaneous_damage_repsonse_block> instant_responses;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField0;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<g_null_block> _noNameField1;
        
        [EditorMarkUpAttribute(displayName: "stun time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float stun_time;
        
        [EditorMarkUpAttribute(displayName: "recharge time", unitsSpecifier: "seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float recharge_time;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "resurrection restored region name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id resurrection_restored_region_name;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "absorbs body damage")]
            absorbs_body_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "takes full dmg when object dies")]
            takes_full_dmg_when_object_dies = 0x2,
            
            [EditorMarkUpAttribute(displayName: "cannot die with riders")]
            cannot_die_with_riders = 0x4,
            
            [EditorMarkUpAttribute(displayName: "takes full dmg when obj dstryd")]
            takes_full_dmg_when_obj_dstryd = 0x8,
            
            [EditorMarkUpAttribute(displayName: "restored on ressurection")]
            restored_on_ressurection = 0x10,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x20,
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused1 = 0x40,
            
            [EditorMarkUpAttribute(displayName: "heatshottable")]
            heatshottable = 0x80,
            
            [EditorMarkUpAttribute(displayName: "ignores shields")]
            ignores_shields = 0x100,
        }
    }
    #endregion
    
    #region instantaneous_damage_repsonse_block
    [TagBlockDefinitionAttribute(cacheFileSize: 80, tagFileSize: 80, alignment: 4, maxBlockCount: 16)]
    public class instantaneous_damage_repsonse_block
    {
        
        [EditorMarkUpAttribute(displayName: "response type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_response_type response_type;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "Constraint damage type", explanation: "* if you specify a constraint group name (see lower section of this block)\n  you " +
    "can specify a constraint damage\n* loosening a constraint takes it out of the rig" +
    "id state - activates it\n* destroying a constraint sets the attached body free");
        
        [EditorMarkUpAttribute(displayName: "constraint damage type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_constraint_damage_type constraint_damage_type;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "Damage response flags", explanation: @"* kills object: when the response fires the object dies regardless of its current health
* inhibits <x>: from halo 1 - disallows basic behaviors for a unit
* forces drop weapon: from halo 1 - makes the unit drop its current weapon
* kills weapon <x> trigger: destroys the <x> trigger on the unit's current weapon
* destroys object: when the response fires the object is destroyed");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "damage threshold", tooltipText: "repsonse fires after crossing this threshold.  1=full health")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float damage_threshold;
        
        [EditorMarkUpAttribute(displayName: "transition effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference transition_effect;
        
        [EditorMarkUpAttribute(displayName: "damage effect")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public instantaneous_response_damage_effect_struct_block damage_effect;
        
        [EditorMarkUpAttribute(displayName: "region")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id region;
        
        [EditorMarkUpAttribute(displayName: "new state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_new_state new_state;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "runtime region index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short runtime_region_index;
        
        [EditorMarkUpAttribute(displayName: "effect marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id effect_marker_name;
        
        [EditorMarkUpAttribute(displayName: "damage effect marker")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public instantaneous_response_damage_effect_marker_struct_block damage_effect_marker;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField2 = new Explanation(name: "Response delay", explanation: "If desired, you can specify a delay until the response fires.This delay is pre-em" +
    "pted if another timed response for the same section fires.The delay effect plays" +
    " while the timer is counting down");
        
        [EditorMarkUpAttribute(displayName: "response delay", tooltipText: "in seconds")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float response_delay;
        
        [EditorMarkUpAttribute(displayName: "delay effect")]
        [TagReferenceAttribute("effe")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference delay_effect;
        
        [EditorMarkUpAttribute(displayName: "delay effect marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id delay_effect_marker_name;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField3 = new Explanation(name: "Constraint destruction", explanation: @"- a response can destroy a single constraint by naming it explicitly.
- alternatively it can randomly destroy a single constraint from a specified group if the ""destroy one group constraint"" flag is set
- also it can destroy all constraints in a specified group if the ""destroy all group constraints"" flag is set
");
        
        [EditorMarkUpAttribute(displayName: "constraint/group name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id constraint_group_name;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField4 = new Explanation(name: "seat ejaculation");
        
        [EditorMarkUpAttribute(displayName: "ejecting seat label")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id ejecting_seat_label;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField5 = new Explanation(name: "skip fraction", explanation: "0.0 always fires, 1.0 never fires");
        
        [EditorMarkUpAttribute(displayName: "skip fraction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float skip_fraction;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField6 = new Explanation(name: "destroyed child object marker name", explanation: "when this response fires, any children objects created at the supplied marker nam" +
    "e will be destroyed");
        
        [EditorMarkUpAttribute(displayName: "destroyed child object marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id destroyed_child_object_marker_name;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField7 = new Explanation(name: "total damage threshold", explanation: "scale on total damage section vitality");
        
        [EditorMarkUpAttribute(displayName: "total damage threshold")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float total_damage_threshold;
        
        public enum e_response_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "receives all damage")]
            receives_all_damage = 0x0,
            
            [EditorMarkUpAttribute(displayName: "receives area effect damage")]
            receives_area_effect_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "receives local damage")]
            receives_local_damage = 0x2,
        }
        
        public enum e_constraint_damage_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "destroy one of group")]
            destroy_one_of_group = 0x1,
            
            [EditorMarkUpAttribute(displayName: "destroy entire group")]
            destroy_entire_group = 0x2,
            
            [EditorMarkUpAttribute(displayName: "loosen one of group")]
            loosen_one_of_group = 0x3,
            
            [EditorMarkUpAttribute(displayName: "loosen entire group")]
            loosen_entire_group = 0x4,
        }
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "kills object")]
            kills_object = 0x1,
            
            [EditorMarkUpAttribute(displayName: "inhibits melee attack")]
            inhibits_melee_attack = 0x2,
            
            [EditorMarkUpAttribute(displayName: "inhibits weapon attack")]
            inhibits_weapon_attack = 0x4,
            
            [EditorMarkUpAttribute(displayName: "inhibits walking")]
            inhibits_walking = 0x8,
            
            [EditorMarkUpAttribute(displayName: "forces drop weapon")]
            forces_drop_weapon = 0x10,
            
            [EditorMarkUpAttribute(displayName: "kills weapon primary trigger")]
            kills_weapon_primary_trigger = 0x20,
            
            [EditorMarkUpAttribute(displayName: "kills weapon secondary trigger")]
            kills_weapon_secondary_trigger = 0x40,
            
            [EditorMarkUpAttribute(displayName: "destroys object")]
            destroys_object = 0x80,
            
            [EditorMarkUpAttribute(displayName: "damages weapon primary trigger")]
            damages_weapon_primary_trigger = 0x100,
            
            [EditorMarkUpAttribute(displayName: "damages weapon secondary trigger")]
            damages_weapon_secondary_trigger = 0x200,
            
            [EditorMarkUpAttribute(displayName: "light damage left turn")]
            light_damage_left_turn = 0x400,
            
            [EditorMarkUpAttribute(displayName: "major damage left turn")]
            major_damage_left_turn = 0x800,
            
            [EditorMarkUpAttribute(displayName: "light damage right turn")]
            light_damage_right_turn = 0x1000,
            
            [EditorMarkUpAttribute(displayName: "major damage right turn")]
            major_damage_right_turn = 0x2000,
            
            [EditorMarkUpAttribute(displayName: "light damage engine")]
            light_damage_engine = 0x4000,
            
            [EditorMarkUpAttribute(displayName: "major damage engine")]
            major_damage_engine = 0x8000,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "kills object (no player solo")]
            kills_object__no_player_solo = 0x10000,
            
            [EditorMarkUpAttribute(displayName: "causes detonation")]
            causes_detonation = 0x20000,
            
            [EditorMarkUpAttribute(displayName: "destroy all group constraints")]
            destroy_all_group_constraints = 0x40000,
            
            [EditorMarkUpAttribute(displayName: "kills variant objects")]
            kills_variant_objects = 0x80000,
            
            [EditorMarkUpAttribute(displayName: "force unattached effects")]
            force_unattached_effects = 0x100000,
            
            [EditorMarkUpAttribute(displayName: "fires under threshold")]
            fires_under_threshold = 0x200000,
            
            [EditorMarkUpAttribute(displayName: "triggers special death")]
            triggers_special_death = 0x400000,
            
            [EditorMarkUpAttribute(displayName: "only on special death")]
            only_on_special_death = 0x800000,
            
            [EditorMarkUpAttribute(displayName: "only NOT on special death")]
            only_not_on_special_death = 0x1000000,
        }
        
        public enum e_new_state : short
        {
            
            [EditorMarkUpAttribute(displayName: "default")]
            @default = 0x0,
            
            [EditorMarkUpAttribute(displayName: "minor damage")]
            minor_damage = 0x1,
            
            [EditorMarkUpAttribute(displayName: "medium damage")]
            medium_damage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "major damage")]
            major_damage = 0x3,
            
            [EditorMarkUpAttribute(displayName: "destroyed")]
            destroyed = 0x4,
        }
    }
    #endregion
    
    #region instantaneous_response_damage_effect_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class instantaneous_response_damage_effect_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "transition damage effect")]
        [TagReferenceAttribute("jpt!")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference transition_damage_effect;
    }
    #endregion
    
    #region instantaneous_response_damage_effect_marker_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class instantaneous_response_damage_effect_marker_struct_block
    {
        
        [EditorMarkUpAttribute(displayName: "damage effect marker name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id damage_effect_marker_name;
    }
    #endregion
    
    #region global_damage_nodes_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 255)]
    public class global_damage_nodes_block
    {
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
    }
    #endregion
    
    #region damage_seat_info_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 16)]
    public class damage_seat_info_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "seat label")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id seat_label;
        
        [EditorMarkUpAttribute(displayName: "direct damage scale", tooltipText: "0==no damage, 1==full damage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float direct_damage_scale;
        
        [EditorMarkUpAttribute(displayName: "damage transfer fall-off radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float damage_transfer_fall_off_radius;
        
        [EditorMarkUpAttribute(displayName: "maximum transfer damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float maximum_transfer_damage_scale;
        
        [EditorMarkUpAttribute(displayName: "minimum transfer damage scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float minimum_transfer_damage_scale;
    }
    #endregion
    
    #region damage_constraint_info_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 16)]
    public class damage_constraint_info_block
    {
        
        [EditorMarkUpAttribute(displayName: "physics model constraint name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id physics_model_constraint_name;
        
        [EditorMarkUpAttribute(displayName: "damage constraint name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id damage_constraint_name;
        
        [EditorMarkUpAttribute(displayName: "damage constraint group name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id damage_constraint_group_name;
        
        [EditorMarkUpAttribute(displayName: "group probability scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float group_probability_scale;
        
        [PaddingAttribute(PaddingType.Padding, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region model_target_block
    [TagBlockDefinitionAttribute(cacheFileSize: 28, tagFileSize: 28, alignment: 4, maxBlockCount: 32)]
    public class model_target_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "marker name", tooltipText: "multiple markers become multiple spheres of the same radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id marker_name;
        
        [EditorMarkUpAttribute(displayName: "size", tooltipText: "sphere radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float size;
        
        [EditorMarkUpAttribute(displayName: "cone angle", tooltipText: "the target is only visible when viewed within this angle of the marker\'s x axis")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float cone_angle;
        
        // get_block_proc=0x00512900, is_valid_source_block_proc=0x00512940
        [EditorMarkUpAttribute(displayName: "damage section", tooltipText: "the target is associated with this damage section")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short damage_section;
        
        [EditorMarkUpAttribute(displayName: "variant", tooltipText: "the target will only appear with this variant")]
        [BlockIndexAttribute(blockName: "model_variant_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short variant;
        
        [EditorMarkUpAttribute(displayName: "targeting relevance", tooltipText: "higher relevances turn into stronger magnetisms")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float targeting_relevance;
        
        [EditorMarkUpAttribute(displayName: "lock-on data")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public model_target_lock_on_data_struct_block lock_on_data;
    }
    #endregion
    
    #region model_target_lock_on_data_struct_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class model_target_lock_on_data_struct_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "lock-on fields");
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "lock on distance")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float lock_on_distance;
        
        [FlagsAttribute()]
        public enum b_flags : uint
        {
            
            [EditorMarkUpAttribute(displayName: "locked by human tracking")]
            locked_by_human_tracking = 0x1,
            
            [EditorMarkUpAttribute(displayName: "locked by plasma tracking")]
            locked_by_plasma_tracking = 0x2,
            
            [EditorMarkUpAttribute(displayName: "headshot")]
            headshot = 0x4,
            
            [EditorMarkUpAttribute(displayName: "vulnerable")]
            vulnerable = 0x8,
            
            [EditorMarkUpAttribute(displayName: "alwas locked by plasma tracking")]
            alwas_locked_by_plasma_tracking = 0x10,
        }
    }
    #endregion
    
    #region model_region_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 16)]
    public class model_region_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision region index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte collision_region_index;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "physics region index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte physics_region_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "permutations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<model_permutation_block> permutations;
    }
    #endregion
    
    #region model_permutation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 32)]
    public class model_permutation_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "collision permutation index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte collision_permutation_index;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [FlagsAttribute()]
        public enum b_flags : byte
        {
            
            [EditorMarkUpAttribute(displayName: "cannot be chosen randomly")]
            cannot_be_chosen_randomly = 0x1,
        }
    }
    #endregion
    
    #region model_node_block
    [TagBlockDefinitionAttribute(cacheFileSize: 92, tagFileSize: 92, alignment: 4, maxBlockCount: 255)]
    public class model_node_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly | EditorMarkUpFlags.BlockName, displayName: "name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "parent node")]
        [BlockIndexAttribute(blockName: "model_node_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short parent_node;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "first child node")]
        [BlockIndexAttribute(blockName: "model_node_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short first_child_node;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "next sibling node")]
        [BlockIndexAttribute(blockName: "model_node_block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short next_sibling_node;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default translation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d default_translation;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default rotation")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealQuaternion default_rotation;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default inverse scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float default_inverse_scale;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default inverse forward")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d default_inverse_forward;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default inverse left")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d default_inverse_left;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default inverse up")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d default_inverse_up;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "default inverse position")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d default_inverse_position;
    }
    #endregion
    
    #region model_object_data_block
    [TagBlockDefinitionAttribute(cacheFileSize: 20, tagFileSize: 20, alignment: 4, maxBlockCount: 1)]
    public class model_object_data_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d offset;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "radius")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float radius;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "not set")]
            not_set = 0x0,
            
            [EditorMarkUpAttribute(displayName: "user defined")]
            user_defined = 0x1,
            
            [EditorMarkUpAttribute(displayName: "auto generated")]
            auto_generated = 0x2,
        }
    }
    #endregion
    
    #region global_scenario_load_parameters_block
    [TagBlockDefinitionAttribute(cacheFileSize: 48, tagFileSize: 48, alignment: 4, maxBlockCount: 32)]
    public class global_scenario_load_parameters_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "SCENARIO LOAD PARAMETERS", explanation: "strip-variant <variant-name>\nstrips a given variant out of the model tag\nstrip-di" +
    "alogue\nstrips all the dialogue for this model i.e. cinematic only");
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "scenario")]
        [TagReferenceAttribute("scnr")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference scenario;
        
        [EditorMarkUpAttribute(displayName: "parameters")]
        [TagDataAttribute(maxSize: 65535, alignment: 4, maxSizeString: "UNSIGNED_SHORT_MAX")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData parameters;
        
        [PaddingAttribute(PaddingType.Padding, 32)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
}
