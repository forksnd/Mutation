//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 260, tagFileSize: 268, version: 1, groupTag: "ltmp", parentGroupTag: "", name: "scenario_structure_lightmap", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class scenario_structure_lightmap_block
    {
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "lightmap options", explanation: @"The following fields control the behavior of the lightmapper

RADIANCE ESTIMATE SEARCH DISTANCE UPPER BOUND: the largest distance the code will look for photons. bigger levels need a bigger search radius.  Measured, in world units, 0.0 defaults to 1.0

RADIANCE ESTIMATE SEARCH DISTANCE LOWER BOUND: the smallest distance the code will look for photons. bigger levels need a bigger search radius.  Measured, in world units, 0.0 defaults to 1.0

LUMINELS PER WORLD UNIT: how many lightmap pixels there should be per world unit.  0.0 defaults to 3.0

OUTPUT WHITE REFERENCE: for experimentation - what wattage the lightmapper considers ""white"" to be for output.  0.0 defaults to 1.0

OUTPUT BLACK REFERENCE: for experimentation - what wattage the lightmapper considers ""black"" to be for output.  0.0 defaults to 0.0

OUTPUT SCHLICK PARAMETER: controls the way midtones are mapped.  0.0 defaults to 4.5

DIFFUSE MAP SCALE: controls how diffuse maps are scaled.  0.0 defaults to 1.5

PRT SUN SCALE: 0.0 defaults to 100.0

PRT SKY SCALE: 0.0 defaults to 1.0

PRT INDIRECT SCALE: 0.0 defaults to 1.0

PRT SCALE: you must set this value.

PRT SURFACE LIGHT SCALE: 0.0 defaults to 1.0

PRT SCENARIO LIGHT SCALE: 0.0 defaults to 1.0

LIGHTPROBE INTERPOLATION OVERIDE(speed): overide the default sampling behavior");
        
        [EditorMarkUpAttribute(displayName: "search distance lower bound")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float search_distance_lower_bound;
        
        [EditorMarkUpAttribute(displayName: "search distance upper bound")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float search_distance_upper_bound;
        
        [EditorMarkUpAttribute(displayName: "luminels per world unit")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float luminels_per_world_unit;
        
        [EditorMarkUpAttribute(displayName: "output white reference")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float output_white_reference;
        
        [EditorMarkUpAttribute(displayName: "output black reference")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float output_black_reference;
        
        [EditorMarkUpAttribute(displayName: "output schlick parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float output_schlick_parameter;
        
        [EditorMarkUpAttribute(displayName: "diffuse map scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float diffuse_map_scale;
        
        [EditorMarkUpAttribute(displayName: "sun scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sun_scale;
        
        [EditorMarkUpAttribute(displayName: "sky scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float sky_scale;
        
        [EditorMarkUpAttribute(displayName: "indirect scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float indirect_scale;
        
        [EditorMarkUpAttribute(displayName: "prt scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float prt_scale;
        
        [EditorMarkUpAttribute(displayName: "surface light scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float surface_light_scale;
        
        [EditorMarkUpAttribute(displayName: "scenario light scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float scenario_light_scale;
        
        [EditorMarkUpAttribute(displayName: "lightprobe interpolation overide")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float lightprobe_interpolation_overide;
        
        [PaddingAttribute(PaddingType.Padding, 72)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "lightmap groups")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<structure_lightmap_group_block> lightmap_groups;
        
        [PaddingAttribute(PaddingType.Padding, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "errors")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_error_report_categories_block> errors;
        
        [PaddingAttribute(PaddingType.Padding, 104)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
    }
    
    #region structure_lightmap_group_block
    [TagBlockDefinitionAttribute(cacheFileSize: 104, tagFileSize: 104, alignment: 4, maxBlockCount: 256)]
    public class structure_lightmap_group_block
    {
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "structure checksum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int structure_checksum;
        
        [EditorMarkUpAttribute(displayName: "section palette")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<structure_lightmap_palette_color_block> section_palette;
        
        [EditorMarkUpAttribute(displayName: "writable palettes")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<structure_lightmap_palette_color_block> writable_palettes;
        
        [EditorMarkUpAttribute(displayName: "bitmap group")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference bitmap_group;
        
        [EditorMarkUpAttribute(displayName: "clusters")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_geometry_section_block> clusters;
        
        [EditorMarkUpAttribute(displayName: "cluster render info")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_geometry_render_info_block> cluster_render_info;
        
        [EditorMarkUpAttribute(displayName: "poop definitions")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_geometry_section_block> poop_definitions;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "lighting environments")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<structure_lightmap_lighting_environment_block> lighting_environments;
        
        [EditorMarkUpAttribute(displayName: "geometry buckets")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_vertex_buffer_bucket_block> geometry_buckets;
        
        [EditorMarkUpAttribute(displayName: "instance render info")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_geometry_render_info_block> instance_render_info;
        
        [EditorMarkUpAttribute(displayName: "instance bucket refs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_instance_bucket_reference_block> instance_bucket_refs;
        
        [EditorMarkUpAttribute(displayName: "scenery object info")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_scenery_object_info_block> scenery_object_info;
        
        [EditorMarkUpAttribute(displayName: "scenery object bucket refs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_instance_bucket_reference_block> scenery_object_bucket_refs;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "normal")]
            normal = 0x0,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "unused")]
            unused = 0x1,
        }
    }
    #endregion
    
    #region structure_lightmap_palette_color_block
    [TagBlockDefinitionAttribute(cacheFileSize: 1024, tagFileSize: 1024, alignment: 64, maxBlockCount: 128)]
    public class structure_lightmap_palette_color_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "FIRST palette color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int first_palette_color;
        
        [PaddingAttribute(PaddingType.Skip, 1020)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region lightmap_geometry_section_block
    [TagBlockDefinitionAttribute(cacheFileSize: 84, tagFileSize: 84, alignment: 4, maxBlockCount: 512)]
    public class lightmap_geometry_section_block
    {
        
        [EditorMarkUpAttribute(displayName: "geometry info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public global_geometry_section_info_struct_block geometry_info;
        
        [EditorMarkUpAttribute(displayName: "geometry block info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public global_geometry_block_info_struct_block geometry_block_info;
        
        [EditorMarkUpAttribute(displayName: "cache data")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_geometry_section_cache_data_block> cache_data;
    }
    #endregion
    
    #region lightmap_geometry_section_cache_data_block
    [TagBlockDefinitionAttribute(cacheFileSize: 68, tagFileSize: 68, alignment: 4, maxBlockCount: 1)]
    public class lightmap_geometry_section_cache_data_block
    {
        
        [EditorMarkUpAttribute(displayName: "geometry")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public global_geometry_section_struct_block geometry;
    }
    #endregion
    
    #region lightmap_geometry_render_info_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1024)]
    public class lightmap_geometry_render_info_block
    {
        
        [EditorMarkUpAttribute(displayName: "bitmap index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short bitmap_index;
        
        [EditorMarkUpAttribute(displayName: "palette index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte palette_index;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region structure_lightmap_lighting_environment_block
    [TagBlockDefinitionAttribute(cacheFileSize: 220, tagFileSize: 220, alignment: 4, maxBlockCount: 1024)]
    public class structure_lightmap_lighting_environment_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "sample_point")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d sample_point;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "red coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float red_coefficient8;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "green coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float green_coefficient8;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient2;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient3;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient4;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient5;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient6;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient7;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "blue coefficient")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float blue_coefficient8;
        
        [EditorMarkUpAttribute(displayName: "mean incoming light direction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d mean_incoming_light_direction;
        
        [EditorMarkUpAttribute(displayName: "incoming light intensity")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealPoint3d incoming_light_intensity;
        
        [EditorMarkUpAttribute(displayName: "specular bitmap index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int specular_bitmap_index;
        
        [EditorMarkUpAttribute(displayName: "rotation axis")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d rotation_axis;
        
        [EditorMarkUpAttribute(displayName: "rotation speed")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float rotation_speed;
        
        [EditorMarkUpAttribute(displayName: "bump direction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d bump_direction;
        
        [EditorMarkUpAttribute(displayName: "color tint")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealColorRgb color_tint;
        
        [EditorMarkUpAttribute(displayName: "procedural overide")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_procedural_overide procedural_overide;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "procedural param0")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d procedural_param0;
        
        [EditorMarkUpAttribute(displayName: "procedural param1.xyz")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d procedural_param1_xyz;
        
        [EditorMarkUpAttribute(displayName: "procedural param1.w")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float procedural_param1_w;
        
        public enum e_procedural_overide : short
        {
            
            [EditorMarkUpAttribute(displayName: "no overide")]
            no_overide = 0x0,
            
            [EditorMarkUpAttribute(displayName: "CIE clear sky")]
            cie_clear_sky = 0x1,
            
            [EditorMarkUpAttribute(displayName: "CIE partly cloudy")]
            cie_partly_cloudy = 0x2,
            
            [EditorMarkUpAttribute(displayName: "CIE cloudy")]
            cie_cloudy = 0x3,
            
            [EditorMarkUpAttribute(displayName: "directional light")]
            directional_light = 0x4,
            
            [EditorMarkUpAttribute(displayName: "cone light")]
            cone_light = 0x5,
            
            [EditorMarkUpAttribute(displayName: "sphere light")]
            sphere_light = 0x6,
            
            [EditorMarkUpAttribute(displayName: "hemisphere light")]
            hemisphere_light = 0x7,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "leave me alone please")]
            leave_me_alone_please = 0x1,
        }
    }
    #endregion
    
    #region lightmap_vertex_buffer_bucket_block
    [TagBlockDefinitionAttribute(cacheFileSize: 56, tagFileSize: 56, alignment: 4, maxBlockCount: 1024)]
    public class lightmap_vertex_buffer_bucket_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "raw vertices")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_bucket_raw_vertex_block> raw_vertices;
        
        [EditorMarkUpAttribute(displayName: "geometry block info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public global_geometry_block_info_struct_block geometry_block_info;
        
        [EditorMarkUpAttribute(displayName: "cache data")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_vertex_buffer_bucket_cache_data_block> cache_data;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "incident direction")]
            incident_direction = 0x1,
            
            [EditorMarkUpAttribute(displayName: "color")]
            color = 0x2,
        }
    }
    #endregion
    
    #region lightmap_bucket_raw_vertex_block
    [TagBlockDefinitionAttribute(cacheFileSize: 24, tagFileSize: 24, alignment: 4, maxBlockCount: 32767)]
    public class lightmap_bucket_raw_vertex_block
    {
        
        [EditorMarkUpAttribute(displayName: "primary lightmap color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealColorRgb primary_lightmap_color;
        
        [EditorMarkUpAttribute(displayName: "primary lightmap incident direction")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealVector3d primary_lightmap_incident_direction;
    }
    #endregion
    
    #region lightmap_vertex_buffer_bucket_cache_data_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class lightmap_vertex_buffer_bucket_cache_data_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "vertex buffers")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<global_geometry_section_vertex_buffer_block> vertex_buffers;
    }
    #endregion
    
    #region lightmap_instance_bucket_reference_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 2000)]
    public class lightmap_instance_bucket_reference_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short flags;
        
        [EditorMarkUpAttribute(displayName: "bucket index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short bucket_index;
        
        [EditorMarkUpAttribute(displayName: "section offsets")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<lightmap_instance_bucket_section_offset_block> section_offsets;
    }
    #endregion
    
    #region lightmap_instance_bucket_section_offset_block
    [TagBlockDefinitionAttribute(cacheFileSize: 2, tagFileSize: 2, alignment: 4, maxBlockCount: 255)]
    public class lightmap_instance_bucket_section_offset_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "section offset")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short section_offset;
    }
    #endregion
    
    #region lightmap_scenery_object_info_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 2000)]
    public class lightmap_scenery_object_info_block
    {
        
        [EditorMarkUpAttribute(displayName: "unique ID")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int unique_id;
        
        [EditorMarkUpAttribute(displayName: "origin BSP index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short origin_bsp_index;
        
        [EditorMarkUpAttribute(displayName: "type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte type;
        
        [EditorMarkUpAttribute(displayName: "source")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte source;
        
        [EditorMarkUpAttribute(displayName: "render model checksum")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int render_model_checksum;
    }
    #endregion
}
