//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mutation.Halo.TagGroups.Tags
{
    using System;
    using System.IO;
    using Mutation.Halo;
    using Mutation.Halo.TagGroups;
    using Mutation.Halo.TagGroups.Attributes;
    using Mutation.Halo.TagGroups.FieldTypes;
    
    
    [TagGroupDefinitionAttribute(cacheFileSize: 36, tagFileSize: 60, version: 1, groupTag: "spas", parentGroupTag: "", name: "shader_pass", minimumVersion: EngineVersion.Halo2Xbox, maximumVersion: EngineVersion.Halo2Vista)]
    public class shader_pass_block
    {
        
        [EditorMarkUpAttribute(displayName: "Documentation")]
        [TagDataAttribute(maxSize: 65535, alignment: 4, maxSizeString: "UNSIGNED_SHORT_MAX")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData documentation;
        
        [EditorMarkUpAttribute(displayName: "Parameters")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_parameter_block> parameters;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "Implementations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_implementation_block> implementations;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.ReadOnly, displayName: "Postprocess Definition")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_definition_new_block> postprocess_definition;
    }
    
    #region shader_pass_parameter_block
    [TagBlockDefinitionAttribute(cacheFileSize: 44, tagFileSize: 44, alignment: 4, maxBlockCount: 64)]
    public class shader_pass_parameter_block
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "Name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id name;
        
        [EditorMarkUpAttribute(displayName: "Explanation")]
        [TagDataAttribute(maxSize: 65535, alignment: 4, maxSizeString: "UNSIGNED_SHORT_MAX")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData explanation;
        
        [EditorMarkUpAttribute(displayName: "Type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_type type;
        
        [EditorMarkUpAttribute(displayName: "Flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "Default Bitmap")]
        [TagReferenceAttribute("bitm")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference default_bitmap;
        
        [EditorMarkUpAttribute(displayName: "Default Const Value")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float default_const_value;
        
        [EditorMarkUpAttribute(displayName: "Default Const Color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public RealColorRgb default_const_color;
        
        [EditorMarkUpAttribute(displayName: "Source Extern")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_source_extern source_extern;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        public enum e_type : short
        {
            
            [EditorMarkUpAttribute(displayName: "Bitmap")]
            bitmap = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Value")]
            value = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Color")]
            color = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Switch")]
            @switch = 0x3,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "No Bitmap LOD")]
            no_bitmap_lod = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Required Parameter")]
            required_parameter = 0x2,
        }
        
        public enum e_source_extern : short
        {
            
            [EditorMarkUpAttribute(displayName: "None")]
            none = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "GLOBAL", unitsSpecifier: " Eye Forward Vector (z)")]
            global = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "GLOBAL", unitsSpecifier: " Eye Right Vector (x)")]
            global1 = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "GLOBAL", unitsSpecifier: " Eye Up Vector (y)")]
            global2 = 0x3,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Primary Color")]
            @object = 0x4,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Secondary Color")]
            object1 = 0x5,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Function Value")]
            object2 = 0x6,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Diffuse Color")]
            light = 0x7,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Specular Color")]
            light1 = 0x8,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Forward Vector (z)")]
            light2 = 0x9,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Right Vector (x)")]
            light3 = 0xa,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Up Vector (y)")]
            light4 = 0xb,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Object-Relative Forward Vector (z)")]
            light5 = 0xc,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Object-Relative Right Vector (x)")]
            light6 = 0xd,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "LIGHT", unitsSpecifier: " Object-Relative Up Vector (y)")]
            light7 = 0xe,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Object Falloff Value")]
            light8 = 0xf,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Object Gel Color")]
            light9 = 0x10,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Ambient Factor")]
            lightmap = 0x11,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Direct Vector")]
            lightmap1 = 0x12,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Direct Color")]
            lightmap2 = 0x13,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Indirect Vector")]
            lightmap3 = 0x14,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Indirect Color")]
            lightmap4 = 0x15,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Atmospheric Color")]
            old_fog = 0x16,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Atmospheric Max Density")]
            old_fog1 = 0x17,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Planar Color")]
            old_fog2 = 0x18,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Planar Max Density")]
            old_fog3 = 0x19,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Atmospheric Planar Blend Value")]
            old_fog4 = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Object Atmospheric Density")]
            old_fog5 = 0x1b,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Object Planar Density")]
            old_fog6 = 0x1c,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Object Color")]
            old_fog7 = 0x1d,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Object Density")]
            old_fog8 = 0x1e,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Model Alpha")]
            object3 = 0x1f,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Shadow Alpha")]
            object4 = 0x20,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Overbrighten Diffuse Shift")]
            light10 = 0x21,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Overbrighten Specular Shift")]
            light11 = 0x22,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Diffuse Contrast")]
            light12 = 0x23,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Specular Gel")]
            light13 = 0x24,
            
            [EditorMarkUpAttribute(displayName: "SHADER", unitsSpecifier: " Specular Type")]
            shader = 0x25,
            
            [EditorMarkUpAttribute(displayName: "pad3")]
            pad3 = 0x26,
            
            [EditorMarkUpAttribute(displayName: "pad3-scale")]
            pad3_scale = 0x27,
            
            [EditorMarkUpAttribute(displayName: "Pad Thai")]
            pad_thai = 0x28,
            
            [EditorMarkUpAttribute(displayName: "Taco Salad")]
            taco_salad = 0x29,
            
            [EditorMarkUpAttribute(displayName: "Anisotropic Binormal")]
            anisotropic_binormal = 0x2a,
            
            [EditorMarkUpAttribute(displayName: "OBJECT LIGHT", unitsSpecifier: " Shadow Fade")]
            object_light = 0x2b,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Shadow Fade")]
            light14 = 0x2c,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Atmospheric Density")]
            old_fog9 = 0x2d,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Planar Density")]
            old_fog10 = 0x2e,
            
            [EditorMarkUpAttribute(displayName: "OLD FOG", unitsSpecifier: " Planar Density Invert")]
            old_fog11 = 0x2f,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Change Color Tertiary")]
            object5 = 0x30,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Change Color Quaternary")]
            object6 = 0x31,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Specular Color")]
            lightmap5 = 0x32,
            
            [EditorMarkUpAttribute(displayName: "SHADER", unitsSpecifier: " Lightmap Type")]
            shader1 = 0x33,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Ambient Color")]
            lightmap6 = 0x34,
            
            [EditorMarkUpAttribute(displayName: "SHADER", unitsSpecifier: " Lightmap Specular Brightness")]
            shader2 = 0x35,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Lightmap Shadow Darkening")]
            global3 = 0x36,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Env Brightness")]
            lightmap7 = 0x37,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Max Density")]
            fog = 0x38,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Color")]
            fog1 = 0x39,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Color Adj")]
            fog2 = 0x3a,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Planar Blend")]
            fog3 = 0x3b,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Planar Blend Adj Inv")]
            fog4 = 0x3c,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Planar Blend Adj")]
            fog5 = 0x3d,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Secondary Max Density")]
            fog6 = 0x3e,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Secondary Color")]
            fog7 = 0x3f,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Secondary Color Adj")]
            fog8 = 0x40,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Secondary Blend")]
            fog9 = 0x41,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Secondary Blend Adj Inv")]
            fog10 = 0x42,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Atmospheric Secondary Blend Adj")]
            fog11 = 0x43,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Sky Density")]
            fog12 = 0x44,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Sky Color")]
            fog13 = 0x45,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Sky Color Adj")]
            fog14 = 0x46,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Max Density")]
            fog15 = 0x47,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Color")]
            fog16 = 0x48,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Color Adj")]
            fog17 = 0x49,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Eye Density")]
            fog18 = 0x4a,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Eye Density Adj Inv")]
            fog19 = 0x4b,
            
            [EditorMarkUpAttribute(displayName: "FOG", unitsSpecifier: " Planar Eye Density Adj")]
            fog20 = 0x4c,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Waypoint Primary Color")]
            hud = 0x4d,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Waypoint Secondary Color")]
            hud1 = 0x4e,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP", unitsSpecifier: " Object Specular Color Times One Half")]
            lightmap8 = 0x4f,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Specular Enabled")]
            light15 = 0x50,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Definition Specular Enabled")]
            light16 = 0x51,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Active Camo Amount")]
            object7 = 0x52,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Super Camo Amount")]
            object8 = 0x53,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Custom Color 1")]
            hud2 = 0x54,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Custom Color 2")]
            hud3 = 0x55,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Custom Color 3")]
            hud4 = 0x56,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Custom Color 4")]
            hud5 = 0x57,
            
            [EditorMarkUpAttribute(displayName: "OBJECT", unitsSpecifier: " Active Camo RGB")]
            object9 = 0x58,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "FOG", unitsSpecifier: " Patchy Plane n(xyz)")]
            fog21 = 0x59,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "FOG", unitsSpecifier: " Patchy Plane d(w)")]
            fog22 = 0x5a,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Global Fade")]
            hud6 = 0x5b,
            
            [EditorMarkUpAttribute(displayName: "SCREEN EFFECT", unitsSpecifier: " Primary")]
            screen_effect = 0x5c,
            
            [EditorMarkUpAttribute(displayName: "SCREEN EFFECT", unitsSpecifier: " Secondary")]
            screen_effect1 = 0x5d,
        }
    }
    #endregion
    
    #region shader_pass_implementation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 116, tagFileSize: 116, alignment: 4, maxBlockCount: 32)]
    public class shader_pass_implementation_block
    {
        
        [EditorMarkUpAttribute(displayName: "Flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "Textures")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_texture_block> textures;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField0 = new Explanation(name: "VERTEX SHADER");
        
        [EditorMarkUpAttribute(displayName: "Vertex Shader")]
        [TagReferenceAttribute("vrtx")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference vertex_shader;
        
        [EditorMarkUpAttribute(displayName: "vs Constants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_vertex_shader_constant_block> vs_constants;
        
        [PaddingAttribute(PaddingType.Useless, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "Pixel Shader Code [NO LONGER USED]")]
        [TagDataAttribute(maxSize: 65535, alignment: 4, maxSizeString: "UNSIGNED_SHORT_MAX")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData pixel_shader_code__no_longer_used;
        
        [PaddingAttribute(PaddingType.Useless, 12)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public Explanation _explanationField1 = new Explanation(name: "STATE");
        
        [EditorMarkUpAttribute(displayName: "channels")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_channels channels;
        
        [EditorMarkUpAttribute(displayName: "alpha-blend")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_alpha_blend alpha_blend;
        
        [EditorMarkUpAttribute(displayName: "depth")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_depth depth;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "channel state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_channels_state_block> channel_state;
        
        [EditorMarkUpAttribute(displayName: "alpha-blend state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_alpha_blend_state_block> alpha_blend_state;
        
        [EditorMarkUpAttribute(displayName: "alpha-test state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_alpha_test_state_block> alpha_test_state;
        
        [EditorMarkUpAttribute(displayName: "depth state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_depth_state_block> depth_state;
        
        [EditorMarkUpAttribute(displayName: "cull state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_cull_state_block> cull_state;
        
        [EditorMarkUpAttribute(displayName: "fill state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_fill_state_block> fill_state;
        
        [EditorMarkUpAttribute(displayName: "misc state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_misc_state_block> misc_state;
        
        [EditorMarkUpAttribute(displayName: "constants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_state_constant_block> constants;
        
        [EditorMarkUpAttribute(displayName: "Pixel Shader")]
        [TagReferenceAttribute("pixl")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference pixel_shader;
        
        [PaddingAttribute(PaddingType.Useless, 224)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "Delete from Cache File")]
            delete_from_cache_file = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Critical")]
            critical = 0x2,
        }
        
        public enum e_channels : short
        {
            
            [EditorMarkUpAttribute(displayName: "all")]
            all = 0x0,
            
            [EditorMarkUpAttribute(displayName: "color only")]
            color_only = 0x1,
            
            [EditorMarkUpAttribute(displayName: "alpha only")]
            alpha_only = 0x2,
            
            [EditorMarkUpAttribute(displayName: "custom")]
            custom = 0x3,
        }
        
        public enum e_alpha_blend : short
        {
            
            [EditorMarkUpAttribute(displayName: "disabled")]
            disabled = 0x0,
            
            [EditorMarkUpAttribute(displayName: "add")]
            add = 0x1,
            
            [EditorMarkUpAttribute(displayName: "multiply")]
            multiply = 0x2,
            
            [EditorMarkUpAttribute(displayName: "add src times dstalpha")]
            add_src_times_dstalpha = 0x3,
            
            [EditorMarkUpAttribute(displayName: "add src times srcalpha")]
            add_src_times_srcalpha = 0x4,
            
            [EditorMarkUpAttribute(displayName: "add dst times srcalpha inverse")]
            add_dst_times_srcalpha_inverse = 0x5,
            
            [EditorMarkUpAttribute(displayName: "alpha blend")]
            alpha_blend = 0x6,
            
            [EditorMarkUpAttribute(displayName: "custom")]
            custom = 0x7,
        }
        
        public enum e_depth : short
        {
            
            [EditorMarkUpAttribute(displayName: "disabled")]
            disabled = 0x0,
            
            [EditorMarkUpAttribute(displayName: "default opaque")]
            default_opaque = 0x1,
            
            [EditorMarkUpAttribute(displayName: "default opaque write")]
            default_opaque_write = 0x2,
            
            [EditorMarkUpAttribute(displayName: "default transparent")]
            default_transparent = 0x3,
            
            [EditorMarkUpAttribute(displayName: "custom")]
            custom = 0x4,
        }
    }
    #endregion
    
    #region shader_pass_texture_block
    [TagBlockDefinitionAttribute(cacheFileSize: 60, tagFileSize: 60, alignment: 4, maxBlockCount: 8)]
    public class shader_pass_texture_block
    {
        
        [EditorMarkUpAttribute(displayName: "Source Parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id source_parameter;
        
        [EditorMarkUpAttribute(displayName: "Source Extern")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_source_extern source_extern;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Skip, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "Mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mode mode;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [EditorMarkUpAttribute(displayName: "Dot Mapping")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_dot_mapping dot_mapping;
        
        [EditorMarkUpAttribute(displayName: "Input Stage", unitsSpecifier: "[0,3]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short input_stage;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "address state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_texture_state_address_state_block> address_state;
        
        [EditorMarkUpAttribute(displayName: "filter state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_texture_state_filter_state_block> filter_state;
        
        [EditorMarkUpAttribute(displayName: "kill state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_texture_state_kill_state_block> kill_state;
        
        [EditorMarkUpAttribute(displayName: "misc state")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_texture_state_misc_state_block> misc_state;
        
        [EditorMarkUpAttribute(displayName: "constants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_texture_state_constant_block> constants;
        
        public enum e_source_extern : short
        {
            
            [EditorMarkUpAttribute(displayName: "None")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Vector Normalization")]
            global = 0x1,
            
            [EditorMarkUpAttribute(displayName: "UNUSED")]
            unused = 0x2,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Target texaccum")]
            global1 = 0x3,
            
            [EditorMarkUpAttribute(displayName: "UNUSED")]
            unused1 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Target Frame Buffer")]
            global2 = 0x5,
            
            [EditorMarkUpAttribute(displayName: "GLOBA", unitsSpecifier: " Target z")]
            globa = 0x6,
            
            [EditorMarkUpAttribute(displayName: "UNUSED")]
            unused2 = 0x7,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Target Shadow")]
            global3 = 0x8,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Falloff")]
            light = 0x9,
            
            [EditorMarkUpAttribute(displayName: "LIGHT", unitsSpecifier: " Gel")]
            light1 = 0xa,
            
            [EditorMarkUpAttribute(displayName: "LIGHTMAP")]
            lightmap = 0xb,
            
            [EditorMarkUpAttribute(displayName: "UNUSED")]
            unused3 = 0xc,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Shadow Buffer")]
            global4 = 0xd,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Gradient Separate")]
            global5 = 0xe,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Gradient Product")]
            global6 = 0xf,
            
            [EditorMarkUpAttribute(displayName: "HUD", unitsSpecifier: " Bitmap")]
            hud = 0x10,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " active camo")]
            global7 = 0x11,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Texture Camera")]
            global8 = 0x12,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Water Reflection")]
            global9 = 0x13,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Water Refraction")]
            global10 = 0x14,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Aux 1")]
            global11 = 0x15,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Aux 2")]
            global12 = 0x16,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Particle Distortion")]
            global13 = 0x17,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Convolution 1")]
            global14 = 0x18,
            
            [EditorMarkUpAttribute(displayName: "GLOBAL", unitsSpecifier: " Convolution 2")]
            global15 = 0x19,
            
            [EditorMarkUpAttribute(displayName: "SHADER", unitsSpecifier: " Active Camo Bump")]
            shader = 0x1a,
            
            [EditorMarkUpAttribute(displayName: "FIRST PERSON", unitsSpecifier: " Scope")]
            first_person = 0x1b,
        }
        
        public enum e_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "2D")]
            _2d = 0x0,
            
            [EditorMarkUpAttribute(displayName: "3D")]
            _3d = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Cube Map")]
            cube_map = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Passthrough")]
            passthrough = 0x3,
            
            [EditorMarkUpAttribute(displayName: "texkill")]
            texkill = 0x4,
            
            [EditorMarkUpAttribute(displayName: "2D Dependent AR")]
            _2d_dependent_ar = 0x5,
            
            [EditorMarkUpAttribute(displayName: "2D Dependent GB")]
            _2d_dependent_gb = 0x6,
            
            [EditorMarkUpAttribute(displayName: "2D bumpenv")]
            _2d_bumpenv = 0x7,
            
            [EditorMarkUpAttribute(displayName: "2D bumpenv Luminance")]
            _2d_bumpenv_luminance = 0x8,
            
            [EditorMarkUpAttribute(displayName: "3D BRDF")]
            _3d_brdf = 0x9,
            
            [EditorMarkUpAttribute(displayName: "Dot Product")]
            dot_product = 0xa,
            
            [EditorMarkUpAttribute(displayName: "Dot Product 2D")]
            dot_product_2d = 0xb,
            
            [EditorMarkUpAttribute(displayName: "Dot Product 3D")]
            dot_product_3d = 0xc,
            
            [EditorMarkUpAttribute(displayName: "Dot Product Cube Map")]
            dot_product_cube_map = 0xd,
            
            [EditorMarkUpAttribute(displayName: "Dot Product ZW")]
            dot_product_zw = 0xe,
            
            [EditorMarkUpAttribute(displayName: "Dot Reflect Diffuse")]
            dot_reflect_diffuse = 0xf,
            
            [EditorMarkUpAttribute(displayName: "Dot Reflect Specular")]
            dot_reflect_specular = 0x10,
            
            [EditorMarkUpAttribute(displayName: "Dot Reflect Specular Const")]
            dot_reflect_specular_const = 0x11,
            
            [EditorMarkUpAttribute(displayName: "None")]
            none = 0x12,
        }
        
        public enum e_dot_mapping : short
        {
            
            [EditorMarkUpAttribute(displayName: "0 to 1")]
            _0_to_1 = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Signed D3D")]
            signed_d3d = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Signed GL")]
            signed_gl = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Signed NV")]
            signed_nv = 0x3,
            
            [EditorMarkUpAttribute(displayName: "HILO", unitsSpecifier: " 0 to 1")]
            hilo = 0x4,
            
            [EditorMarkUpAttribute(displayName: "HILO", unitsSpecifier: " Signed Hemisphere D3D")]
            hilo1 = 0x5,
            
            [EditorMarkUpAttribute(displayName: "HILO", unitsSpecifier: " Signed Hemisphere GL")]
            hilo2 = 0x6,
            
            [EditorMarkUpAttribute(displayName: "HILO", unitsSpecifier: " Signed Hemisphere NV")]
            hilo3 = 0x7,
        }
    }
    #endregion
    
    #region shader_texture_state_address_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class shader_texture_state_address_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "U address mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_u_address_mode u_address_mode;
        
        [EditorMarkUpAttribute(displayName: "V address mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_u_address_mode v_address_mode;
        
        [EditorMarkUpAttribute(displayName: "W address mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_u_address_mode w_address_mode;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        public enum e_u_address_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "wrap")]
            wrap = 0x0,
            
            [EditorMarkUpAttribute(displayName: "mirror")]
            mirror = 0x1,
            
            [EditorMarkUpAttribute(displayName: "clamp")]
            clamp = 0x2,
            
            [EditorMarkUpAttribute(displayName: "border")]
            border = 0x3,
            
            [EditorMarkUpAttribute(displayName: "clamp to edge")]
            clamp_to_edge = 0x4,
        }
    }
    #endregion
    
    #region shader_texture_state_filter_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1)]
    public class shader_texture_state_filter_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "mag filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mag_filter mag_filter;
        
        [EditorMarkUpAttribute(displayName: "min filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mag_filter min_filter;
        
        [EditorMarkUpAttribute(displayName: "mip filter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mag_filter mip_filter;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "mipmap bias")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float mipmap_bias;
        
        [EditorMarkUpAttribute(displayName: "max mipmap index", tooltipText: "0 means all mipmap levels are used")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short max_mipmap_index;
        
        [EditorMarkUpAttribute(displayName: "anisotropy")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_anisotropy anisotropy;
        
        public enum e_mag_filter : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "point sampled")]
            point_sampled = 0x1,
            
            [EditorMarkUpAttribute(displayName: "linear")]
            linear = 0x2,
            
            [EditorMarkUpAttribute(displayName: "anisotropic")]
            anisotropic = 0x3,
            
            [EditorMarkUpAttribute(displayName: "quincunx")]
            quincunx = 0x4,
            
            [EditorMarkUpAttribute(displayName: "gaussian cubic")]
            gaussian_cubic = 0x5,
        }
        
        public enum e_anisotropy : short
        {
            
            [EditorMarkUpAttribute(displayName: "non anisotropic")]
            non_anisotropic = 0x0,
            
            [EditorMarkUpAttribute(displayName: "2-tap")]
            _2_tap = 0x1,
            
            [EditorMarkUpAttribute(displayName: "3-tap")]
            _3_tap = 0x2,
            
            [EditorMarkUpAttribute(displayName: "4-tap")]
            _4_tap = 0x3,
        }
    }
    #endregion
    
    #region shader_texture_state_kill_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 1)]
    public class shader_texture_state_kill_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "colorkey mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_colorkey_mode colorkey_mode;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [EditorMarkUpAttribute(displayName: "colorkey color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorRgb colorkey_color;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "alpha kill")]
            alpha_kill = 0x1,
        }
        
        public enum e_colorkey_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "disabled")]
            disabled = 0x0,
            
            [EditorMarkUpAttribute(displayName: "zero alpha")]
            zero_alpha = 0x1,
            
            [EditorMarkUpAttribute(displayName: "zero ARGB")]
            zero_argb = 0x2,
            
            [EditorMarkUpAttribute(displayName: "kill")]
            kill = 0x3,
        }
    }
    #endregion
    
    #region shader_texture_state_misc_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class shader_texture_state_misc_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "component sign flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_component_sign_flags component_sign_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "border color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb border_color;
        
        [FlagsAttribute()]
        public enum b_component_sign_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "R signed")]
            r_signed = 0x1,
            
            [EditorMarkUpAttribute(displayName: "G signed")]
            g_signed = 0x2,
            
            [EditorMarkUpAttribute(displayName: "B signed")]
            b_signed = 0x4,
            
            [EditorMarkUpAttribute(displayName: "A signed")]
            a_signed = 0x8,
        }
    }
    #endregion
    
    #region shader_texture_state_constant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 10)]
    public class shader_texture_state_constant_block
    {
        
        [EditorMarkUpAttribute(displayName: "source parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id source_parameter;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "constant")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_constant constant;
        
        public enum e_constant : short
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "mipmap bias (value")]
            mipmap_bias__value = 0x0,
            
            [EditorMarkUpAttribute(displayName: "colorkey color")]
            colorkey_color = 0x1,
            
            [EditorMarkUpAttribute(displayName: "border color")]
            border_color = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "border alpha (value")]
            border_alpha__value = 0x3,
            
            [EditorMarkUpAttribute(displayName: "bumpenv mat[0][0]")]
            bumpenv_mat_0__0 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "bumpenv mat[0][1]")]
            bumpenv_mat_0__1 = 0x5,
            
            [EditorMarkUpAttribute(displayName: "bumpenv mat[1][0]")]
            bumpenv_mat_1__0 = 0x6,
            
            [EditorMarkUpAttribute(displayName: "bumpenv mat[1][1]")]
            bumpenv_mat_1__1 = 0x7,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "bumpenv lum scale (value")]
            bumpenv_lum_scale__value = 0x8,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "bumpenv lum offset (value")]
            bumpenv_lum_offset__value = 0x9,
        }
    }
    #endregion
    
    #region shader_pass_vertex_shader_constant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 32)]
    public class shader_pass_vertex_shader_constant_block
    {
        
        [EditorMarkUpAttribute(displayName: "Source Parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id source_parameter;
        
        [EditorMarkUpAttribute(displayName: "Scale by Texture Stage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_scale_by_texture_stage scale_by_texture_stage;
        
        [EditorMarkUpAttribute(displayName: "Register Bank")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_register_bank register_bank;
        
        [EditorMarkUpAttribute(displayName: "Register Index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short register_index;
        
        [EditorMarkUpAttribute(displayName: "Component Mask")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_component_mask component_mask;
        
        public enum e_scale_by_texture_stage : short
        {
            
            [EditorMarkUpAttribute(displayName: "None")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Stage 0")]
            stage_0 = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Stage 1")]
            stage_1 = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Stage 2")]
            stage_2 = 0x3,
            
            [EditorMarkUpAttribute(displayName: "Stage 3")]
            stage_3 = 0x4,
        }
        
        public enum e_register_bank : short
        {
            
            [EditorMarkUpAttribute(displayName: "Vn [0,15]")]
            vn__0_15 = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Cn [0,12]")]
            cn__0_12 = 0x1,
        }
        
        public enum e_component_mask : short
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "x (value")]
            x__value = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "y (value")]
            y__value = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "z (value")]
            z__value = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "w (value")]
            w__value = 0x3,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyz/rgb (color")]
            xyz_rgb__color = 0x4,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "x (uniform scale")]
            x__uniform_scale = 0x5,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "y (uniform scale")]
            y__uniform_scale = 0x6,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "z (uniform scale")]
            z__uniform_scale = 0x7,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "w (uniform scale")]
            w__uniform_scale = 0x8,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xy (2D scale")]
            xy__2d_scale = 0x9,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "zw (2D scale")]
            zw__2d_scale = 0xa,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xy (2D translation")]
            xy__2d_translation = 0xb,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "zw (2D translation")]
            zw__2d_translation = 0xc,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyzw (2D simple xform")]
            xyzw__2d_simple_xform = 0xd,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyw Row 1 (2D affine xform")]
            xyw_row_1__2d_affine_xform = 0xe,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyw Row 2 (2D affine xform")]
            xyw_row_2__2d_affine_xform = 0xf,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyz (3D scale")]
            xyz__3d_scale = 0x10,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyz (3D translation")]
            xyz__3d_translation = 0x11,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyzw Row 1 (3D affine xform")]
            xyzw_row_1__3d_affine_xform = 0x12,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyzw Row 2 (3D affine xform")]
            xyzw_row_2__3d_affine_xform = 0x13,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyzw Row 3 (3D affine xform")]
            xyzw_row_3__3d_affine_xform = 0x14,
        }
    }
    #endregion
    
    #region shader_state_channels_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class shader_state_channels_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "R")]
            r = 0x1,
            
            [EditorMarkUpAttribute(displayName: "G")]
            g = 0x2,
            
            [EditorMarkUpAttribute(displayName: "B")]
            b = 0x4,
            
            [EditorMarkUpAttribute(displayName: "A")]
            a = 0x8,
        }
    }
    #endregion
    
    #region shader_state_alpha_blend_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1)]
    public class shader_state_alpha_blend_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "blend function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_blend_function blend_function;
        
        [EditorMarkUpAttribute(displayName: "blend src factor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_blend_src_factor blend_src_factor;
        
        [EditorMarkUpAttribute(displayName: "blend dst factor")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_blend_src_factor blend_dst_factor;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "blend color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorArgb blend_color;
        
        [EditorMarkUpAttribute(displayName: "logic-op flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_logic_op_flags logic_op_flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        public enum e_blend_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "add")]
            add = 0x0,
            
            [EditorMarkUpAttribute(displayName: "subtract")]
            subtract = 0x1,
            
            [EditorMarkUpAttribute(displayName: "reverse subtract")]
            reverse_subtract = 0x2,
            
            [EditorMarkUpAttribute(displayName: "min")]
            min = 0x3,
            
            [EditorMarkUpAttribute(displayName: "max")]
            max = 0x4,
            
            [EditorMarkUpAttribute(displayName: "add signed")]
            add_signed = 0x5,
            
            [EditorMarkUpAttribute(displayName: "reverse subtract signed")]
            reverse_subtract_signed = 0x6,
            
            [EditorMarkUpAttribute(displayName: "logic-op")]
            logic_op = 0x7,
        }
        
        public enum e_blend_src_factor : short
        {
            
            [EditorMarkUpAttribute(displayName: "zero")]
            zero = 0x0,
            
            [EditorMarkUpAttribute(displayName: "one")]
            one = 0x1,
            
            [EditorMarkUpAttribute(displayName: "srccolor")]
            srccolor = 0x2,
            
            [EditorMarkUpAttribute(displayName: "srccolor inverse")]
            srccolor_inverse = 0x3,
            
            [EditorMarkUpAttribute(displayName: "srcalpha")]
            srcalpha = 0x4,
            
            [EditorMarkUpAttribute(displayName: "srcalpha inverse")]
            srcalpha_inverse = 0x5,
            
            [EditorMarkUpAttribute(displayName: "dstcolor")]
            dstcolor = 0x6,
            
            [EditorMarkUpAttribute(displayName: "dstcolor inverse")]
            dstcolor_inverse = 0x7,
            
            [EditorMarkUpAttribute(displayName: "dstalpha")]
            dstalpha = 0x8,
            
            [EditorMarkUpAttribute(displayName: "dstalpha inverse")]
            dstalpha_inverse = 0x9,
            
            [EditorMarkUpAttribute(displayName: "srcalpha saturate")]
            srcalpha_saturate = 0xa,
            
            [EditorMarkUpAttribute(displayName: "constant color")]
            constant_color = 0xb,
            
            [EditorMarkUpAttribute(displayName: "constant color inverse")]
            constant_color_inverse = 0xc,
            
            [EditorMarkUpAttribute(displayName: "constant alpha")]
            constant_alpha = 0xd,
            
            [EditorMarkUpAttribute(displayName: "constant alpha inverse")]
            constant_alpha_inverse = 0xe,
        }
        
        [FlagsAttribute()]
        public enum b_logic_op_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "src=0 dst=0")]
            src_0_dst_0 = 0x1,
            
            [EditorMarkUpAttribute(displayName: "src=0 dst=1")]
            src_0_dst_1 = 0x2,
            
            [EditorMarkUpAttribute(displayName: "src=1 dst=0")]
            src_1_dst_0 = 0x4,
            
            [EditorMarkUpAttribute(displayName: "src=1 dst=1")]
            src_1_dst_1 = 0x8,
        }
    }
    #endregion
    
    #region shader_state_alpha_test_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class shader_state_alpha_test_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "alpha compare function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_alpha_compare_function alpha_compare_function;
        
        [EditorMarkUpAttribute(displayName: "alpha-test ref", unitsSpecifier: "[0,255]")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short alpha_test_ref;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "alpha-test enabled")]
            alpha_test_enabled = 0x1,
            
            [EditorMarkUpAttribute(displayName: "sample-alpha to coverage")]
            sample_alpha_to_coverage = 0x2,
            
            [EditorMarkUpAttribute(displayName: "sample-alpha to one")]
            sample_alpha_to_one = 0x4,
        }
        
        public enum e_alpha_compare_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "never")]
            never = 0x0,
            
            [EditorMarkUpAttribute(displayName: "less")]
            less = 0x1,
            
            [EditorMarkUpAttribute(displayName: "equal")]
            equal = 0x2,
            
            [EditorMarkUpAttribute(displayName: "less or equal")]
            less_or_equal = 0x3,
            
            [EditorMarkUpAttribute(displayName: "greater")]
            greater = 0x4,
            
            [EditorMarkUpAttribute(displayName: "not equal")]
            not_equal = 0x5,
            
            [EditorMarkUpAttribute(displayName: "greater or equal")]
            greater_or_equal = 0x6,
            
            [EditorMarkUpAttribute(displayName: "always")]
            always = 0x7,
        }
    }
    #endregion
    
    #region shader_state_depth_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1)]
    public class shader_state_depth_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mode mode;
        
        [EditorMarkUpAttribute(displayName: "depth compare function")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_depth_compare_function depth_compare_function;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "depth bias slope scale")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float depth_bias_slope_scale;
        
        [EditorMarkUpAttribute(displayName: "depth bias")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float depth_bias;
        
        public enum e_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "use Z")]
            use_z = 0x0,
            
            [EditorMarkUpAttribute(displayName: "use W")]
            use_w = 0x1,
        }
        
        public enum e_depth_compare_function : short
        {
            
            [EditorMarkUpAttribute(displayName: "never")]
            never = 0x0,
            
            [EditorMarkUpAttribute(displayName: "less")]
            less = 0x1,
            
            [EditorMarkUpAttribute(displayName: "equal")]
            equal = 0x2,
            
            [EditorMarkUpAttribute(displayName: "less or equal")]
            less_or_equal = 0x3,
            
            [EditorMarkUpAttribute(displayName: "greater")]
            greater = 0x4,
            
            [EditorMarkUpAttribute(displayName: "not equal")]
            not_equal = 0x5,
            
            [EditorMarkUpAttribute(displayName: "greater or equal")]
            greater_or_equal = 0x6,
            
            [EditorMarkUpAttribute(displayName: "always")]
            always = 0x7,
        }
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "depth write")]
            depth_write = 0x1,
            
            [EditorMarkUpAttribute(displayName: "offset points")]
            offset_points = 0x2,
            
            [EditorMarkUpAttribute(displayName: "offset lines")]
            offset_lines = 0x4,
            
            [EditorMarkUpAttribute(displayName: "offset triangles")]
            offset_triangles = 0x8,
            
            [EditorMarkUpAttribute(displayName: "clip control don\'t cull primitive")]
            clip_control_don_t_cull_primitive = 0x10,
            
            [EditorMarkUpAttribute(displayName: "clip control clamp")]
            clip_control_clamp = 0x20,
            
            [EditorMarkUpAttribute(displayName: "clip control ignore W sign")]
            clip_control_ignore_w_sign = 0x40,
        }
    }
    #endregion
    
    #region shader_state_cull_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1)]
    public class shader_state_cull_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_mode mode;
        
        [EditorMarkUpAttribute(displayName: "front face")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_front_face front_face;
        
        public enum e_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "none")]
            none = 0x0,
            
            [EditorMarkUpAttribute(displayName: "CW")]
            cw = 0x1,
            
            [EditorMarkUpAttribute(displayName: "CCW")]
            ccw = 0x2,
        }
        
        public enum e_front_face : short
        {
            
            [EditorMarkUpAttribute(displayName: "CW")]
            cw = 0x0,
            
            [EditorMarkUpAttribute(displayName: "CCW")]
            ccw = 0x1,
        }
    }
    #endregion
    
    #region shader_state_fill_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 12, tagFileSize: 12, alignment: 4, maxBlockCount: 1)]
    public class shader_state_fill_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "fill mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_fill_mode fill_mode;
        
        [EditorMarkUpAttribute(displayName: "back fill mode")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_fill_mode back_fill_mode;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "line width")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public float line_width;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "flat shading")]
            flat_shading = 0x1,
            
            [EditorMarkUpAttribute(displayName: "edge antialiasing")]
            edge_antialiasing = 0x2,
        }
        
        public enum e_fill_mode : short
        {
            
            [EditorMarkUpAttribute(displayName: "solid")]
            solid = 0x0,
            
            [EditorMarkUpAttribute(displayName: "wireframe")]
            wireframe = 0x1,
            
            [EditorMarkUpAttribute(displayName: "points")]
            points = 0x2,
        }
    }
    #endregion
    
    #region shader_state_misc_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 1)]
    public class shader_state_misc_state_block
    {
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "fog color")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public ColorRgb fog_color;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "YUV to RGB")]
            yuv_to_rgb = 0x1,
            
            [EditorMarkUpAttribute(displayName: "16-bit dither")]
            _16_bit_dither = 0x2,
            
            [EditorMarkUpAttribute(displayName: "32-bit DXT1 noise")]
            _32_bit_dxt1_noise = 0x4,
        }
    }
    #endregion
    
    #region shader_state_constant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 8, tagFileSize: 8, alignment: 4, maxBlockCount: 7)]
    public class shader_state_constant_block
    {
        
        [EditorMarkUpAttribute(displayName: "source parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id source_parameter;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.BlockName, displayName: "constant")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_constant constant;
        
        public enum e_constant : short
        {
            
            [EditorMarkUpAttribute(displayName: "constant blend color")]
            constant_blend_color = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "constant blend alpha (value")]
            constant_blend_alpha__value = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "alpha-test ref (value")]
            alpha_test_ref__value = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "depth bias slope scale (value")]
            depth_bias_slope_scale__value = 0x3,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "depth bias (value")]
            depth_bias__value = 0x4,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "line width (value")]
            line_width__value = 0x5,
            
            [EditorMarkUpAttribute(displayName: "fog color")]
            fog_color = 0x6,
        }
    }
    #endregion
    
    #region shader_pass_postprocess_definition_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 88, tagFileSize: 88, alignment: 4, maxBlockCount: 1)]
    public class shader_pass_postprocess_definition_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "implementations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_implementation_new_block> implementations;
        
        [EditorMarkUpAttribute(displayName: "textures")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_texture_new_block> textures;
        
        [EditorMarkUpAttribute(displayName: "render states")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<render_state_block> render_states;
        
        [EditorMarkUpAttribute(displayName: "texture states")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_texture_state_block> texture_states;
        
        [EditorMarkUpAttribute(displayName: "ps fragments")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_fragment_block> ps_fragments;
        
        [EditorMarkUpAttribute(displayName: "ps permutations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_permutation_new_block> ps_permutations;
        
        [EditorMarkUpAttribute(displayName: "ps combiners")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_combiner_block> ps_combiners;
        
        [EditorMarkUpAttribute(displayName: "externs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_extern_new_block> externs;
        
        [EditorMarkUpAttribute(displayName: "constants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_constant_new_block> constants;
        
        [EditorMarkUpAttribute(displayName: "constant info")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_constant_info_new_block> constant_info;
        
        [EditorMarkUpAttribute(displayName: "old implementations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_pass_postprocess_implementation_block> old_implementations;
    }
    #endregion
    
    #region shader_pass_postprocess_implementation_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 330, tagFileSize: 330, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_implementation_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "textures")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block textures;
        
        [EditorMarkUpAttribute(displayName: "render states")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block render_states;
        
        [EditorMarkUpAttribute(displayName: "texture states")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block texture_states;
        
        [PaddingAttribute(PaddingType.Skip, 240)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "ps fragments")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block ps_fragments;
        
        [EditorMarkUpAttribute(displayName: "ps permutations")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block ps_permutations;
        
        [EditorMarkUpAttribute(displayName: "ps combiners")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block ps_combiners;
        
        [EditorMarkUpAttribute(displayName: "vertex shader")]
        [TagReferenceAttribute("vrtx")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference vertex_shader;
        
        [PaddingAttribute(PaddingType.Skip, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Skip, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [EditorMarkUpAttribute(displayName: "default render states")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block default_render_states;
        
        [EditorMarkUpAttribute(displayName: "render state externs")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block render_state_externs;
        
        [EditorMarkUpAttribute(displayName: "texture state externs")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block texture_state_externs;
        
        [EditorMarkUpAttribute(displayName: "pixel constant externs")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block pixel_constant_externs;
        
        [EditorMarkUpAttribute(displayName: "vertex constant externs")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block vertex_constant_externs;
        
        [EditorMarkUpAttribute(displayName: "ps constants")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block ps_constants;
        
        [EditorMarkUpAttribute(displayName: "vs constants")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block vs_constants;
        
        [EditorMarkUpAttribute(displayName: "pixel constant info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block pixel_constant_info;
        
        [EditorMarkUpAttribute(displayName: "vertex constant info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block vertex_constant_info;
        
        [EditorMarkUpAttribute(displayName: "render state info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block render_state_info;
        
        [EditorMarkUpAttribute(displayName: "texture state info")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block texture_state_info;
        
        [EditorMarkUpAttribute(displayName: "pixel shader")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_postprocess_pixel_shader> pixel_shader;
        
        [EditorMarkUpAttribute(displayName: "pixel shader switch extern map")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_extern_map_block> pixel_shader_switch_extern_map;
        
        [EditorMarkUpAttribute(displayName: "pixel shader index block")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_index_block> pixel_shader_index_block;
    }
    #endregion
    
    #region shader_postprocess_pixel_shader
    [TagBlockDefinitionAttribute(cacheFileSize: 44, tagFileSize: 44, alignment: 4, maxBlockCount: 100)]
    public class shader_postprocess_pixel_shader
    {
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "pixel shader handle (runtime")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int pixel_shader_handle__runtime;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "pixel shader handle (runtime")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int pixel_shader_handle__runtime1;
        
        [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "pixel shader handle (runtime")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int pixel_shader_handle__runtime2;
        
        [EditorMarkUpAttribute(displayName: "constant register defaults")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<shader_postprocess_pixel_shader_constant_defaults> constant_register_defaults;
        
        [EditorMarkUpAttribute(displayName: "compiled shader")]
        [TagDataAttribute(maxSize: 32768, alignment: 4, maxSizeString: "k_max_ps_code_size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData compiled_shader;
        
        [EditorMarkUpAttribute(displayName: "compiled shader")]
        [TagDataAttribute(maxSize: 32768, alignment: 4, maxSizeString: "k_max_ps_code_size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData compiled_shader1;
        
        [EditorMarkUpAttribute(displayName: "compiled shader")]
        [TagDataAttribute(maxSize: 32768, alignment: 4, maxSizeString: "k_max_ps_code_size")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagData compiled_shader2;
    }
    #endregion
    
    #region shader_postprocess_pixel_shader_constant_defaults
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 32)]
    public class shader_postprocess_pixel_shader_constant_defaults
    {
        
        [EditorMarkUpAttribute(displayName: "defaults")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public int defaults;
    }
    #endregion
    
    #region pixel_shader_extern_map_block
    [TagBlockDefinitionAttribute(cacheFileSize: 2, tagFileSize: 2, alignment: 4, maxBlockCount: 6)]
    public class pixel_shader_extern_map_block
    {
        
        [EditorMarkUpAttribute(displayName: "switch parameter")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte switch_parameter;
        
        [EditorMarkUpAttribute(displayName: "case scalar")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte case_scalar;
    }
    #endregion
    
    #region pixel_shader_index_block
    [TagBlockDefinitionAttribute(cacheFileSize: 1, tagFileSize: 1, alignment: 4, maxBlockCount: 100)]
    public class pixel_shader_index_block
    {
        
        [EditorMarkUpAttribute(displayName: "pixel shader index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte pixel_shader_index;
    }
    #endregion
    
    #region shader_pass_postprocess_texture_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_texture_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "bitmap parameter index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte bitmap_parameter_index;
        
        [EditorMarkUpAttribute(displayName: "bitmap extern index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte bitmap_extern_index;
        
        [EditorMarkUpAttribute(displayName: "texture stage index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte texture_stage_index;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte flags;
    }
    #endregion
    
    #region shader_pass_postprocess_texture_state_block
    [TagBlockDefinitionAttribute(cacheFileSize: 24, tagFileSize: 24, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_texture_state_block
    {
        
        [PaddingAttribute(PaddingType.Skip, 24)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region pixel_shader_permutation_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 6, tagFileSize: 6, alignment: 4, maxBlockCount: 1024)]
    public class pixel_shader_permutation_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "enum index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short enum_index;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short flags;
        
        [EditorMarkUpAttribute(displayName: "combiners")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block combiners;
    }
    #endregion
    
    #region shader_pass_postprocess_extern_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 4, tagFileSize: 4, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_extern_new_block
    {
        
        [PaddingAttribute(PaddingType.Skip, 3)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [EditorMarkUpAttribute(displayName: "extern index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte extern_index;
    }
    #endregion
    
    #region shader_pass_postprocess_constant_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 7, tagFileSize: 7, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_constant_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "parameter name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parameter_name;
        
        [EditorMarkUpAttribute(displayName: "component mask")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte component_mask;
        
        [EditorMarkUpAttribute(displayName: "scale by texture stage")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte scale_by_texture_stage;
        
        [EditorMarkUpAttribute(displayName: "function index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte function_index;
    }
    #endregion
    
    #region shader_pass_postprocess_constant_info_new_block
    [TagBlockDefinitionAttribute(cacheFileSize: 7, tagFileSize: 7, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_constant_info_new_block
    {
        
        [EditorMarkUpAttribute(displayName: "parameter name")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public string_id parameter_name;
        
        [PaddingAttribute(PaddingType.Padding, 3)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
    }
    #endregion
    
    #region shader_pass_postprocess_implementation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 438, tagFileSize: 438, alignment: 4, maxBlockCount: 1024)]
    public class shader_pass_postprocess_implementation_block
    {
        
        [EditorMarkUpAttribute(displayName: "GPU State")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public shader_gpu_state_struct_block gpu_state;
        
        [EditorMarkUpAttribute(displayName: "GPU Constant State")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public shader_gpu_state_reference_struct_block gpu_constant_state;
        
        [EditorMarkUpAttribute(displayName: "GPU Volatile State")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public shader_gpu_state_reference_struct_block gpu_volatile_state;
        
        [EditorMarkUpAttribute(displayName: "GPU default state")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public shader_gpu_state_reference_struct_block gpu_default_state;
        
        [EditorMarkUpAttribute(displayName: "vertex shader")]
        [TagReferenceAttribute("vrtx")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public TagReference vertex_shader;
        
        [PaddingAttribute(PaddingType.Skip, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Skip, 8)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding2;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding3;
        
        [EditorMarkUpAttribute(displayName: "value externs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<extern_reference_block> value_externs;
        
        [EditorMarkUpAttribute(displayName: "color externs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<extern_reference_block> color_externs;
        
        [EditorMarkUpAttribute(displayName: "switch externs")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<extern_reference_block> switch_externs;
        
        [EditorMarkUpAttribute(displayName: "bitmap parameter count")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short bitmap_parameter_count;
        
        [PaddingAttribute(PaddingType.Padding, 2)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding4;
        
        [PaddingAttribute(PaddingType.Skip, 240)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding5;
        
        [EditorMarkUpAttribute(displayName: "pixel shader fragments")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_fragment_block> pixel_shader_fragments;
        
        [EditorMarkUpAttribute(displayName: "pixel shader permutations")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_permutation_block> pixel_shader_permutations;
        
        [EditorMarkUpAttribute(displayName: "pixel shader combiners")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_combiner_block> pixel_shader_combiners;
        
        [EditorMarkUpAttribute(displayName: "pixel shader constants")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block<pixel_shader_constant_block> pixel_shader_constants;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding6;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding7;
    }
    #endregion
    
    #region extern_reference_block
    [TagBlockDefinitionAttribute(cacheFileSize: 2, tagFileSize: 2, alignment: 4, maxBlockCount: 1024)]
    public class extern_reference_block
    {
        
        [EditorMarkUpAttribute(displayName: "parameter index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte parameter_index;
        
        [EditorMarkUpAttribute(displayName: "extern index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte extern_index;
    }
    #endregion
    
    #region pixel_shader_permutation_block
    [TagBlockDefinitionAttribute(cacheFileSize: 16, tagFileSize: 16, alignment: 4, maxBlockCount: 1024)]
    public class pixel_shader_permutation_block
    {
        
        [EditorMarkUpAttribute(displayName: "enum index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public short enum_index;
        
        [EditorMarkUpAttribute(displayName: "flags")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public b_flags flags;
        
        [EditorMarkUpAttribute(displayName: "constants")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block constants;
        
        [EditorMarkUpAttribute(displayName: "combiners")]
        [TagStructAttribute()]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public tag_block_index_struct_block combiners;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Skip, 4)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        [FlagsAttribute()]
        public enum b_flags : short
        {
            
            [EditorMarkUpAttribute(displayName: "has final combiner")]
            has_final_combiner = 0x1,
        }
    }
    #endregion
    
    #region pixel_shader_constant_block
    [TagBlockDefinitionAttribute(cacheFileSize: 6, tagFileSize: 6, alignment: 4, maxBlockCount: 1024)]
    public class pixel_shader_constant_block
    {
        
        [EditorMarkUpAttribute(displayName: "parameter type")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_parameter_type parameter_type;
        
        [EditorMarkUpAttribute(displayName: "combiner index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte combiner_index;
        
        [EditorMarkUpAttribute(displayName: "register index")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte register_index;
        
        [EditorMarkUpAttribute(displayName: "component mask")]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public e_component_mask component_mask;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding0;
        
        [PaddingAttribute(PaddingType.Padding, 1)]
        [EngineVersionAttribute(min: EngineVersion.Halo2Xbox, max: EngineVersion.Halo2Vista)]
        public byte[] _padding1;
        
        public enum e_parameter_type : byte
        {
            
            [EditorMarkUpAttribute(displayName: "Bitmap")]
            bitmap = 0x0,
            
            [EditorMarkUpAttribute(displayName: "Value")]
            value = 0x1,
            
            [EditorMarkUpAttribute(displayName: "Color")]
            color = 0x2,
            
            [EditorMarkUpAttribute(displayName: "Switch")]
            @switch = 0x3,
        }
        
        public enum e_component_mask : byte
        {
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "x (value")]
            x__value = 0x0,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "y (value")]
            y__value = 0x1,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "z (value")]
            z__value = 0x2,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "w (value")]
            w__value = 0x3,
            
            [EditorMarkUpAttribute(flags: EditorMarkUpFlags.Unknown1, displayName: "xyz/rgb (color")]
            xyz_rgb__color = 0x4,
        }
    }
    #endregion
}
